{
	"id": "9e6f52442bff96f5b69348a6d4e65a22",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.29",
	"solcLongVersion": "0.8.29+commit.ab55807c",
	"input": {
		"language": "Solidity",
		"sources": {
			"PRACTICA FINAL/VotingContract.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.0;\r\n\r\n//Librería ERC20 de OpenZeppelin \r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\";\r\n\r\ncontract VotingContract is ERC20{\r\n\r\n    uint256 public immutable tokenPrice; //Constante que almacena el precio por token en Wei de los tokens vendidos\r\n    uint256 public immutable maxTokens; //Constante que almacena el número máximo de tokens a vender.\r\n    uint256 public mintedTokens;//Estos son los tokens que se han emitido \r\n    address public _owner;\r\n\r\n    constructor(string memory name, string memory symbol, uint256 _tokenPrice, uint256 _maxTokens)ERC20(name,symbol){\r\n        require(_tokenPrice >0, \"El precio no puede ser menor que cero\");\r\n        require(_maxTokens >0 ,\"El maximo de tokens no puede ser menor que cero\");\r\n        tokenPrice=_tokenPrice;\r\n        maxTokens=_maxTokens; \r\n        mintedTokens=0;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender ==_owner , \"Solo puede llamar el owner\");\r\n        _;\r\n    }\r\n\r\n    /*\r\n    El término \"mintear\" proviene del inglés \"mint\", que significa \"acuñar\" o \"crear\"\r\n    en el contexto de monedas o activos\r\n    */\r\n    function mint(address destDir, uint256 tokensEmitidos) external  onlyOwner {\r\n        //Tenemos que verificar que la dirección del destino exista\r\n        require(destDir != address(0), \"La direccion destino no es valida\");\r\n        //Verificar que no hayan excedido el numero máximo de tokens\r\n         require(mintedTokens+tokensEmitidos<=maxTokens, \"No se pueden emitir mas tokens!\");\r\n         mintedTokens += tokensEmitidos;\r\n\r\n         /*FUNCIÓN MINT DE ERC20*/\r\n         _mint(destDir, tokensEmitidos);\r\n    }\r\n\r\n    function burn(address destDir, uint256 tokensEliminados) external onlyOwner{\r\n        //Tenemos que verificar que la dirección del destino exista\r\n        require(destDir != address(0), \"La direccion destino no es valida\");\r\n        //Verificar que no hayan excedido el numero máximo de tokens\r\n        require(tokensEliminados>0, \"No se puede eliminar 0 ni un numero negativo de tokens.\");\r\n\r\n        /*FUNCIÓN BURN DE ERC20*/\r\n        _burn(destDir, tokensEliminados);\r\n    }\r\n\r\n    function getTokenPrice() external view returns (uint256) { return tokenPrice;}\r\n    function getMaxTokens() external view returns (uint256){return maxTokens; }\r\n}"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"PRACTICA FINAL/VotingContract.sol": {
				"VotingContract": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "_tokenPrice",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_maxTokens",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "_owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "destDir",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokensEliminados",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMaxTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTokenPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "destDir",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokensEmitidos",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mintedTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"PRACTICA FINAL/VotingContract.sol\":212:2401  contract VotingContract is ERC20{... */\n  mstore(0x40, 0xc0)\n    /* \"PRACTICA FINAL/VotingContract.sol\":581:950  constructor(string memory name, string memory symbol, uint256 _tokenPrice, uint256 _maxTokens)ERC20(name,symbol){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"PRACTICA FINAL/VotingContract.sol\":681:685  name */\n  dup4\n    /* \"PRACTICA FINAL/VotingContract.sol\":686:692  symbol */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1656:1661  name_ */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x03\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x04\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"PRACTICA FINAL/VotingContract.sol\":725:726  0 */\n  0x00\n    /* \"PRACTICA FINAL/VotingContract.sol\":712:723  _tokenPrice */\n  dup3\n    /* \"PRACTICA FINAL/VotingContract.sol\":712:726  _tokenPrice >0 */\n  gt\n    /* \"PRACTICA FINAL/VotingContract.sol\":704:768  require(_tokenPrice >0, \"El precio no puede ser menor que cero\") */\n  tag_11\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_12\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_11:\n    /* \"PRACTICA FINAL/VotingContract.sol\":799:800  0 */\n  0x00\n    /* \"PRACTICA FINAL/VotingContract.sol\":787:797  _maxTokens */\n  dup2\n    /* \"PRACTICA FINAL/VotingContract.sol\":787:800  _maxTokens >0 */\n  gt\n    /* \"PRACTICA FINAL/VotingContract.sol\":779:852  require(_maxTokens >0 ,\"El maximo de tokens no puede ser menor que cero\") */\n  tag_14\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_15\n  swap1\n  tag_16\n  jump\t// in\ntag_15:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_14:\n    /* \"PRACTICA FINAL/VotingContract.sol\":874:885  _tokenPrice */\n  dup2\n    /* \"PRACTICA FINAL/VotingContract.sol\":863:885  tokenPrice=_tokenPrice */\n  0x80\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"PRACTICA FINAL/VotingContract.sol\":906:916  _maxTokens */\n  dup1\n    /* \"PRACTICA FINAL/VotingContract.sol\":896:916  maxTokens=_maxTokens */\n  0xa0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"PRACTICA FINAL/VotingContract.sol\":941:942  0 */\n  0x00\n    /* \"PRACTICA FINAL/VotingContract.sol\":928:940  mintedTokens */\n  0x05\n    /* \"PRACTICA FINAL/VotingContract.sol\":928:942  mintedTokens=0 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"PRACTICA FINAL/VotingContract.sol\":581:950  constructor(string memory name, string memory symbol, uint256 _tokenPrice, uint256 _maxTokens)ERC20(name,symbol){... */\n  pop\n  pop\n  pop\n  pop\n    /* \"PRACTICA FINAL/VotingContract.sol\":212:2401  contract VotingContract is ERC20{... */\n  jump(tag_17)\n    /* \"#utility.yul\":7:82   */\ntag_18:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_19:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_20:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  0x00\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_21:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  0x00\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_22:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  0x00\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_23:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_24:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_25:\n    /* \"#utility.yul\":957:984   */\n  tag_66\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_23\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_67\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_68\n  tag_24\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":1030:1118   */\ntag_67:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_26:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_70\n  tag_18\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_71\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_25\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_27:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_73\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_74\n  tag_24\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":1434:1490   */\ntag_73:\n    /* \"#utility.yul\":1508:1537   */\n  tag_75\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_23\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1749   */\ntag_28:\n    /* \"#utility.yul\":1699:1705   */\n  dup3\n    /* \"#utility.yul\":1694:1697   */\n  dup2\n    /* \"#utility.yul\":1689:1692   */\n  dup4\n    /* \"#utility.yul\":1683:1706   */\n  mcopy\n    /* \"#utility.yul\":1740:1741   */\n  0x00\n    /* \"#utility.yul\":1731:1737   */\n  dup4\n    /* \"#utility.yul\":1726:1729   */\n  dup4\n    /* \"#utility.yul\":1722:1738   */\n  add\n    /* \"#utility.yul\":1715:1742   */\n  mstore\n    /* \"#utility.yul\":1610:1749   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1755:2189   */\ntag_29:\n    /* \"#utility.yul\":1844:1849   */\n  0x00\n    /* \"#utility.yul\":1869:1935   */\n  tag_78\n    /* \"#utility.yul\":1885:1934   */\n  tag_79\n    /* \"#utility.yul\":1927:1933   */\n  dup5\n    /* \"#utility.yul\":1885:1934   */\n  tag_27\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":1869:1935   */\n  tag_26\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":1860:1935   */\n  swap1\n  pop\n    /* \"#utility.yul\":1958:1964   */\n  dup3\n    /* \"#utility.yul\":1951:1956   */\n  dup2\n    /* \"#utility.yul\":1944:1965   */\n  mstore\n    /* \"#utility.yul\":1996:2000   */\n  0x20\n    /* \"#utility.yul\":1989:1994   */\n  dup2\n    /* \"#utility.yul\":1985:2001   */\n  add\n    /* \"#utility.yul\":2034:2037   */\n  dup5\n    /* \"#utility.yul\":2025:2031   */\n  dup5\n    /* \"#utility.yul\":2020:2023   */\n  dup5\n    /* \"#utility.yul\":2016:2032   */\n  add\n    /* \"#utility.yul\":2013:2038   */\n  gt\n    /* \"#utility.yul\":2010:2122   */\n  iszero\n  tag_80\n  jumpi\n    /* \"#utility.yul\":2041:2120   */\n  tag_81\n  tag_22\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":2010:2122   */\ntag_80:\n    /* \"#utility.yul\":2131:2183   */\n  tag_82\n    /* \"#utility.yul\":2176:2182   */\n  dup5\n    /* \"#utility.yul\":2171:2174   */\n  dup3\n    /* \"#utility.yul\":2166:2169   */\n  dup6\n    /* \"#utility.yul\":2131:2183   */\n  tag_28\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":1850:2189   */\n  pop\n    /* \"#utility.yul\":1755:2189   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2209:2564   */\ntag_30:\n    /* \"#utility.yul\":2276:2281   */\n  0x00\n    /* \"#utility.yul\":2325:2328   */\n  dup3\n    /* \"#utility.yul\":2318:2322   */\n  0x1f\n    /* \"#utility.yul\":2310:2316   */\n  dup4\n    /* \"#utility.yul\":2306:2323   */\n  add\n    /* \"#utility.yul\":2302:2329   */\n  slt\n    /* \"#utility.yul\":2292:2414   */\n  tag_84\n  jumpi\n    /* \"#utility.yul\":2333:2412   */\n  tag_85\n  tag_21\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":2292:2414   */\ntag_84:\n    /* \"#utility.yul\":2443:2449   */\n  dup2\n    /* \"#utility.yul\":2437:2450   */\n  mload\n    /* \"#utility.yul\":2468:2558   */\n  tag_86\n    /* \"#utility.yul\":2554:2557   */\n  dup5\n    /* \"#utility.yul\":2546:2552   */\n  dup3\n    /* \"#utility.yul\":2539:2543   */\n  0x20\n    /* \"#utility.yul\":2531:2537   */\n  dup7\n    /* \"#utility.yul\":2527:2544   */\n  add\n    /* \"#utility.yul\":2468:2558   */\n  tag_29\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":2459:2558   */\n  swap2\n  pop\n    /* \"#utility.yul\":2282:2564   */\n  pop\n    /* \"#utility.yul\":2209:2564   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2570:2647   */\ntag_31:\n    /* \"#utility.yul\":2607:2614   */\n  0x00\n    /* \"#utility.yul\":2636:2641   */\n  dup2\n    /* \"#utility.yul\":2625:2641   */\n  swap1\n  pop\n    /* \"#utility.yul\":2570:2647   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2653:2775   */\ntag_32:\n    /* \"#utility.yul\":2726:2750   */\n  tag_89\n    /* \"#utility.yul\":2744:2749   */\n  dup2\n    /* \"#utility.yul\":2726:2750   */\n  tag_31\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":2719:2724   */\n  dup2\n    /* \"#utility.yul\":2716:2751   */\n  eq\n    /* \"#utility.yul\":2706:2769   */\n  tag_90\n  jumpi\n    /* \"#utility.yul\":2765:2766   */\n  0x00\n    /* \"#utility.yul\":2762:2763   */\n  0x00\n    /* \"#utility.yul\":2755:2767   */\n  revert\n    /* \"#utility.yul\":2706:2769   */\ntag_90:\n    /* \"#utility.yul\":2653:2775   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2781:2924   */\ntag_33:\n    /* \"#utility.yul\":2838:2843   */\n  0x00\n    /* \"#utility.yul\":2869:2875   */\n  dup2\n    /* \"#utility.yul\":2863:2876   */\n  mload\n    /* \"#utility.yul\":2854:2876   */\n  swap1\n  pop\n    /* \"#utility.yul\":2885:2918   */\n  tag_92\n    /* \"#utility.yul\":2912:2917   */\n  dup2\n    /* \"#utility.yul\":2885:2918   */\n  tag_32\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":2781:2924   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2930:4096   */\ntag_3:\n    /* \"#utility.yul\":3047:3053   */\n  0x00\n    /* \"#utility.yul\":3055:3061   */\n  0x00\n    /* \"#utility.yul\":3063:3069   */\n  0x00\n    /* \"#utility.yul\":3071:3077   */\n  0x00\n    /* \"#utility.yul\":3120:3123   */\n  0x80\n    /* \"#utility.yul\":3108:3117   */\n  dup6\n    /* \"#utility.yul\":3099:3106   */\n  dup8\n    /* \"#utility.yul\":3095:3118   */\n  sub\n    /* \"#utility.yul\":3091:3124   */\n  slt\n    /* \"#utility.yul\":3088:3208   */\n  iszero\n  tag_94\n  jumpi\n    /* \"#utility.yul\":3127:3206   */\n  tag_95\n  tag_19\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":3088:3208   */\ntag_94:\n    /* \"#utility.yul\":3268:3269   */\n  0x00\n    /* \"#utility.yul\":3257:3266   */\n  dup6\n    /* \"#utility.yul\":3253:3270   */\n  add\n    /* \"#utility.yul\":3247:3271   */\n  mload\n    /* \"#utility.yul\":3298:3316   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3290:3296   */\n  dup2\n    /* \"#utility.yul\":3287:3317   */\n  gt\n    /* \"#utility.yul\":3284:3401   */\n  iszero\n  tag_96\n  jumpi\n    /* \"#utility.yul\":3320:3399   */\n  tag_97\n  tag_20\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":3284:3401   */\ntag_96:\n    /* \"#utility.yul\":3425:3499   */\n  tag_98\n    /* \"#utility.yul\":3491:3498   */\n  dup8\n    /* \"#utility.yul\":3482:3488   */\n  dup3\n    /* \"#utility.yul\":3471:3480   */\n  dup9\n    /* \"#utility.yul\":3467:3489   */\n  add\n    /* \"#utility.yul\":3425:3499   */\n  tag_30\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":3415:3499   */\n  swap5\n  pop\n    /* \"#utility.yul\":3218:3509   */\n  pop\n    /* \"#utility.yul\":3569:3571   */\n  0x20\n    /* \"#utility.yul\":3558:3567   */\n  dup6\n    /* \"#utility.yul\":3554:3572   */\n  add\n    /* \"#utility.yul\":3548:3573   */\n  mload\n    /* \"#utility.yul\":3600:3618   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3592:3598   */\n  dup2\n    /* \"#utility.yul\":3589:3619   */\n  gt\n    /* \"#utility.yul\":3586:3703   */\n  iszero\n  tag_99\n  jumpi\n    /* \"#utility.yul\":3622:3701   */\n  tag_100\n  tag_20\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":3586:3703   */\ntag_99:\n    /* \"#utility.yul\":3727:3801   */\n  tag_101\n    /* \"#utility.yul\":3793:3800   */\n  dup8\n    /* \"#utility.yul\":3784:3790   */\n  dup3\n    /* \"#utility.yul\":3773:3782   */\n  dup9\n    /* \"#utility.yul\":3769:3791   */\n  add\n    /* \"#utility.yul\":3727:3801   */\n  tag_30\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":3717:3801   */\n  swap4\n  pop\n    /* \"#utility.yul\":3519:3811   */\n  pop\n    /* \"#utility.yul\":3850:3852   */\n  0x40\n    /* \"#utility.yul\":3876:3940   */\n  tag_102\n    /* \"#utility.yul\":3932:3939   */\n  dup8\n    /* \"#utility.yul\":3923:3929   */\n  dup3\n    /* \"#utility.yul\":3912:3921   */\n  dup9\n    /* \"#utility.yul\":3908:3930   */\n  add\n    /* \"#utility.yul\":3876:3940   */\n  tag_33\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":3866:3940   */\n  swap3\n  pop\n    /* \"#utility.yul\":3821:3950   */\n  pop\n    /* \"#utility.yul\":3989:3991   */\n  0x60\n    /* \"#utility.yul\":4015:4079   */\n  tag_103\n    /* \"#utility.yul\":4071:4078   */\n  dup8\n    /* \"#utility.yul\":4062:4068   */\n  dup3\n    /* \"#utility.yul\":4051:4060   */\n  dup9\n    /* \"#utility.yul\":4047:4069   */\n  add\n    /* \"#utility.yul\":4015:4079   */\n  tag_33\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":4005:4079   */\n  swap2\n  pop\n    /* \"#utility.yul\":3960:4089   */\n  pop\n    /* \"#utility.yul\":2930:4096   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4102:4201   */\ntag_34:\n    /* \"#utility.yul\":4154:4160   */\n  0x00\n    /* \"#utility.yul\":4188:4193   */\n  dup2\n    /* \"#utility.yul\":4182:4194   */\n  mload\n    /* \"#utility.yul\":4172:4194   */\n  swap1\n  pop\n    /* \"#utility.yul\":4102:4201   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4207:4387   */\ntag_35:\n    /* \"#utility.yul\":4255:4332   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4252:4253   */\n  0x00\n    /* \"#utility.yul\":4245:4333   */\n  mstore\n    /* \"#utility.yul\":4352:4356   */\n  0x22\n    /* \"#utility.yul\":4349:4350   */\n  0x04\n    /* \"#utility.yul\":4342:4357   */\n  mstore\n    /* \"#utility.yul\":4376:4380   */\n  0x24\n    /* \"#utility.yul\":4373:4374   */\n  0x00\n    /* \"#utility.yul\":4366:4381   */\n  revert\n    /* \"#utility.yul\":4393:4713   */\ntag_36:\n    /* \"#utility.yul\":4437:4443   */\n  0x00\n    /* \"#utility.yul\":4474:4475   */\n  0x02\n    /* \"#utility.yul\":4468:4472   */\n  dup3\n    /* \"#utility.yul\":4464:4476   */\n  div\n    /* \"#utility.yul\":4454:4476   */\n  swap1\n  pop\n    /* \"#utility.yul\":4521:4522   */\n  0x01\n    /* \"#utility.yul\":4515:4519   */\n  dup3\n    /* \"#utility.yul\":4511:4523   */\n  and\n    /* \"#utility.yul\":4542:4560   */\n  dup1\n    /* \"#utility.yul\":4532:4613   */\n  tag_107\n  jumpi\n    /* \"#utility.yul\":4598:4602   */\n  0x7f\n    /* \"#utility.yul\":4590:4596   */\n  dup3\n    /* \"#utility.yul\":4586:4603   */\n  and\n    /* \"#utility.yul\":4576:4603   */\n  swap2\n  pop\n    /* \"#utility.yul\":4532:4613   */\ntag_107:\n    /* \"#utility.yul\":4660:4662   */\n  0x20\n    /* \"#utility.yul\":4652:4658   */\n  dup3\n    /* \"#utility.yul\":4649:4663   */\n  lt\n    /* \"#utility.yul\":4629:4647   */\n  dup2\n    /* \"#utility.yul\":4626:4664   */\n  sub\n    /* \"#utility.yul\":4623:4707   */\n  tag_108\n  jumpi\n    /* \"#utility.yul\":4679:4697   */\n  tag_109\n  tag_35\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":4623:4707   */\ntag_108:\n    /* \"#utility.yul\":4444:4713   */\n  pop\n    /* \"#utility.yul\":4393:4713   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4719:4860   */\ntag_37:\n    /* \"#utility.yul\":4768:4772   */\n  0x00\n    /* \"#utility.yul\":4791:4794   */\n  dup2\n    /* \"#utility.yul\":4783:4794   */\n  swap1\n  pop\n    /* \"#utility.yul\":4814:4817   */\n  dup2\n    /* \"#utility.yul\":4811:4812   */\n  0x00\n    /* \"#utility.yul\":4804:4818   */\n  mstore\n    /* \"#utility.yul\":4848:4852   */\n  0x20\n    /* \"#utility.yul\":4845:4846   */\n  0x00\n    /* \"#utility.yul\":4835:4853   */\n  keccak256\n    /* \"#utility.yul\":4827:4853   */\n  swap1\n  pop\n    /* \"#utility.yul\":4719:4860   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4866:4959   */\ntag_38:\n    /* \"#utility.yul\":4903:4909   */\n  0x00\n    /* \"#utility.yul\":4950:4952   */\n  0x20\n    /* \"#utility.yul\":4945:4947   */\n  0x1f\n    /* \"#utility.yul\":4938:4943   */\n  dup4\n    /* \"#utility.yul\":4934:4948   */\n  add\n    /* \"#utility.yul\":4930:4953   */\n  div\n    /* \"#utility.yul\":4920:4953   */\n  swap1\n  pop\n    /* \"#utility.yul\":4866:4959   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4965:5072   */\ntag_39:\n    /* \"#utility.yul\":5009:5017   */\n  0x00\n    /* \"#utility.yul\":5059:5064   */\n  dup3\n    /* \"#utility.yul\":5053:5057   */\n  dup3\n    /* \"#utility.yul\":5049:5065   */\n  shl\n    /* \"#utility.yul\":5028:5065   */\n  swap1\n  pop\n    /* \"#utility.yul\":4965:5072   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5078:5471   */\ntag_40:\n    /* \"#utility.yul\":5147:5153   */\n  0x00\n    /* \"#utility.yul\":5197:5198   */\n  0x08\n    /* \"#utility.yul\":5185:5195   */\n  dup4\n    /* \"#utility.yul\":5181:5199   */\n  mul\n    /* \"#utility.yul\":5220:5317   */\n  tag_114\n    /* \"#utility.yul\":5250:5316   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5239:5248   */\n  dup3\n    /* \"#utility.yul\":5220:5317   */\n  tag_39\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":5338:5377   */\n  tag_115\n    /* \"#utility.yul\":5368:5376   */\n  dup7\n    /* \"#utility.yul\":5357:5366   */\n  dup4\n    /* \"#utility.yul\":5338:5377   */\n  tag_39\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":5326:5377   */\n  swap6\n  pop\n    /* \"#utility.yul\":5410:5414   */\n  dup1\n    /* \"#utility.yul\":5406:5415   */\n  not\n    /* \"#utility.yul\":5399:5404   */\n  dup5\n    /* \"#utility.yul\":5395:5416   */\n  and\n    /* \"#utility.yul\":5386:5416   */\n  swap4\n  pop\n    /* \"#utility.yul\":5459:5463   */\n  dup1\n    /* \"#utility.yul\":5449:5457   */\n  dup7\n    /* \"#utility.yul\":5445:5464   */\n  and\n    /* \"#utility.yul\":5438:5443   */\n  dup5\n    /* \"#utility.yul\":5435:5465   */\n  or\n    /* \"#utility.yul\":5425:5465   */\n  swap3\n  pop\n    /* \"#utility.yul\":5154:5471   */\n  pop\n  pop\n    /* \"#utility.yul\":5078:5471   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5477:5537   */\ntag_41:\n    /* \"#utility.yul\":5505:5508   */\n  0x00\n    /* \"#utility.yul\":5526:5531   */\n  dup2\n    /* \"#utility.yul\":5519:5531   */\n  swap1\n  pop\n    /* \"#utility.yul\":5477:5537   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5543:5685   */\ntag_42:\n    /* \"#utility.yul\":5593:5602   */\n  0x00\n    /* \"#utility.yul\":5626:5679   */\n  tag_118\n    /* \"#utility.yul\":5644:5678   */\n  tag_119\n    /* \"#utility.yul\":5653:5677   */\n  tag_120\n    /* \"#utility.yul\":5671:5676   */\n  dup5\n    /* \"#utility.yul\":5653:5677   */\n  tag_31\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":5644:5678   */\n  tag_41\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":5626:5679   */\n  tag_31\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":5613:5679   */\n  swap1\n  pop\n    /* \"#utility.yul\":5543:5685   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5691:5766   */\ntag_43:\n    /* \"#utility.yul\":5734:5737   */\n  0x00\n    /* \"#utility.yul\":5755:5760   */\n  dup2\n    /* \"#utility.yul\":5748:5760   */\n  swap1\n  pop\n    /* \"#utility.yul\":5691:5766   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5772:6041   */\ntag_44:\n    /* \"#utility.yul\":5882:5921   */\n  tag_123\n    /* \"#utility.yul\":5913:5920   */\n  dup4\n    /* \"#utility.yul\":5882:5921   */\n  tag_42\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":5943:6034   */\n  tag_124\n    /* \"#utility.yul\":5992:6033   */\n  tag_125\n    /* \"#utility.yul\":6016:6032   */\n  dup3\n    /* \"#utility.yul\":5992:6033   */\n  tag_43\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":5984:5990   */\n  dup5\n    /* \"#utility.yul\":5977:5981   */\n  dup5\n    /* \"#utility.yul\":5971:5982   */\n  sload\n    /* \"#utility.yul\":5943:6034   */\n  tag_40\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":5937:5941   */\n  dup3\n    /* \"#utility.yul\":5930:6035   */\n  sstore\n    /* \"#utility.yul\":5848:6041   */\n  pop\n    /* \"#utility.yul\":5772:6041   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6047:6120   */\ntag_45:\n    /* \"#utility.yul\":6092:6095   */\n  0x00\n    /* \"#utility.yul\":6113:6114   */\n  0x00\n    /* \"#utility.yul\":6106:6114   */\n  swap1\n  pop\n    /* \"#utility.yul\":6047:6120   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":6126:6315   */\ntag_46:\n    /* \"#utility.yul\":6203:6235   */\n  tag_128\n  tag_45\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":6244:6309   */\n  tag_129\n    /* \"#utility.yul\":6302:6308   */\n  dup2\n    /* \"#utility.yul\":6294:6300   */\n  dup5\n    /* \"#utility.yul\":6288:6292   */\n  dup5\n    /* \"#utility.yul\":6244:6309   */\n  tag_44\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":6179:6315   */\n  pop\n    /* \"#utility.yul\":6126:6315   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6321:6507   */\ntag_47:\n    /* \"#utility.yul\":6381:6501   */\ntag_131:\n    /* \"#utility.yul\":6398:6401   */\n  dup2\n    /* \"#utility.yul\":6391:6396   */\n  dup2\n    /* \"#utility.yul\":6388:6402   */\n  lt\n    /* \"#utility.yul\":6381:6501   */\n  iszero\n  tag_133\n  jumpi\n    /* \"#utility.yul\":6452:6491   */\n  tag_134\n    /* \"#utility.yul\":6489:6490   */\n  0x00\n    /* \"#utility.yul\":6482:6487   */\n  dup3\n    /* \"#utility.yul\":6452:6491   */\n  tag_46\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":6425:6426   */\n  0x01\n    /* \"#utility.yul\":6418:6423   */\n  dup2\n    /* \"#utility.yul\":6414:6427   */\n  add\n    /* \"#utility.yul\":6405:6427   */\n  swap1\n  pop\n    /* \"#utility.yul\":6381:6501   */\n  jump(tag_131)\ntag_133:\n    /* \"#utility.yul\":6321:6507   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6513:7056   */\ntag_48:\n    /* \"#utility.yul\":6614:6616   */\n  0x1f\n    /* \"#utility.yul\":6609:6612   */\n  dup3\n    /* \"#utility.yul\":6606:6617   */\n  gt\n    /* \"#utility.yul\":6603:7049   */\n  iszero\n  tag_136\n  jumpi\n    /* \"#utility.yul\":6648:6686   */\n  tag_137\n    /* \"#utility.yul\":6680:6685   */\n  dup2\n    /* \"#utility.yul\":6648:6686   */\n  tag_37\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":6732:6761   */\n  tag_138\n    /* \"#utility.yul\":6750:6760   */\n  dup5\n    /* \"#utility.yul\":6732:6761   */\n  tag_38\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":6722:6730   */\n  dup2\n    /* \"#utility.yul\":6718:6762   */\n  add\n    /* \"#utility.yul\":6915:6917   */\n  0x20\n    /* \"#utility.yul\":6903:6913   */\n  dup6\n    /* \"#utility.yul\":6900:6918   */\n  lt\n    /* \"#utility.yul\":6897:6946   */\n  iszero\n  tag_139\n  jumpi\n    /* \"#utility.yul\":6936:6944   */\n  dup2\n    /* \"#utility.yul\":6921:6944   */\n  swap1\n  pop\n    /* \"#utility.yul\":6897:6946   */\ntag_139:\n    /* \"#utility.yul\":6959:7039   */\n  tag_140\n    /* \"#utility.yul\":7015:7037   */\n  tag_141\n    /* \"#utility.yul\":7033:7036   */\n  dup6\n    /* \"#utility.yul\":7015:7037   */\n  tag_38\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":7005:7013   */\n  dup4\n    /* \"#utility.yul\":7001:7038   */\n  add\n    /* \"#utility.yul\":6988:6999   */\n  dup3\n    /* \"#utility.yul\":6959:7039   */\n  tag_47\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":6618:7049   */\n  pop\n  pop\n    /* \"#utility.yul\":6603:7049   */\ntag_136:\n    /* \"#utility.yul\":6513:7056   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7062:7179   */\ntag_49:\n    /* \"#utility.yul\":7116:7124   */\n  0x00\n    /* \"#utility.yul\":7166:7171   */\n  dup3\n    /* \"#utility.yul\":7160:7164   */\n  dup3\n    /* \"#utility.yul\":7156:7172   */\n  shr\n    /* \"#utility.yul\":7135:7172   */\n  swap1\n  pop\n    /* \"#utility.yul\":7062:7179   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7185:7354   */\ntag_50:\n    /* \"#utility.yul\":7229:7235   */\n  0x00\n    /* \"#utility.yul\":7262:7313   */\n  tag_144\n    /* \"#utility.yul\":7310:7311   */\n  0x00\n    /* \"#utility.yul\":7306:7312   */\n  not\n    /* \"#utility.yul\":7298:7303   */\n  dup5\n    /* \"#utility.yul\":7295:7296   */\n  0x08\n    /* \"#utility.yul\":7291:7304   */\n  mul\n    /* \"#utility.yul\":7262:7313   */\n  tag_49\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":7258:7314   */\n  not\n    /* \"#utility.yul\":7343:7347   */\n  dup1\n    /* \"#utility.yul\":7337:7341   */\n  dup4\n    /* \"#utility.yul\":7333:7348   */\n  and\n    /* \"#utility.yul\":7323:7348   */\n  swap2\n  pop\n    /* \"#utility.yul\":7236:7354   */\n  pop\n    /* \"#utility.yul\":7185:7354   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7359:7654   */\ntag_51:\n    /* \"#utility.yul\":7435:7439   */\n  0x00\n    /* \"#utility.yul\":7581:7610   */\n  tag_146\n    /* \"#utility.yul\":7606:7609   */\n  dup4\n    /* \"#utility.yul\":7600:7604   */\n  dup4\n    /* \"#utility.yul\":7581:7610   */\n  tag_50\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":7573:7610   */\n  swap2\n  pop\n    /* \"#utility.yul\":7643:7646   */\n  dup3\n    /* \"#utility.yul\":7640:7641   */\n  0x02\n    /* \"#utility.yul\":7636:7647   */\n  mul\n    /* \"#utility.yul\":7630:7634   */\n  dup3\n    /* \"#utility.yul\":7627:7648   */\n  or\n    /* \"#utility.yul\":7619:7648   */\n  swap1\n  pop\n    /* \"#utility.yul\":7359:7654   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7659:9054   */\ntag_8:\n    /* \"#utility.yul\":7776:7813   */\n  tag_148\n    /* \"#utility.yul\":7809:7812   */\n  dup3\n    /* \"#utility.yul\":7776:7813   */\n  tag_34\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":7878:7896   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7870:7876   */\n  dup2\n    /* \"#utility.yul\":7867:7897   */\n  gt\n    /* \"#utility.yul\":7864:7920   */\n  iszero\n  tag_149\n  jumpi\n    /* \"#utility.yul\":7900:7918   */\n  tag_150\n  tag_24\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":7864:7920   */\ntag_149:\n    /* \"#utility.yul\":7944:7982   */\n  tag_151\n    /* \"#utility.yul\":7976:7980   */\n  dup3\n    /* \"#utility.yul\":7970:7981   */\n  sload\n    /* \"#utility.yul\":7944:7982   */\n  tag_36\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":8029:8096   */\n  tag_152\n    /* \"#utility.yul\":8089:8095   */\n  dup3\n    /* \"#utility.yul\":8081:8087   */\n  dup3\n    /* \"#utility.yul\":8075:8079   */\n  dup6\n    /* \"#utility.yul\":8029:8096   */\n  tag_48\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":8123:8124   */\n  0x00\n    /* \"#utility.yul\":8147:8151   */\n  0x20\n    /* \"#utility.yul\":8134:8151   */\n  swap1\n  pop\n    /* \"#utility.yul\":8179:8181   */\n  0x1f\n    /* \"#utility.yul\":8171:8177   */\n  dup4\n    /* \"#utility.yul\":8168:8182   */\n  gt\n    /* \"#utility.yul\":8196:8197   */\n  0x01\n    /* \"#utility.yul\":8191:8809   */\n  dup2\n  eq\n  tag_154\n  jumpi\n    /* \"#utility.yul\":8853:8854   */\n  0x00\n    /* \"#utility.yul\":8870:8876   */\n  dup5\n    /* \"#utility.yul\":8867:8944   */\n  iszero\n  tag_155\n  jumpi\n    /* \"#utility.yul\":8919:8928   */\n  dup3\n    /* \"#utility.yul\":8914:8917   */\n  dup8\n    /* \"#utility.yul\":8910:8929   */\n  add\n    /* \"#utility.yul\":8904:8930   */\n  mload\n    /* \"#utility.yul\":8895:8930   */\n  swap1\n  pop\n    /* \"#utility.yul\":8867:8944   */\ntag_155:\n    /* \"#utility.yul\":8970:9037   */\n  tag_156\n    /* \"#utility.yul\":9030:9036   */\n  dup6\n    /* \"#utility.yul\":9023:9028   */\n  dup3\n    /* \"#utility.yul\":8970:9037   */\n  tag_51\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":8964:8968   */\n  dup7\n    /* \"#utility.yul\":8957:9038   */\n  sstore\n    /* \"#utility.yul\":8826:9048   */\n  pop\n    /* \"#utility.yul\":8161:9048   */\n  jump(tag_153)\n    /* \"#utility.yul\":8191:8809   */\ntag_154:\n    /* \"#utility.yul\":8243:8247   */\n  0x1f\n    /* \"#utility.yul\":8239:8248   */\n  not\n    /* \"#utility.yul\":8231:8237   */\n  dup5\n    /* \"#utility.yul\":8227:8249   */\n  and\n    /* \"#utility.yul\":8277:8314   */\n  tag_157\n    /* \"#utility.yul\":8309:8313   */\n  dup7\n    /* \"#utility.yul\":8277:8314   */\n  tag_37\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":8336:8337   */\n  0x00\n    /* \"#utility.yul\":8350:8558   */\ntag_158:\n    /* \"#utility.yul\":8364:8371   */\n  dup3\n    /* \"#utility.yul\":8361:8362   */\n  dup2\n    /* \"#utility.yul\":8358:8372   */\n  lt\n    /* \"#utility.yul\":8350:8558   */\n  iszero\n  tag_160\n  jumpi\n    /* \"#utility.yul\":8443:8452   */\n  dup5\n    /* \"#utility.yul\":8438:8441   */\n  dup10\n    /* \"#utility.yul\":8434:8453   */\n  add\n    /* \"#utility.yul\":8428:8454   */\n  mload\n    /* \"#utility.yul\":8420:8426   */\n  dup3\n    /* \"#utility.yul\":8413:8455   */\n  sstore\n    /* \"#utility.yul\":8494:8495   */\n  0x01\n    /* \"#utility.yul\":8486:8492   */\n  dup3\n    /* \"#utility.yul\":8482:8496   */\n  add\n    /* \"#utility.yul\":8472:8496   */\n  swap2\n  pop\n    /* \"#utility.yul\":8541:8543   */\n  0x20\n    /* \"#utility.yul\":8530:8539   */\n  dup6\n    /* \"#utility.yul\":8526:8544   */\n  add\n    /* \"#utility.yul\":8513:8544   */\n  swap5\n  pop\n    /* \"#utility.yul\":8387:8391   */\n  0x20\n    /* \"#utility.yul\":8384:8385   */\n  dup2\n    /* \"#utility.yul\":8380:8392   */\n  add\n    /* \"#utility.yul\":8375:8392   */\n  swap1\n  pop\n    /* \"#utility.yul\":8350:8558   */\n  jump(tag_158)\ntag_160:\n    /* \"#utility.yul\":8586:8592   */\n  dup7\n    /* \"#utility.yul\":8577:8584   */\n  dup4\n    /* \"#utility.yul\":8574:8593   */\n  lt\n    /* \"#utility.yul\":8571:8750   */\n  iszero\n  tag_161\n  jumpi\n    /* \"#utility.yul\":8644:8653   */\n  dup5\n    /* \"#utility.yul\":8639:8642   */\n  dup10\n    /* \"#utility.yul\":8635:8654   */\n  add\n    /* \"#utility.yul\":8629:8655   */\n  mload\n    /* \"#utility.yul\":8687:8735   */\n  tag_162\n    /* \"#utility.yul\":8729:8733   */\n  0x1f\n    /* \"#utility.yul\":8721:8727   */\n  dup10\n    /* \"#utility.yul\":8717:8734   */\n  and\n    /* \"#utility.yul\":8706:8715   */\n  dup3\n    /* \"#utility.yul\":8687:8735   */\n  tag_50\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":8679:8685   */\n  dup4\n    /* \"#utility.yul\":8672:8736   */\n  sstore\n    /* \"#utility.yul\":8594:8750   */\n  pop\n    /* \"#utility.yul\":8571:8750   */\ntag_161:\n    /* \"#utility.yul\":8796:8797   */\n  0x01\n    /* \"#utility.yul\":8792:8793   */\n  0x02\n    /* \"#utility.yul\":8784:8790   */\n  dup9\n    /* \"#utility.yul\":8780:8794   */\n  mul\n    /* \"#utility.yul\":8776:8798   */\n  add\n    /* \"#utility.yul\":8770:8774   */\n  dup9\n    /* \"#utility.yul\":8763:8799   */\n  sstore\n    /* \"#utility.yul\":8198:8809   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8161:9048   */\ntag_153:\n  pop\n    /* \"#utility.yul\":7751:9054   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7659:9054   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9060:9229   */\ntag_52:\n    /* \"#utility.yul\":9144:9155   */\n  0x00\n    /* \"#utility.yul\":9178:9184   */\n  dup3\n    /* \"#utility.yul\":9173:9176   */\n  dup3\n    /* \"#utility.yul\":9166:9185   */\n  mstore\n    /* \"#utility.yul\":9218:9222   */\n  0x20\n    /* \"#utility.yul\":9213:9216   */\n  dup3\n    /* \"#utility.yul\":9209:9223   */\n  add\n    /* \"#utility.yul\":9194:9223   */\n  swap1\n  pop\n    /* \"#utility.yul\":9060:9229   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9235:9459   */\ntag_53:\n    /* \"#utility.yul\":9375:9409   */\n  0x456c2070726563696f206e6f20707565646520736572206d656e6f7220717565\n    /* \"#utility.yul\":9371:9372   */\n  0x00\n    /* \"#utility.yul\":9363:9369   */\n  dup3\n    /* \"#utility.yul\":9359:9373   */\n  add\n    /* \"#utility.yul\":9352:9410   */\n  mstore\n    /* \"#utility.yul\":9444:9451   */\n  0x206365726f000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":9439:9441   */\n  0x20\n    /* \"#utility.yul\":9431:9437   */\n  dup3\n    /* \"#utility.yul\":9427:9442   */\n  add\n    /* \"#utility.yul\":9420:9452   */\n  mstore\n    /* \"#utility.yul\":9235:9459   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9465:9831   */\ntag_54:\n    /* \"#utility.yul\":9607:9610   */\n  0x00\n    /* \"#utility.yul\":9628:9695   */\n  tag_166\n    /* \"#utility.yul\":9692:9694   */\n  0x25\n    /* \"#utility.yul\":9687:9690   */\n  dup4\n    /* \"#utility.yul\":9628:9695   */\n  tag_52\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":9621:9695   */\n  swap2\n  pop\n    /* \"#utility.yul\":9704:9797   */\n  tag_167\n    /* \"#utility.yul\":9793:9796   */\n  dup3\n    /* \"#utility.yul\":9704:9797   */\n  tag_53\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":9822:9824   */\n  0x40\n    /* \"#utility.yul\":9817:9820   */\n  dup3\n    /* \"#utility.yul\":9813:9825   */\n  add\n    /* \"#utility.yul\":9806:9825   */\n  swap1\n  pop\n    /* \"#utility.yul\":9465:9831   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9837:10256   */\ntag_13:\n    /* \"#utility.yul\":10003:10007   */\n  0x00\n    /* \"#utility.yul\":10041:10043   */\n  0x20\n    /* \"#utility.yul\":10030:10039   */\n  dup3\n    /* \"#utility.yul\":10026:10044   */\n  add\n    /* \"#utility.yul\":10018:10044   */\n  swap1\n  pop\n    /* \"#utility.yul\":10090:10099   */\n  dup2\n    /* \"#utility.yul\":10084:10088   */\n  dup2\n    /* \"#utility.yul\":10080:10100   */\n  sub\n    /* \"#utility.yul\":10076:10077   */\n  0x00\n    /* \"#utility.yul\":10065:10074   */\n  dup4\n    /* \"#utility.yul\":10061:10078   */\n  add\n    /* \"#utility.yul\":10054:10101   */\n  mstore\n    /* \"#utility.yul\":10118:10249   */\n  tag_169\n    /* \"#utility.yul\":10244:10248   */\n  dup2\n    /* \"#utility.yul\":10118:10249   */\n  tag_54\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":10110:10249   */\n  swap1\n  pop\n    /* \"#utility.yul\":9837:10256   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10262:10496   */\ntag_55:\n    /* \"#utility.yul\":10402:10436   */\n  0x456c206d6178696d6f20646520746f6b656e73206e6f20707565646520736572\n    /* \"#utility.yul\":10398:10399   */\n  0x00\n    /* \"#utility.yul\":10390:10396   */\n  dup3\n    /* \"#utility.yul\":10386:10400   */\n  add\n    /* \"#utility.yul\":10379:10437   */\n  mstore\n    /* \"#utility.yul\":10471:10488   */\n  0x206d656e6f7220717565206365726f0000000000000000000000000000000000\n    /* \"#utility.yul\":10466:10468   */\n  0x20\n    /* \"#utility.yul\":10458:10464   */\n  dup3\n    /* \"#utility.yul\":10454:10469   */\n  add\n    /* \"#utility.yul\":10447:10489   */\n  mstore\n    /* \"#utility.yul\":10262:10496   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10502:10868   */\ntag_56:\n    /* \"#utility.yul\":10644:10647   */\n  0x00\n    /* \"#utility.yul\":10665:10732   */\n  tag_172\n    /* \"#utility.yul\":10729:10731   */\n  0x2f\n    /* \"#utility.yul\":10724:10727   */\n  dup4\n    /* \"#utility.yul\":10665:10732   */\n  tag_52\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":10658:10732   */\n  swap2\n  pop\n    /* \"#utility.yul\":10741:10834   */\n  tag_173\n    /* \"#utility.yul\":10830:10833   */\n  dup3\n    /* \"#utility.yul\":10741:10834   */\n  tag_55\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":10859:10861   */\n  0x40\n    /* \"#utility.yul\":10854:10857   */\n  dup3\n    /* \"#utility.yul\":10850:10862   */\n  add\n    /* \"#utility.yul\":10843:10862   */\n  swap1\n  pop\n    /* \"#utility.yul\":10502:10868   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10874:11293   */\ntag_16:\n    /* \"#utility.yul\":11040:11044   */\n  0x00\n    /* \"#utility.yul\":11078:11080   */\n  0x20\n    /* \"#utility.yul\":11067:11076   */\n  dup3\n    /* \"#utility.yul\":11063:11081   */\n  add\n    /* \"#utility.yul\":11055:11081   */\n  swap1\n  pop\n    /* \"#utility.yul\":11127:11136   */\n  dup2\n    /* \"#utility.yul\":11121:11125   */\n  dup2\n    /* \"#utility.yul\":11117:11137   */\n  sub\n    /* \"#utility.yul\":11113:11114   */\n  0x00\n    /* \"#utility.yul\":11102:11111   */\n  dup4\n    /* \"#utility.yul\":11098:11115   */\n  add\n    /* \"#utility.yul\":11091:11138   */\n  mstore\n    /* \"#utility.yul\":11155:11286   */\n  tag_175\n    /* \"#utility.yul\":11281:11285   */\n  dup2\n    /* \"#utility.yul\":11155:11286   */\n  tag_56\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":11147:11286   */\n  swap1\n  pop\n    /* \"#utility.yul\":10874:11293   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"PRACTICA FINAL/VotingContract.sol\":212:2401  contract VotingContract is ERC20{... */\ntag_17:\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xe4b1702d9298fee62dfeccc57d322a463ad55ca201256d01f62b45b2e1c21c10\")\n  0x00\n  assignImmutable(\"0xe455bf8ea6e7463a1046a0b52804526e119b4bf5136279614e0b1e8e296a4e2d\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"PRACTICA FINAL/VotingContract.sol\":212:2401  contract VotingContract is ERC20{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x9dc29fac\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x9dc29fac\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xb2bdfa7b\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xe8315742\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x7ff9b596\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8d75fe05\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x313ce567\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x4b94f50e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x6abcded1\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PRACTICA FINAL/VotingContract.sol\":1224:1743  function mint(address destDir, uint256 tokensEmitidos) external  onlyOwner {... */\n    tag_8:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_47:\n      tag_48\n      jump\t// in\n    tag_46:\n      stop\n        /* \"PRACTICA FINAL/VotingContract.sol\":2239:2317  function getTokenPrice() external view returns (uint256) { return tokenPrice;} */\n    tag_9:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PRACTICA FINAL/VotingContract.sol\":2323:2398  function getMaxTokens() external view returns (uint256){return maxTokens; } */\n    tag_10:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_11:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PRACTICA FINAL/VotingContract.sol\":253:288  uint256 public immutable tokenPrice */\n    tag_12:\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PRACTICA FINAL/VotingContract.sol\":475:502  uint256 public mintedTokens */\n    tag_13:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_14:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PRACTICA FINAL/VotingContract.sol\":1751:2231  function burn(address destDir, uint256 tokensEliminados) external onlyOwner{... */\n    tag_15:\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_70:\n      tag_71\n      jump\t// in\n    tag_69:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_16:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PRACTICA FINAL/VotingContract.sol\":551:572  address public _owner */\n    tag_17:\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_18:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      tag_83\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PRACTICA FINAL/VotingContract.sol\":370:404  uint256 public immutable maxTokens */\n    tag_19:\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_24:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      dup1\n      sload\n      tag_89\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_91\n      swap1\n      tag_90\n      jump\t// in\n    tag_91:\n      dup1\n      iszero\n      tag_92\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_93\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_92)\n    tag_93:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_94:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_94\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_92:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_30:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4052:4056  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4068:4081  address owner */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4084:4096  _msgSender() */\n      tag_96\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4084:4094  _msgSender */\n      tag_97\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4084:4096  _msgSender() */\n      jump\t// in\n    tag_96:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4068:4096  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      tag_98\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4115:4120  owner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4122:4129  spender */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4131:4136  value */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4106:4114  _approve */\n      tag_99\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      jump\t// in\n    tag_98:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4154:4158  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4147:4158  return true */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_34:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2882:2889  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2908:2920  _totalSupply */\n      sload(0x02)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2901:2920  return _totalSupply */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_40:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4844:4848  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4860:4875  address spender */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4878:4890  _msgSender() */\n      tag_102\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4878:4888  _msgSender */\n      tag_97\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4878:4890  _msgSender() */\n      jump\t// in\n    tag_102:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4860:4890  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      tag_103\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4916:4920  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4922:4929  spender */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4931:4936  value */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4900:4915  _spendAllowance */\n      tag_104\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_103:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      tag_105\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4957:4961  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4963:4965  to */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4967:4972  value */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4947:4956  _transfer */\n      tag_106\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      jump\t// in\n    tag_105:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4990:4994  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4983:4994  return true */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_43:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2737:2742  uint8 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n      0x12\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2754:2763  return 18 */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"PRACTICA FINAL/VotingContract.sol\":1224:1743  function mint(address destDir, uint256 tokensEmitidos) external  onlyOwner {... */\n    tag_48:\n        /* \"PRACTICA FINAL/VotingContract.sol\":1011:1017  _owner */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PRACTICA FINAL/VotingContract.sol\":998:1017  msg.sender ==_owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PRACTICA FINAL/VotingContract.sol\":998:1008  msg.sender */\n      caller\n        /* \"PRACTICA FINAL/VotingContract.sol\":998:1017  msg.sender ==_owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"PRACTICA FINAL/VotingContract.sol\":990:1049  require(msg.sender ==_owner , \"Solo puede llamar el owner\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n        /* \"PRACTICA FINAL/VotingContract.sol\":1407:1408  0 */\n      0x00\n        /* \"PRACTICA FINAL/VotingContract.sol\":1388:1409  destDir != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PRACTICA FINAL/VotingContract.sol\":1388:1395  destDir */\n      dup3\n        /* \"PRACTICA FINAL/VotingContract.sol\":1388:1409  destDir != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"PRACTICA FINAL/VotingContract.sol\":1380:1447  require(destDir != address(0), \"La direccion destino no es valida\") */\n      tag_113\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_114\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_113:\n        /* \"PRACTICA FINAL/VotingContract.sol\":1567:1576  maxTokens */\n      immutable(\"0xe4b1702d9298fee62dfeccc57d322a463ad55ca201256d01f62b45b2e1c21c10\")\n        /* \"PRACTICA FINAL/VotingContract.sol\":1551:1565  tokensEmitidos */\n      dup2\n        /* \"PRACTICA FINAL/VotingContract.sol\":1538:1550  mintedTokens */\n      sload(0x05)\n        /* \"PRACTICA FINAL/VotingContract.sol\":1538:1565  mintedTokens+tokensEmitidos */\n      tag_116\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n        /* \"PRACTICA FINAL/VotingContract.sol\":1538:1576  mintedTokens+tokensEmitidos<=maxTokens */\n      gt\n      iszero\n        /* \"PRACTICA FINAL/VotingContract.sol\":1530:1612  require(mintedTokens+tokensEmitidos<=maxTokens, \"No se pueden emitir mas tokens!\") */\n      tag_118\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_119\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_118:\n        /* \"PRACTICA FINAL/VotingContract.sol\":1640:1654  tokensEmitidos */\n      dup1\n        /* \"PRACTICA FINAL/VotingContract.sol\":1624:1636  mintedTokens */\n      0x05\n      0x00\n        /* \"PRACTICA FINAL/VotingContract.sol\":1624:1654  mintedTokens += tokensEmitidos */\n      dup3\n      dup3\n      sload\n      tag_121\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_121:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"PRACTICA FINAL/VotingContract.sol\":1705:1735  _mint(destDir, tokensEmitidos) */\n      tag_122\n        /* \"PRACTICA FINAL/VotingContract.sol\":1711:1718  destDir */\n      dup3\n        /* \"PRACTICA FINAL/VotingContract.sol\":1720:1734  tokensEmitidos */\n      dup3\n        /* \"PRACTICA FINAL/VotingContract.sol\":1705:1710  _mint */\n      tag_123\n        /* \"PRACTICA FINAL/VotingContract.sol\":1705:1735  _mint(destDir, tokensEmitidos) */\n      jump\t// in\n    tag_122:\n        /* \"PRACTICA FINAL/VotingContract.sol\":1224:1743  function mint(address destDir, uint256 tokensEmitidos) external  onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"PRACTICA FINAL/VotingContract.sol\":2239:2317  function getTokenPrice() external view returns (uint256) { return tokenPrice;} */\n    tag_50:\n        /* \"PRACTICA FINAL/VotingContract.sol\":2287:2294  uint256 */\n      0x00\n        /* \"PRACTICA FINAL/VotingContract.sol\":2305:2315  tokenPrice */\n      immutable(\"0xe455bf8ea6e7463a1046a0b52804526e119b4bf5136279614e0b1e8e296a4e2d\")\n        /* \"PRACTICA FINAL/VotingContract.sol\":2298:2315  return tokenPrice */\n      swap1\n      pop\n        /* \"PRACTICA FINAL/VotingContract.sol\":2239:2317  function getTokenPrice() external view returns (uint256) { return tokenPrice;} */\n      swap1\n      jump\t// out\n        /* \"PRACTICA FINAL/VotingContract.sol\":2323:2398  function getMaxTokens() external view returns (uint256){return maxTokens; } */\n    tag_53:\n        /* \"PRACTICA FINAL/VotingContract.sol\":2370:2377  uint256 */\n      0x00\n        /* \"PRACTICA FINAL/VotingContract.sol\":2386:2395  maxTokens */\n      immutable(\"0xe4b1702d9298fee62dfeccc57d322a463ad55ca201256d01f62b45b2e1c21c10\")\n        /* \"PRACTICA FINAL/VotingContract.sol\":2379:2395  return maxTokens */\n      swap1\n      pop\n        /* \"PRACTICA FINAL/VotingContract.sol\":2323:2398  function getMaxTokens() external view returns (uint256){return maxTokens; } */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_58:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3050:3057  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3076:3085  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3086:3093  account */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3069:3094  return _balances[account] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"PRACTICA FINAL/VotingContract.sol\":253:288  uint256 public immutable tokenPrice */\n    tag_61:\n      immutable(\"0xe455bf8ea6e7463a1046a0b52804526e119b4bf5136279614e0b1e8e296a4e2d\")\n      dup2\n      jump\t// out\n        /* \"PRACTICA FINAL/VotingContract.sol\":475:502  uint256 public mintedTokens */\n    tag_64:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_67:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x04\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      dup1\n      sload\n      tag_128\n      swap1\n      tag_90\n      jump\t// in\n    tag_128:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_129\n      swap1\n      tag_90\n      jump\t// in\n    tag_129:\n      dup1\n      iszero\n      tag_130\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_131\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_130)\n    tag_131:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_132:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_132\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_130:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"PRACTICA FINAL/VotingContract.sol\":1751:2231  function burn(address destDir, uint256 tokensEliminados) external onlyOwner{... */\n    tag_71:\n        /* \"PRACTICA FINAL/VotingContract.sol\":1011:1017  _owner */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PRACTICA FINAL/VotingContract.sol\":998:1017  msg.sender ==_owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PRACTICA FINAL/VotingContract.sol\":998:1008  msg.sender */\n      caller\n        /* \"PRACTICA FINAL/VotingContract.sol\":998:1017  msg.sender ==_owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"PRACTICA FINAL/VotingContract.sol\":990:1049  require(msg.sender ==_owner , \"Solo puede llamar el owner\") */\n      tag_134\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_135\n      swap1\n      tag_111\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_134:\n        /* \"PRACTICA FINAL/VotingContract.sol\":1934:1935  0 */\n      0x00\n        /* \"PRACTICA FINAL/VotingContract.sol\":1915:1936  destDir != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PRACTICA FINAL/VotingContract.sol\":1915:1922  destDir */\n      dup3\n        /* \"PRACTICA FINAL/VotingContract.sol\":1915:1936  destDir != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"PRACTICA FINAL/VotingContract.sol\":1907:1974  require(destDir != address(0), \"La direccion destino no es valida\") */\n      tag_137\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_138\n      swap1\n      tag_115\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_137:\n        /* \"PRACTICA FINAL/VotingContract.sol\":2081:2082  0 */\n      0x00\n        /* \"PRACTICA FINAL/VotingContract.sol\":2064:2080  tokensEliminados */\n      dup2\n        /* \"PRACTICA FINAL/VotingContract.sol\":2064:2082  tokensEliminados>0 */\n      gt\n        /* \"PRACTICA FINAL/VotingContract.sol\":2056:2142  require(tokensEliminados>0, \"No se puede eliminar 0 ni un numero negativo de tokens.\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_140\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_139:\n        /* \"PRACTICA FINAL/VotingContract.sol\":2191:2223  _burn(destDir, tokensEliminados) */\n      tag_142\n        /* \"PRACTICA FINAL/VotingContract.sol\":2197:2204  destDir */\n      dup3\n        /* \"PRACTICA FINAL/VotingContract.sol\":2206:2222  tokensEliminados */\n      dup3\n        /* \"PRACTICA FINAL/VotingContract.sol\":2191:2196  _burn */\n      tag_143\n        /* \"PRACTICA FINAL/VotingContract.sol\":2191:2223  _burn(destDir, tokensEliminados) */\n      jump\t// in\n    tag_142:\n        /* \"PRACTICA FINAL/VotingContract.sol\":1751:2231  function burn(address destDir, uint256 tokensEliminados) external onlyOwner{... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_74:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3365:3369  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3381:3394  address owner */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3397:3409  _msgSender() */\n      tag_145\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3397:3407  _msgSender */\n      tag_97\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3397:3409  _msgSender() */\n      jump\t// in\n    tag_145:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3381:3409  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      tag_146\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3429:3434  owner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3436:3438  to */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3440:3445  value */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3419:3428  _transfer */\n      tag_106\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      jump\t// in\n    tag_146:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3463:3467  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3456:3467  return true */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"PRACTICA FINAL/VotingContract.sol\":551:572  address public _owner */\n    tag_77:\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_83:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3612:3619  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3638:3649  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3650:3655  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3657:3664  spender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3631:3665  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"PRACTICA FINAL/VotingContract.sol\":370:404  uint256 public immutable maxTokens */\n    tag_86:\n      immutable(\"0xe4b1702d9298fee62dfeccc57d322a463ad55ca201256d01f62b45b2e1c21c10\")\n      dup2\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_97:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_99:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      tag_150\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8800:8805  owner */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8807:8814  spender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8816:8821  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8823:8827  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8791:8799  _approve */\n      tag_151\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_150:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_104:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10495:10519  uint256 currentAllowance */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10522:10547  allowance(owner, spender) */\n      tag_153\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10532:10537  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10539:10546  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10522:10531  allowance */\n      tag_83\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10522:10547  allowance(owner, spender) */\n      jump\t// in\n    tag_153:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10495:10547  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10580:10597  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10561:10577  currentAllowance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10561:10597  currentAllowance < type(uint256).max */\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_154\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10636:10641  value */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10617:10633  currentAllowance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10617:10641  currentAllowance < value */\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n      iszero\n      tag_155\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10695:10702  spender */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10704:10720  currentAllowance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10722:10727  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_156\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n    tag_155:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      tag_158\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10793:10798  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10800:10807  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10828:10833  value */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10809:10825  currentAllowance */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10809:10833  currentAllowance - value */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10835:10840  false */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10784:10792  _approve */\n      tag_151\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_158:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n    tag_154:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10485:10872  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_106:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5473:5474  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5457:5461  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n      tag_160\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5525:5526  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_161\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n    tag_160:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5566:5567  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5552:5554  to */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n      tag_162\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5620:5621  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_163\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n    tag_162:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      tag_164\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5651:5655  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5657:5659  to */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5661:5666  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5643:5650  _update */\n      tag_165\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      jump\t// in\n    tag_164:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n    tag_123:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7528:7529  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7509:7516  account */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n      tag_167\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7582:7583  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n    tag_167:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n      tag_169\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7621:7622  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7625:7632  account */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7634:7639  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7605:7612  _update */\n      tag_165\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n      jump\t// in\n    tag_169:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7965:8171  function _burn(address account, uint256 value) internal {... */\n    tag_143:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8054:8055  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8035:8056  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8035:8042  account */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8035:8056  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8031:8120  if (account == address(0)) {... */\n      tag_171\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8106:8107  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8079:8109  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_172\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8031:8120  if (account == address(0)) {... */\n    tag_171:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8129:8164  _update(account, address(0), value) */\n      tag_173\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8137:8144  account */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8154:8155  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8158:8163  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8129:8136  _update */\n      tag_165\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8129:8164  _update(account, address(0), value) */\n      jump\t// in\n    tag_173:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7965:8171  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_151:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9811:9812  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9794:9799  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n      tag_175\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9865:9866  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_176\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n    tag_175:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9911:9912  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9892:9899  spender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n      tag_177\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9964:9965  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n    tag_177:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10017:10022  value */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9987:9998  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9999:10004  owner */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10006:10013  spender */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9987:10022  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10036:10045  emitEvent */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n      iszero\n      tag_179\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10082:10089  spender */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10075:10080  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10091:10096  value */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_180\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_180:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n    tag_179:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_165:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6094:6095  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6078:6082  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      tag_182\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n      0x02\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_183\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_183:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      jump(tag_184)\n    tag_182:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6288:6297  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6298:6302  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6266:6303  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6335:6340  value */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n      iszero\n      tag_185\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6392:6396  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6398:6409  fromBalance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6411:6416  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_186\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_186:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n    tag_185:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6584:6589  value */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6570:6581  fromBalance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6562:6566  from */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6252:6614  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n    tag_184:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6642:6643  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6628:6630  to */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      tag_187\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6807:6812  value */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n      0x02\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      jump(tag_188)\n    tag_187:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7019:7024  value */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7012:7014  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n    tag_188:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7073:7077  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      mload(0x40)\n      tag_189\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_190:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_191:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_192:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_193:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_194:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_227\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_190\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":711:782   */\n      tag_228\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_191\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_229\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_192\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":881:910   */\n      tag_230\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_193\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_26:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_232\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_194\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_196:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      0x00\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_198:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_199:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_238\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_198\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_200:\n        /* \"#utility.yul\":1876:1900   */\n      tag_240\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_199\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_241\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      0x00\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_241:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_201:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_243\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_200\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_202:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_203:\n        /* \"#utility.yul\":2232:2256   */\n      tag_246\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_202\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_247\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      0x00\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_247:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_204:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_249\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_203\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_29:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      0x00\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_251\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_252\n      tag_196\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":2525:2644   */\n    tag_251:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_253\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_201\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_254\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_204\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_205:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_206:\n        /* \"#utility.yul\":3089:3110   */\n      tag_257\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_205\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_32:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_259\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_206\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_207:\n        /* \"#utility.yul\":3426:3450   */\n      tag_261\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_202\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_36:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_263\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_207\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_39:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      0x00\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_265\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_266\n      tag_196\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":3801:3920   */\n    tag_265:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_267\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_201\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_268\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_201\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_269\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_204\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4402   */\n    tag_208:\n        /* \"#utility.yul\":4351:4358   */\n      0x00\n        /* \"#utility.yul\":4391:4395   */\n      0xff\n        /* \"#utility.yul\":4384:4389   */\n      dup3\n        /* \"#utility.yul\":4380:4396   */\n      and\n        /* \"#utility.yul\":4369:4396   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4408:4520   */\n    tag_209:\n        /* \"#utility.yul\":4491:4513   */\n      tag_272\n        /* \"#utility.yul\":4507:4512   */\n      dup2\n        /* \"#utility.yul\":4491:4513   */\n      tag_208\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":4486:4489   */\n      dup3\n        /* \"#utility.yul\":4479:4514   */\n      mstore\n        /* \"#utility.yul\":4408:4520   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4526:4740   */\n    tag_45:\n        /* \"#utility.yul\":4615:4619   */\n      0x00\n        /* \"#utility.yul\":4653:4655   */\n      0x20\n        /* \"#utility.yul\":4642:4651   */\n      dup3\n        /* \"#utility.yul\":4638:4656   */\n      add\n        /* \"#utility.yul\":4630:4656   */\n      swap1\n      pop\n        /* \"#utility.yul\":4666:4733   */\n      tag_274\n        /* \"#utility.yul\":4730:4731   */\n      0x00\n        /* \"#utility.yul\":4719:4728   */\n      dup4\n        /* \"#utility.yul\":4715:4732   */\n      add\n        /* \"#utility.yul\":4706:4712   */\n      dup5\n        /* \"#utility.yul\":4666:4733   */\n      tag_209\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":4526:4740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4746:5075   */\n    tag_57:\n        /* \"#utility.yul\":4805:4811   */\n      0x00\n        /* \"#utility.yul\":4854:4856   */\n      0x20\n        /* \"#utility.yul\":4842:4851   */\n      dup3\n        /* \"#utility.yul\":4833:4840   */\n      dup5\n        /* \"#utility.yul\":4829:4852   */\n      sub\n        /* \"#utility.yul\":4825:4857   */\n      slt\n        /* \"#utility.yul\":4822:4941   */\n      iszero\n      tag_276\n      jumpi\n        /* \"#utility.yul\":4860:4939   */\n      tag_277\n      tag_196\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":4822:4941   */\n    tag_276:\n        /* \"#utility.yul\":4980:4981   */\n      0x00\n        /* \"#utility.yul\":5005:5058   */\n      tag_278\n        /* \"#utility.yul\":5050:5057   */\n      dup5\n        /* \"#utility.yul\":5041:5047   */\n      dup3\n        /* \"#utility.yul\":5030:5039   */\n      dup6\n        /* \"#utility.yul\":5026:5048   */\n      add\n        /* \"#utility.yul\":5005:5058   */\n      tag_201\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":4995:5058   */\n      swap2\n      pop\n        /* \"#utility.yul\":4951:5068   */\n      pop\n        /* \"#utility.yul\":4746:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5199   */\n    tag_210:\n        /* \"#utility.yul\":5168:5192   */\n      tag_280\n        /* \"#utility.yul\":5186:5191   */\n      dup2\n        /* \"#utility.yul\":5168:5192   */\n      tag_199\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":5163:5166   */\n      dup3\n        /* \"#utility.yul\":5156:5193   */\n      mstore\n        /* \"#utility.yul\":5081:5199   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5205:5427   */\n    tag_79:\n        /* \"#utility.yul\":5298:5302   */\n      0x00\n        /* \"#utility.yul\":5336:5338   */\n      0x20\n        /* \"#utility.yul\":5325:5334   */\n      dup3\n        /* \"#utility.yul\":5321:5339   */\n      add\n        /* \"#utility.yul\":5313:5339   */\n      swap1\n      pop\n        /* \"#utility.yul\":5349:5420   */\n      tag_282\n        /* \"#utility.yul\":5417:5418   */\n      0x00\n        /* \"#utility.yul\":5406:5415   */\n      dup4\n        /* \"#utility.yul\":5402:5419   */\n      add\n        /* \"#utility.yul\":5393:5399   */\n      dup5\n        /* \"#utility.yul\":5349:5420   */\n      tag_210\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":5205:5427   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5433:5907   */\n    tag_82:\n        /* \"#utility.yul\":5501:5507   */\n      0x00\n        /* \"#utility.yul\":5509:5515   */\n      0x00\n        /* \"#utility.yul\":5558:5560   */\n      0x40\n        /* \"#utility.yul\":5546:5555   */\n      dup4\n        /* \"#utility.yul\":5537:5544   */\n      dup6\n        /* \"#utility.yul\":5533:5556   */\n      sub\n        /* \"#utility.yul\":5529:5561   */\n      slt\n        /* \"#utility.yul\":5526:5645   */\n      iszero\n      tag_284\n      jumpi\n        /* \"#utility.yul\":5564:5643   */\n      tag_285\n      tag_196\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":5526:5645   */\n    tag_284:\n        /* \"#utility.yul\":5684:5685   */\n      0x00\n        /* \"#utility.yul\":5709:5762   */\n      tag_286\n        /* \"#utility.yul\":5754:5761   */\n      dup6\n        /* \"#utility.yul\":5745:5751   */\n      dup3\n        /* \"#utility.yul\":5734:5743   */\n      dup7\n        /* \"#utility.yul\":5730:5752   */\n      add\n        /* \"#utility.yul\":5709:5762   */\n      tag_201\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":5699:5762   */\n      swap3\n      pop\n        /* \"#utility.yul\":5655:5772   */\n      pop\n        /* \"#utility.yul\":5811:5813   */\n      0x20\n        /* \"#utility.yul\":5837:5890   */\n      tag_287\n        /* \"#utility.yul\":5882:5889   */\n      dup6\n        /* \"#utility.yul\":5873:5879   */\n      dup3\n        /* \"#utility.yul\":5862:5871   */\n      dup7\n        /* \"#utility.yul\":5858:5880   */\n      add\n        /* \"#utility.yul\":5837:5890   */\n      tag_201\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":5827:5890   */\n      swap2\n      pop\n        /* \"#utility.yul\":5782:5900   */\n      pop\n        /* \"#utility.yul\":5433:5907   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5913:6093   */\n    tag_211:\n        /* \"#utility.yul\":5961:6038   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5958:5959   */\n      0x00\n        /* \"#utility.yul\":5951:6039   */\n      mstore\n        /* \"#utility.yul\":6058:6062   */\n      0x22\n        /* \"#utility.yul\":6055:6056   */\n      0x04\n        /* \"#utility.yul\":6048:6063   */\n      mstore\n        /* \"#utility.yul\":6082:6086   */\n      0x24\n        /* \"#utility.yul\":6079:6080   */\n      0x00\n        /* \"#utility.yul\":6072:6087   */\n      revert\n        /* \"#utility.yul\":6099:6419   */\n    tag_90:\n        /* \"#utility.yul\":6143:6149   */\n      0x00\n        /* \"#utility.yul\":6180:6181   */\n      0x02\n        /* \"#utility.yul\":6174:6178   */\n      dup3\n        /* \"#utility.yul\":6170:6182   */\n      div\n        /* \"#utility.yul\":6160:6182   */\n      swap1\n      pop\n        /* \"#utility.yul\":6227:6228   */\n      0x01\n        /* \"#utility.yul\":6221:6225   */\n      dup3\n        /* \"#utility.yul\":6217:6229   */\n      and\n        /* \"#utility.yul\":6248:6266   */\n      dup1\n        /* \"#utility.yul\":6238:6319   */\n      tag_290\n      jumpi\n        /* \"#utility.yul\":6304:6308   */\n      0x7f\n        /* \"#utility.yul\":6296:6302   */\n      dup3\n        /* \"#utility.yul\":6292:6309   */\n      and\n        /* \"#utility.yul\":6282:6309   */\n      swap2\n      pop\n        /* \"#utility.yul\":6238:6319   */\n    tag_290:\n        /* \"#utility.yul\":6366:6368   */\n      0x20\n        /* \"#utility.yul\":6358:6364   */\n      dup3\n        /* \"#utility.yul\":6355:6369   */\n      lt\n        /* \"#utility.yul\":6335:6353   */\n      dup2\n        /* \"#utility.yul\":6332:6370   */\n      sub\n        /* \"#utility.yul\":6329:6413   */\n      tag_291\n      jumpi\n        /* \"#utility.yul\":6385:6403   */\n      tag_292\n      tag_211\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":6329:6413   */\n    tag_291:\n        /* \"#utility.yul\":6150:6419   */\n      pop\n        /* \"#utility.yul\":6099:6419   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6425:6601   */\n    tag_212:\n        /* \"#utility.yul\":6565:6593   */\n      0x536f6c6f207075656465206c6c616d617220656c206f776e6572000000000000\n        /* \"#utility.yul\":6561:6562   */\n      0x00\n        /* \"#utility.yul\":6553:6559   */\n      dup3\n        /* \"#utility.yul\":6549:6563   */\n      add\n        /* \"#utility.yul\":6542:6594   */\n      mstore\n        /* \"#utility.yul\":6425:6601   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6607:6973   */\n    tag_213:\n        /* \"#utility.yul\":6749:6752   */\n      0x00\n        /* \"#utility.yul\":6770:6837   */\n      tag_295\n        /* \"#utility.yul\":6834:6836   */\n      0x1a\n        /* \"#utility.yul\":6829:6832   */\n      dup4\n        /* \"#utility.yul\":6770:6837   */\n      tag_191\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":6763:6837   */\n      swap2\n      pop\n        /* \"#utility.yul\":6846:6939   */\n      tag_296\n        /* \"#utility.yul\":6935:6938   */\n      dup3\n        /* \"#utility.yul\":6846:6939   */\n      tag_212\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":6964:6966   */\n      0x20\n        /* \"#utility.yul\":6959:6962   */\n      dup3\n        /* \"#utility.yul\":6955:6967   */\n      add\n        /* \"#utility.yul\":6948:6967   */\n      swap1\n      pop\n        /* \"#utility.yul\":6607:6973   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6979:7398   */\n    tag_111:\n        /* \"#utility.yul\":7145:7149   */\n      0x00\n        /* \"#utility.yul\":7183:7185   */\n      0x20\n        /* \"#utility.yul\":7172:7181   */\n      dup3\n        /* \"#utility.yul\":7168:7186   */\n      add\n        /* \"#utility.yul\":7160:7186   */\n      swap1\n      pop\n        /* \"#utility.yul\":7232:7241   */\n      dup2\n        /* \"#utility.yul\":7226:7230   */\n      dup2\n        /* \"#utility.yul\":7222:7242   */\n      sub\n        /* \"#utility.yul\":7218:7219   */\n      0x00\n        /* \"#utility.yul\":7207:7216   */\n      dup4\n        /* \"#utility.yul\":7203:7220   */\n      add\n        /* \"#utility.yul\":7196:7243   */\n      mstore\n        /* \"#utility.yul\":7260:7391   */\n      tag_298\n        /* \"#utility.yul\":7386:7390   */\n      dup2\n        /* \"#utility.yul\":7260:7391   */\n      tag_213\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":7252:7391   */\n      swap1\n      pop\n        /* \"#utility.yul\":6979:7398   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7404:7624   */\n    tag_214:\n        /* \"#utility.yul\":7544:7578   */\n      0x4c6120646972656363696f6e2064657374696e6f206e6f2065732076616c6964\n        /* \"#utility.yul\":7540:7541   */\n      0x00\n        /* \"#utility.yul\":7532:7538   */\n      dup3\n        /* \"#utility.yul\":7528:7542   */\n      add\n        /* \"#utility.yul\":7521:7579   */\n      mstore\n        /* \"#utility.yul\":7613:7616   */\n      0x6100000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7608:7610   */\n      0x20\n        /* \"#utility.yul\":7600:7606   */\n      dup3\n        /* \"#utility.yul\":7596:7611   */\n      add\n        /* \"#utility.yul\":7589:7617   */\n      mstore\n        /* \"#utility.yul\":7404:7624   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7630:7996   */\n    tag_215:\n        /* \"#utility.yul\":7772:7775   */\n      0x00\n        /* \"#utility.yul\":7793:7860   */\n      tag_301\n        /* \"#utility.yul\":7857:7859   */\n      0x21\n        /* \"#utility.yul\":7852:7855   */\n      dup4\n        /* \"#utility.yul\":7793:7860   */\n      tag_191\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":7786:7860   */\n      swap2\n      pop\n        /* \"#utility.yul\":7869:7962   */\n      tag_302\n        /* \"#utility.yul\":7958:7961   */\n      dup3\n        /* \"#utility.yul\":7869:7962   */\n      tag_214\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":7987:7989   */\n      0x40\n        /* \"#utility.yul\":7982:7985   */\n      dup3\n        /* \"#utility.yul\":7978:7990   */\n      add\n        /* \"#utility.yul\":7971:7990   */\n      swap1\n      pop\n        /* \"#utility.yul\":7630:7996   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8002:8421   */\n    tag_115:\n        /* \"#utility.yul\":8168:8172   */\n      0x00\n        /* \"#utility.yul\":8206:8208   */\n      0x20\n        /* \"#utility.yul\":8195:8204   */\n      dup3\n        /* \"#utility.yul\":8191:8209   */\n      add\n        /* \"#utility.yul\":8183:8209   */\n      swap1\n      pop\n        /* \"#utility.yul\":8255:8264   */\n      dup2\n        /* \"#utility.yul\":8249:8253   */\n      dup2\n        /* \"#utility.yul\":8245:8265   */\n      sub\n        /* \"#utility.yul\":8241:8242   */\n      0x00\n        /* \"#utility.yul\":8230:8239   */\n      dup4\n        /* \"#utility.yul\":8226:8243   */\n      add\n        /* \"#utility.yul\":8219:8266   */\n      mstore\n        /* \"#utility.yul\":8283:8414   */\n      tag_304\n        /* \"#utility.yul\":8409:8413   */\n      dup2\n        /* \"#utility.yul\":8283:8414   */\n      tag_215\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":8275:8414   */\n      swap1\n      pop\n        /* \"#utility.yul\":8002:8421   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8427:8607   */\n    tag_216:\n        /* \"#utility.yul\":8475:8552   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8472:8473   */\n      0x00\n        /* \"#utility.yul\":8465:8553   */\n      mstore\n        /* \"#utility.yul\":8572:8576   */\n      0x11\n        /* \"#utility.yul\":8569:8570   */\n      0x04\n        /* \"#utility.yul\":8562:8577   */\n      mstore\n        /* \"#utility.yul\":8596:8600   */\n      0x24\n        /* \"#utility.yul\":8593:8594   */\n      0x00\n        /* \"#utility.yul\":8586:8601   */\n      revert\n        /* \"#utility.yul\":8613:8804   */\n    tag_117:\n        /* \"#utility.yul\":8653:8656   */\n      0x00\n        /* \"#utility.yul\":8672:8692   */\n      tag_307\n        /* \"#utility.yul\":8690:8691   */\n      dup3\n        /* \"#utility.yul\":8672:8692   */\n      tag_202\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":8667:8692   */\n      swap2\n      pop\n        /* \"#utility.yul\":8706:8726   */\n      tag_308\n        /* \"#utility.yul\":8724:8725   */\n      dup4\n        /* \"#utility.yul\":8706:8726   */\n      tag_202\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":8701:8726   */\n      swap3\n      pop\n        /* \"#utility.yul\":8749:8750   */\n      dup3\n        /* \"#utility.yul\":8746:8747   */\n      dup3\n        /* \"#utility.yul\":8742:8751   */\n      add\n        /* \"#utility.yul\":8735:8751   */\n      swap1\n      pop\n        /* \"#utility.yul\":8770:8773   */\n      dup1\n        /* \"#utility.yul\":8767:8768   */\n      dup3\n        /* \"#utility.yul\":8764:8774   */\n      gt\n        /* \"#utility.yul\":8761:8797   */\n      iszero\n      tag_309\n      jumpi\n        /* \"#utility.yul\":8777:8795   */\n      tag_310\n      tag_216\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":8761:8797   */\n    tag_309:\n        /* \"#utility.yul\":8613:8804   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8810:8991   */\n    tag_217:\n        /* \"#utility.yul\":8950:8983   */\n      0x4e6f2073652070756564656e20656d69746972206d617320746f6b656e732100\n        /* \"#utility.yul\":8946:8947   */\n      0x00\n        /* \"#utility.yul\":8938:8944   */\n      dup3\n        /* \"#utility.yul\":8934:8948   */\n      add\n        /* \"#utility.yul\":8927:8984   */\n      mstore\n        /* \"#utility.yul\":8810:8991   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8997:9363   */\n    tag_218:\n        /* \"#utility.yul\":9139:9142   */\n      0x00\n        /* \"#utility.yul\":9160:9227   */\n      tag_313\n        /* \"#utility.yul\":9224:9226   */\n      0x1f\n        /* \"#utility.yul\":9219:9222   */\n      dup4\n        /* \"#utility.yul\":9160:9227   */\n      tag_191\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":9153:9227   */\n      swap2\n      pop\n        /* \"#utility.yul\":9236:9329   */\n      tag_314\n        /* \"#utility.yul\":9325:9328   */\n      dup3\n        /* \"#utility.yul\":9236:9329   */\n      tag_217\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":9354:9356   */\n      0x20\n        /* \"#utility.yul\":9349:9352   */\n      dup3\n        /* \"#utility.yul\":9345:9357   */\n      add\n        /* \"#utility.yul\":9338:9357   */\n      swap1\n      pop\n        /* \"#utility.yul\":8997:9363   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9369:9788   */\n    tag_120:\n        /* \"#utility.yul\":9535:9539   */\n      0x00\n        /* \"#utility.yul\":9573:9575   */\n      0x20\n        /* \"#utility.yul\":9562:9571   */\n      dup3\n        /* \"#utility.yul\":9558:9576   */\n      add\n        /* \"#utility.yul\":9550:9576   */\n      swap1\n      pop\n        /* \"#utility.yul\":9622:9631   */\n      dup2\n        /* \"#utility.yul\":9616:9620   */\n      dup2\n        /* \"#utility.yul\":9612:9632   */\n      sub\n        /* \"#utility.yul\":9608:9609   */\n      0x00\n        /* \"#utility.yul\":9597:9606   */\n      dup4\n        /* \"#utility.yul\":9593:9610   */\n      add\n        /* \"#utility.yul\":9586:9633   */\n      mstore\n        /* \"#utility.yul\":9650:9781   */\n      tag_316\n        /* \"#utility.yul\":9776:9780   */\n      dup2\n        /* \"#utility.yul\":9650:9781   */\n      tag_218\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":9642:9781   */\n      swap1\n      pop\n        /* \"#utility.yul\":9369:9788   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9794:10036   */\n    tag_219:\n        /* \"#utility.yul\":9934:9968   */\n      0x4e6f20736520707565646520656c696d696e61722030206e6920756e206e756d\n        /* \"#utility.yul\":9930:9931   */\n      0x00\n        /* \"#utility.yul\":9922:9928   */\n      dup3\n        /* \"#utility.yul\":9918:9932   */\n      add\n        /* \"#utility.yul\":9911:9969   */\n      mstore\n        /* \"#utility.yul\":10003:10028   */\n      0x65726f206e6567617469766f20646520746f6b656e732e000000000000000000\n        /* \"#utility.yul\":9998:10000   */\n      0x20\n        /* \"#utility.yul\":9990:9996   */\n      dup3\n        /* \"#utility.yul\":9986:10001   */\n      add\n        /* \"#utility.yul\":9979:10029   */\n      mstore\n        /* \"#utility.yul\":9794:10036   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10042:10408   */\n    tag_220:\n        /* \"#utility.yul\":10184:10187   */\n      0x00\n        /* \"#utility.yul\":10205:10272   */\n      tag_319\n        /* \"#utility.yul\":10269:10271   */\n      0x37\n        /* \"#utility.yul\":10264:10267   */\n      dup4\n        /* \"#utility.yul\":10205:10272   */\n      tag_191\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":10198:10272   */\n      swap2\n      pop\n        /* \"#utility.yul\":10281:10374   */\n      tag_320\n        /* \"#utility.yul\":10370:10373   */\n      dup3\n        /* \"#utility.yul\":10281:10374   */\n      tag_219\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":10399:10401   */\n      0x40\n        /* \"#utility.yul\":10394:10397   */\n      dup3\n        /* \"#utility.yul\":10390:10402   */\n      add\n        /* \"#utility.yul\":10383:10402   */\n      swap1\n      pop\n        /* \"#utility.yul\":10042:10408   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10414:10833   */\n    tag_141:\n        /* \"#utility.yul\":10580:10584   */\n      0x00\n        /* \"#utility.yul\":10618:10620   */\n      0x20\n        /* \"#utility.yul\":10607:10616   */\n      dup3\n        /* \"#utility.yul\":10603:10621   */\n      add\n        /* \"#utility.yul\":10595:10621   */\n      swap1\n      pop\n        /* \"#utility.yul\":10667:10676   */\n      dup2\n        /* \"#utility.yul\":10661:10665   */\n      dup2\n        /* \"#utility.yul\":10657:10677   */\n      sub\n        /* \"#utility.yul\":10653:10654   */\n      0x00\n        /* \"#utility.yul\":10642:10651   */\n      dup4\n        /* \"#utility.yul\":10638:10655   */\n      add\n        /* \"#utility.yul\":10631:10678   */\n      mstore\n        /* \"#utility.yul\":10695:10826   */\n      tag_322\n        /* \"#utility.yul\":10821:10825   */\n      dup2\n        /* \"#utility.yul\":10695:10826   */\n      tag_220\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":10687:10826   */\n      swap1\n      pop\n        /* \"#utility.yul\":10414:10833   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10839:11281   */\n    tag_157:\n        /* \"#utility.yul\":10988:10992   */\n      0x00\n        /* \"#utility.yul\":11026:11028   */\n      0x60\n        /* \"#utility.yul\":11015:11024   */\n      dup3\n        /* \"#utility.yul\":11011:11029   */\n      add\n        /* \"#utility.yul\":11003:11029   */\n      swap1\n      pop\n        /* \"#utility.yul\":11039:11110   */\n      tag_324\n        /* \"#utility.yul\":11107:11108   */\n      0x00\n        /* \"#utility.yul\":11096:11105   */\n      dup4\n        /* \"#utility.yul\":11092:11109   */\n      add\n        /* \"#utility.yul\":11083:11089   */\n      dup7\n        /* \"#utility.yul\":11039:11110   */\n      tag_210\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":11120:11192   */\n      tag_325\n        /* \"#utility.yul\":11188:11190   */\n      0x20\n        /* \"#utility.yul\":11177:11186   */\n      dup4\n        /* \"#utility.yul\":11173:11191   */\n      add\n        /* \"#utility.yul\":11164:11170   */\n      dup6\n        /* \"#utility.yul\":11120:11192   */\n      tag_207\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":11202:11274   */\n      tag_326\n        /* \"#utility.yul\":11270:11272   */\n      0x40\n        /* \"#utility.yul\":11259:11268   */\n      dup4\n        /* \"#utility.yul\":11255:11273   */\n      add\n        /* \"#utility.yul\":11246:11252   */\n      dup5\n        /* \"#utility.yul\":11202:11274   */\n      tag_207\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":10839:11281   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205ab7ef6e7f051f8d188607657d134dbad202205c2cb5432cf75ae3b44d51ef6264736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_342": {
									"entryPoint": null,
									"id": 342,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_54": {
									"entryPoint": null,
									"id": 54,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 472,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 537,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 613,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256_fromMemory": {
									"entryPoint": 633,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_stringliteral_6a6c01ec836a8333db641469830370640c16d66a01d78c4ea94d5b2ce3cbdeff_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1609,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e3deb8891861fc33e56f6ca4e0f0b1ebf88cbcc690d2390f61fcb463e2c54c75_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1751,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6a6c01ec836a8333db641469830370640c16d66a01d78c4ea94d5b2ce3cbdeff__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1643,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e3deb8891861fc33e56f6ca4e0f0b1ebf88cbcc690d2390f61fcb463e2c54c75__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1785,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 249,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 410,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 892,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 789,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1515,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1171,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 582,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1137,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1027,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1308,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 458,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 910,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 844,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1281,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 335,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 1018,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1253,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 799,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 290,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1060,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 266,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 270,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 262,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 258,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 274,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 925,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1241,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1113,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_6a6c01ec836a8333db641469830370640c16d66a01d78c4ea94d5b2ce3cbdeff": {
									"entryPoint": 1531,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e3deb8891861fc33e56f6ca4e0f0b1ebf88cbcc690d2390f61fcb463e2c54c75": {
									"entryPoint": 1673,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 937,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1069,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 591,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1106,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11296:6",
										"nodeType": "YulBlock",
										"src": "0:11296:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "423:28:6",
													"nodeType": "YulBlock",
													"src": "423:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:6",
																		"nodeType": "YulLiteral",
																		"src": "440:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:6",
																		"nodeType": "YulLiteral",
																		"src": "443:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:6"
																},
																"nativeSrc": "433:12:6",
																"nodeType": "YulFunctionCall",
																"src": "433:12:6"
															},
															"nativeSrc": "433:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:6"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:6"
											},
											{
												"body": {
													"nativeSrc": "546:28:6",
													"nodeType": "YulBlock",
													"src": "546:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:6",
																		"nodeType": "YulLiteral",
																		"src": "563:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:6",
																		"nodeType": "YulLiteral",
																		"src": "566:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:6"
																},
																"nativeSrc": "556:12:6",
																"nodeType": "YulFunctionCall",
																"src": "556:12:6"
															},
															"nativeSrc": "556:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:6"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:6"
											},
											{
												"body": {
													"nativeSrc": "628:54:6",
													"nodeType": "YulBlock",
													"src": "628:54:6",
													"statements": [
														{
															"nativeSrc": "638:38:6",
															"nodeType": "YulAssignment",
															"src": "638:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:6",
																				"nodeType": "YulLiteral",
																				"src": "663:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:6"
																		},
																		"nativeSrc": "652:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:6",
																				"nodeType": "YulLiteral",
																				"src": "672:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:6"
																		},
																		"nativeSrc": "668:7:6",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:6"
																},
																"nativeSrc": "648:28:6",
																"nodeType": "YulFunctionCall",
																"src": "648:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:6",
														"nodeType": "YulTypedName",
														"src": "611:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:6",
														"nodeType": "YulTypedName",
														"src": "621:6:6",
														"type": ""
													}
												],
												"src": "580:102:6"
											},
											{
												"body": {
													"nativeSrc": "716:152:6",
													"nodeType": "YulBlock",
													"src": "716:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:6",
																		"nodeType": "YulLiteral",
																		"src": "733:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:6",
																		"nodeType": "YulLiteral",
																		"src": "736:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:6"
																},
																"nativeSrc": "726:88:6",
																"nodeType": "YulFunctionCall",
																"src": "726:88:6"
															},
															"nativeSrc": "726:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:6",
																		"nodeType": "YulLiteral",
																		"src": "830:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:6",
																		"nodeType": "YulLiteral",
																		"src": "833:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:6"
																},
																"nativeSrc": "823:15:6",
																"nodeType": "YulFunctionCall",
																"src": "823:15:6"
															},
															"nativeSrc": "823:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:6",
																		"nodeType": "YulLiteral",
																		"src": "854:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:6",
																		"nodeType": "YulLiteral",
																		"src": "857:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:6"
																},
																"nativeSrc": "847:15:6",
																"nodeType": "YulFunctionCall",
																"src": "847:15:6"
															},
															"nativeSrc": "847:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:6"
											},
											{
												"body": {
													"nativeSrc": "917:238:6",
													"nodeType": "YulBlock",
													"src": "917:238:6",
													"statements": [
														{
															"nativeSrc": "927:58:6",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:6",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:6",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:6"
																		},
																		"nativeSrc": "957:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:6"
																},
																"nativeSrc": "945:40:6",
																"nodeType": "YulFunctionCall",
																"src": "945:40:6"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:6",
																	"nodeType": "YulTypedName",
																	"src": "931:10:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:6",
																"nodeType": "YulBlock",
																"src": "1096:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:6"
																			},
																			"nativeSrc": "1098:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:6"
																		},
																		"nativeSrc": "1098:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:6",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:6",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:6"
																		},
																		"nativeSrc": "1036:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:6",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:6"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:6"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:6"
																		},
																		"nativeSrc": "1072:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:6"
																},
																"nativeSrc": "1033:62:6",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:6"
															},
															"nativeSrc": "1030:88:6",
															"nodeType": "YulIf",
															"src": "1030:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:6",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:6",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:6"
																},
																"nativeSrc": "1127:22:6",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:6"
															},
															"nativeSrc": "1127:22:6",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:6"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:6",
														"nodeType": "YulTypedName",
														"src": "903:6:6",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:6",
														"nodeType": "YulTypedName",
														"src": "911:4:6",
														"type": ""
													}
												],
												"src": "874:281:6"
											},
											{
												"body": {
													"nativeSrc": "1202:88:6",
													"nodeType": "YulBlock",
													"src": "1202:88:6",
													"statements": [
														{
															"nativeSrc": "1212:30:6",
															"nodeType": "YulAssignment",
															"src": "1212:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:6"
																},
																"nativeSrc": "1222:20:6",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:6"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:6"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:6",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:6"
																},
																"nativeSrc": "1251:33:6",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:6"
															},
															"nativeSrc": "1251:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:6"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:6",
														"nodeType": "YulTypedName",
														"src": "1186:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:6",
														"nodeType": "YulTypedName",
														"src": "1195:6:6",
														"type": ""
													}
												],
												"src": "1161:129:6"
											},
											{
												"body": {
													"nativeSrc": "1363:241:6",
													"nodeType": "YulBlock",
													"src": "1363:241:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:6",
																"nodeType": "YulBlock",
																"src": "1468:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:6"
																			},
																			"nativeSrc": "1470:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:6"
																		},
																		"nativeSrc": "1470:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:6",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:6"
																},
																"nativeSrc": "1437:30:6",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:6"
															},
															"nativeSrc": "1434:56:6",
															"nodeType": "YulIf",
															"src": "1434:56:6"
														},
														{
															"nativeSrc": "1500:37:6",
															"nodeType": "YulAssignment",
															"src": "1500:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:6"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:6",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:6"
																},
																"nativeSrc": "1508:29:6",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:6"
																}
															]
														},
														{
															"nativeSrc": "1574:23:6",
															"nodeType": "YulAssignment",
															"src": "1574:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:6"
																},
																"nativeSrc": "1582:15:6",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:6"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:6",
														"nodeType": "YulTypedName",
														"src": "1347:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:6",
														"nodeType": "YulTypedName",
														"src": "1358:4:6",
														"type": ""
													}
												],
												"src": "1296:308:6"
											},
											{
												"body": {
													"nativeSrc": "1672:77:6",
													"nodeType": "YulBlock",
													"src": "1672:77:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1689:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1689:3:6"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1694:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1694:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1699:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1699:6:6"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1683:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1683:5:6"
																},
																"nativeSrc": "1683:23:6",
																"nodeType": "YulFunctionCall",
																"src": "1683:23:6"
															},
															"nativeSrc": "1683:23:6",
															"nodeType": "YulExpressionStatement",
															"src": "1683:23:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1726:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "1726:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1731:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1731:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1722:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1722:3:6"
																		},
																		"nativeSrc": "1722:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1722:16:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1740:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1740:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1715:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1715:6:6"
																},
																"nativeSrc": "1715:27:6",
																"nodeType": "YulFunctionCall",
																"src": "1715:27:6"
															},
															"nativeSrc": "1715:27:6",
															"nodeType": "YulExpressionStatement",
															"src": "1715:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1610:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1654:3:6",
														"nodeType": "YulTypedName",
														"src": "1654:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1659:3:6",
														"nodeType": "YulTypedName",
														"src": "1659:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1664:6:6",
														"nodeType": "YulTypedName",
														"src": "1664:6:6",
														"type": ""
													}
												],
												"src": "1610:139:6"
											},
											{
												"body": {
													"nativeSrc": "1850:339:6",
													"nodeType": "YulBlock",
													"src": "1850:339:6",
													"statements": [
														{
															"nativeSrc": "1860:75:6",
															"nodeType": "YulAssignment",
															"src": "1860:75:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1927:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1927:6:6"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1885:41:6",
																			"nodeType": "YulIdentifier",
																			"src": "1885:41:6"
																		},
																		"nativeSrc": "1885:49:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1885:49:6"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1869:15:6",
																	"nodeType": "YulIdentifier",
																	"src": "1869:15:6"
																},
																"nativeSrc": "1869:66:6",
																"nodeType": "YulFunctionCall",
																"src": "1869:66:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1860:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1860:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1951:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1951:5:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1958:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1958:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1944:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1944:6:6"
																},
																"nativeSrc": "1944:21:6",
																"nodeType": "YulFunctionCall",
																"src": "1944:21:6"
															},
															"nativeSrc": "1944:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "1944:21:6"
														},
														{
															"nativeSrc": "1974:27:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1974:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1989:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1989:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1996:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1996:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1985:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1985:3:6"
																},
																"nativeSrc": "1985:16:6",
																"nodeType": "YulFunctionCall",
																"src": "1985:16:6"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "1978:3:6",
																	"nodeType": "YulTypedName",
																	"src": "1978:3:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2039:83:6",
																"nodeType": "YulBlock",
																"src": "2039:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2041:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2041:77:6"
																			},
																			"nativeSrc": "2041:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2041:79:6"
																		},
																		"nativeSrc": "2041:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2041:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2020:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2020:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2025:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2025:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2016:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2016:3:6"
																		},
																		"nativeSrc": "2016:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2016:16:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2034:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2034:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2013:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2013:2:6"
																},
																"nativeSrc": "2013:25:6",
																"nodeType": "YulFunctionCall",
																"src": "2013:25:6"
															},
															"nativeSrc": "2010:112:6",
															"nodeType": "YulIf",
															"src": "2010:112:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2166:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:6"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2171:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2171:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2176:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2176:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2131:34:6",
																	"nodeType": "YulIdentifier",
																	"src": "2131:34:6"
																},
																"nativeSrc": "2131:52:6",
																"nodeType": "YulFunctionCall",
																"src": "2131:52:6"
															},
															"nativeSrc": "2131:52:6",
															"nodeType": "YulExpressionStatement",
															"src": "2131:52:6"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "1755:434:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1823:3:6",
														"nodeType": "YulTypedName",
														"src": "1823:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1828:6:6",
														"nodeType": "YulTypedName",
														"src": "1828:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1836:3:6",
														"nodeType": "YulTypedName",
														"src": "1836:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1844:5:6",
														"nodeType": "YulTypedName",
														"src": "1844:5:6",
														"type": ""
													}
												],
												"src": "1755:434:6"
											},
											{
												"body": {
													"nativeSrc": "2282:282:6",
													"nodeType": "YulBlock",
													"src": "2282:282:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2331:83:6",
																"nodeType": "YulBlock",
																"src": "2331:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2333:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2333:77:6"
																			},
																			"nativeSrc": "2333:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2333:79:6"
																		},
																		"nativeSrc": "2333:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2333:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2310:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2310:6:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2318:4:6",
																						"nodeType": "YulLiteral",
																						"src": "2318:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2306:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2306:3:6"
																				},
																				"nativeSrc": "2306:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2306:17:6"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2325:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2325:3:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2302:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2302:3:6"
																		},
																		"nativeSrc": "2302:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2302:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2295:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2295:6:6"
																},
																"nativeSrc": "2295:35:6",
																"nodeType": "YulFunctionCall",
																"src": "2295:35:6"
															},
															"nativeSrc": "2292:122:6",
															"nodeType": "YulIf",
															"src": "2292:122:6"
														},
														{
															"nativeSrc": "2423:27:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2423:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2443:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2443:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2437:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2437:5:6"
																},
																"nativeSrc": "2437:13:6",
																"nodeType": "YulFunctionCall",
																"src": "2437:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2427:6:6",
																	"nodeType": "YulTypedName",
																	"src": "2427:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2459:99:6",
															"nodeType": "YulAssignment",
															"src": "2459:99:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2531:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2539:4:6",
																				"nodeType": "YulLiteral",
																				"src": "2539:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2527:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2527:3:6"
																		},
																		"nativeSrc": "2527:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2527:17:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2546:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2546:6:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2554:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2554:3:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2468:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "2468:58:6"
																},
																"nativeSrc": "2468:90:6",
																"nodeType": "YulFunctionCall",
																"src": "2468:90:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2459:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2459:5:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2209:355:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2260:6:6",
														"nodeType": "YulTypedName",
														"src": "2260:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2268:3:6",
														"nodeType": "YulTypedName",
														"src": "2268:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2276:5:6",
														"nodeType": "YulTypedName",
														"src": "2276:5:6",
														"type": ""
													}
												],
												"src": "2209:355:6"
											},
											{
												"body": {
													"nativeSrc": "2615:32:6",
													"nodeType": "YulBlock",
													"src": "2615:32:6",
													"statements": [
														{
															"nativeSrc": "2625:16:6",
															"nodeType": "YulAssignment",
															"src": "2625:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "2636:5:6",
																"nodeType": "YulIdentifier",
																"src": "2636:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2625:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2625:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2570:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2597:5:6",
														"nodeType": "YulTypedName",
														"src": "2597:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2607:7:6",
														"nodeType": "YulTypedName",
														"src": "2607:7:6",
														"type": ""
													}
												],
												"src": "2570:77:6"
											},
											{
												"body": {
													"nativeSrc": "2696:79:6",
													"nodeType": "YulBlock",
													"src": "2696:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2753:16:6",
																"nodeType": "YulBlock",
																"src": "2753:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2762:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2762:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2765:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2765:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2755:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2755:6:6"
																			},
																			"nativeSrc": "2755:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2755:12:6"
																		},
																		"nativeSrc": "2755:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2755:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2719:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2719:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2744:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2744:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2726:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "2726:17:6"
																				},
																				"nativeSrc": "2726:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2726:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2716:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2716:2:6"
																		},
																		"nativeSrc": "2716:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2716:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2709:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2709:6:6"
																},
																"nativeSrc": "2709:43:6",
																"nodeType": "YulFunctionCall",
																"src": "2709:43:6"
															},
															"nativeSrc": "2706:63:6",
															"nodeType": "YulIf",
															"src": "2706:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2653:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2689:5:6",
														"nodeType": "YulTypedName",
														"src": "2689:5:6",
														"type": ""
													}
												],
												"src": "2653:122:6"
											},
											{
												"body": {
													"nativeSrc": "2844:80:6",
													"nodeType": "YulBlock",
													"src": "2844:80:6",
													"statements": [
														{
															"nativeSrc": "2854:22:6",
															"nodeType": "YulAssignment",
															"src": "2854:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2869:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2869:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2863:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2863:5:6"
																},
																"nativeSrc": "2863:13:6",
																"nodeType": "YulFunctionCall",
																"src": "2863:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2854:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2854:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2912:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2912:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2885:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "2885:26:6"
																},
																"nativeSrc": "2885:33:6",
																"nodeType": "YulFunctionCall",
																"src": "2885:33:6"
															},
															"nativeSrc": "2885:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "2885:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "2781:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2822:6:6",
														"nodeType": "YulTypedName",
														"src": "2822:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2830:3:6",
														"nodeType": "YulTypedName",
														"src": "2830:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2838:5:6",
														"nodeType": "YulTypedName",
														"src": "2838:5:6",
														"type": ""
													}
												],
												"src": "2781:143:6"
											},
											{
												"body": {
													"nativeSrc": "3078:1018:6",
													"nodeType": "YulBlock",
													"src": "3078:1018:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3125:83:6",
																"nodeType": "YulBlock",
																"src": "3125:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3127:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "3127:77:6"
																			},
																			"nativeSrc": "3127:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3127:79:6"
																		},
																		"nativeSrc": "3127:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3127:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3099:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3099:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3108:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3108:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3095:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3095:3:6"
																		},
																		"nativeSrc": "3095:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3095:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3120:3:6",
																		"nodeType": "YulLiteral",
																		"src": "3120:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3091:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3091:3:6"
																},
																"nativeSrc": "3091:33:6",
																"nodeType": "YulFunctionCall",
																"src": "3091:33:6"
															},
															"nativeSrc": "3088:120:6",
															"nodeType": "YulIf",
															"src": "3088:120:6"
														},
														{
															"nativeSrc": "3218:291:6",
															"nodeType": "YulBlock",
															"src": "3218:291:6",
															"statements": [
																{
																	"nativeSrc": "3233:38:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3233:38:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3257:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3257:9:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3268:1:6",
																						"nodeType": "YulLiteral",
																						"src": "3268:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3253:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3253:3:6"
																				},
																				"nativeSrc": "3253:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3253:17:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3247:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "3247:5:6"
																		},
																		"nativeSrc": "3247:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3247:24:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3237:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3237:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3318:83:6",
																		"nodeType": "YulBlock",
																		"src": "3318:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3320:77:6",
																						"nodeType": "YulIdentifier",
																						"src": "3320:77:6"
																					},
																					"nativeSrc": "3320:79:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3320:79:6"
																				},
																				"nativeSrc": "3320:79:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "3320:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3290:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3290:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3298:18:6",
																				"nodeType": "YulLiteral",
																				"src": "3298:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3287:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "3287:2:6"
																		},
																		"nativeSrc": "3287:30:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3287:30:6"
																	},
																	"nativeSrc": "3284:117:6",
																	"nodeType": "YulIf",
																	"src": "3284:117:6"
																},
																{
																	"nativeSrc": "3415:84:6",
																	"nodeType": "YulAssignment",
																	"src": "3415:84:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3471:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3471:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3482:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3482:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3467:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3467:3:6"
																				},
																				"nativeSrc": "3467:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3467:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3491:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3491:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3425:41:6",
																			"nodeType": "YulIdentifier",
																			"src": "3425:41:6"
																		},
																		"nativeSrc": "3425:74:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3425:74:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3415:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3415:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3519:292:6",
															"nodeType": "YulBlock",
															"src": "3519:292:6",
															"statements": [
																{
																	"nativeSrc": "3534:39:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3534:39:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3558:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3558:9:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3569:2:6",
																						"nodeType": "YulLiteral",
																						"src": "3569:2:6",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3554:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3554:3:6"
																				},
																				"nativeSrc": "3554:18:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3554:18:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3548:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "3548:5:6"
																		},
																		"nativeSrc": "3548:25:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3548:25:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3538:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3538:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3620:83:6",
																		"nodeType": "YulBlock",
																		"src": "3620:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3622:77:6",
																						"nodeType": "YulIdentifier",
																						"src": "3622:77:6"
																					},
																					"nativeSrc": "3622:79:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3622:79:6"
																				},
																				"nativeSrc": "3622:79:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "3622:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3592:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3592:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3600:18:6",
																				"nodeType": "YulLiteral",
																				"src": "3600:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3589:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "3589:2:6"
																		},
																		"nativeSrc": "3589:30:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3589:30:6"
																	},
																	"nativeSrc": "3586:117:6",
																	"nodeType": "YulIf",
																	"src": "3586:117:6"
																},
																{
																	"nativeSrc": "3717:84:6",
																	"nodeType": "YulAssignment",
																	"src": "3717:84:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3773:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3773:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3784:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3784:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3769:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3769:3:6"
																				},
																				"nativeSrc": "3769:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3769:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3793:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3793:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3727:41:6",
																			"nodeType": "YulIdentifier",
																			"src": "3727:41:6"
																		},
																		"nativeSrc": "3727:74:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3727:74:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3717:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3717:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3821:129:6",
															"nodeType": "YulBlock",
															"src": "3821:129:6",
															"statements": [
																{
																	"nativeSrc": "3836:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3836:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3850:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3850:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3840:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3840:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3866:74:6",
																	"nodeType": "YulAssignment",
																	"src": "3866:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3912:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3912:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3923:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3923:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3908:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3908:3:6"
																				},
																				"nativeSrc": "3908:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3908:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3932:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3932:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "3876:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "3876:31:6"
																		},
																		"nativeSrc": "3876:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3876:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "3866:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3866:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3960:129:6",
															"nodeType": "YulBlock",
															"src": "3960:129:6",
															"statements": [
																{
																	"nativeSrc": "3975:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3975:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3989:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3989:2:6",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3979:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3979:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4005:74:6",
																	"nodeType": "YulAssignment",
																	"src": "4005:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4051:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4051:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4062:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4062:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4047:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4047:3:6"
																				},
																				"nativeSrc": "4047:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4047:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4071:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4071:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "4015:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "4015:31:6"
																		},
																		"nativeSrc": "4015:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4015:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "4005:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4005:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256_fromMemory",
												"nativeSrc": "2930:1166:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3024:9:6",
														"nodeType": "YulTypedName",
														"src": "3024:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3035:7:6",
														"nodeType": "YulTypedName",
														"src": "3035:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3047:6:6",
														"nodeType": "YulTypedName",
														"src": "3047:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3055:6:6",
														"nodeType": "YulTypedName",
														"src": "3055:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3063:6:6",
														"nodeType": "YulTypedName",
														"src": "3063:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3071:6:6",
														"nodeType": "YulTypedName",
														"src": "3071:6:6",
														"type": ""
													}
												],
												"src": "2930:1166:6"
											},
											{
												"body": {
													"nativeSrc": "4161:40:6",
													"nodeType": "YulBlock",
													"src": "4161:40:6",
													"statements": [
														{
															"nativeSrc": "4172:22:6",
															"nodeType": "YulAssignment",
															"src": "4172:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4188:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4188:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4182:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "4182:5:6"
																},
																"nativeSrc": "4182:12:6",
																"nodeType": "YulFunctionCall",
																"src": "4182:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4172:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4172:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "4102:99:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4144:5:6",
														"nodeType": "YulTypedName",
														"src": "4144:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4154:6:6",
														"nodeType": "YulTypedName",
														"src": "4154:6:6",
														"type": ""
													}
												],
												"src": "4102:99:6"
											},
											{
												"body": {
													"nativeSrc": "4235:152:6",
													"nodeType": "YulBlock",
													"src": "4235:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4252:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4252:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4255:77:6",
																		"nodeType": "YulLiteral",
																		"src": "4255:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4245:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4245:6:6"
																},
																"nativeSrc": "4245:88:6",
																"nodeType": "YulFunctionCall",
																"src": "4245:88:6"
															},
															"nativeSrc": "4245:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "4245:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4349:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4349:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4352:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4352:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4342:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4342:6:6"
																},
																"nativeSrc": "4342:15:6",
																"nodeType": "YulFunctionCall",
																"src": "4342:15:6"
															},
															"nativeSrc": "4342:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "4342:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4373:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4373:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4376:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4376:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4366:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4366:6:6"
																},
																"nativeSrc": "4366:15:6",
																"nodeType": "YulFunctionCall",
																"src": "4366:15:6"
															},
															"nativeSrc": "4366:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "4366:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "4207:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "4207:180:6"
											},
											{
												"body": {
													"nativeSrc": "4444:269:6",
													"nodeType": "YulBlock",
													"src": "4444:269:6",
													"statements": [
														{
															"nativeSrc": "4454:22:6",
															"nodeType": "YulAssignment",
															"src": "4454:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4468:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4468:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4474:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4474:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4464:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4464:3:6"
																},
																"nativeSrc": "4464:12:6",
																"nodeType": "YulFunctionCall",
																"src": "4464:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4454:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4454:6:6"
																}
															]
														},
														{
															"nativeSrc": "4485:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4485:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4515:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4515:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4521:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4521:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4511:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4511:3:6"
																},
																"nativeSrc": "4511:12:6",
																"nodeType": "YulFunctionCall",
																"src": "4511:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4489:18:6",
																	"nodeType": "YulTypedName",
																	"src": "4489:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4562:51:6",
																"nodeType": "YulBlock",
																"src": "4562:51:6",
																"statements": [
																	{
																		"nativeSrc": "4576:27:6",
																		"nodeType": "YulAssignment",
																		"src": "4576:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4590:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "4590:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4598:4:6",
																					"nodeType": "YulLiteral",
																					"src": "4598:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4586:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "4586:3:6"
																			},
																			"nativeSrc": "4586:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4586:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4576:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4576:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4542:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "4542:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4535:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4535:6:6"
																},
																"nativeSrc": "4535:26:6",
																"nodeType": "YulFunctionCall",
																"src": "4535:26:6"
															},
															"nativeSrc": "4532:81:6",
															"nodeType": "YulIf",
															"src": "4532:81:6"
														},
														{
															"body": {
																"nativeSrc": "4665:42:6",
																"nodeType": "YulBlock",
																"src": "4665:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "4679:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "4679:16:6"
																			},
																			"nativeSrc": "4679:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4679:18:6"
																		},
																		"nativeSrc": "4679:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4679:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4629:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "4629:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4652:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4652:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4660:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4660:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4649:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "4649:2:6"
																		},
																		"nativeSrc": "4649:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4649:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4626:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4626:2:6"
																},
																"nativeSrc": "4626:38:6",
																"nodeType": "YulFunctionCall",
																"src": "4626:38:6"
															},
															"nativeSrc": "4623:84:6",
															"nodeType": "YulIf",
															"src": "4623:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4393:320:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4428:4:6",
														"nodeType": "YulTypedName",
														"src": "4428:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4437:6:6",
														"nodeType": "YulTypedName",
														"src": "4437:6:6",
														"type": ""
													}
												],
												"src": "4393:320:6"
											},
											{
												"body": {
													"nativeSrc": "4773:87:6",
													"nodeType": "YulBlock",
													"src": "4773:87:6",
													"statements": [
														{
															"nativeSrc": "4783:11:6",
															"nodeType": "YulAssignment",
															"src": "4783:11:6",
															"value": {
																"name": "ptr",
																"nativeSrc": "4791:3:6",
																"nodeType": "YulIdentifier",
																"src": "4791:3:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4783:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4783:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4811:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4811:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "4814:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4814:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4804:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4804:6:6"
																},
																"nativeSrc": "4804:14:6",
																"nodeType": "YulFunctionCall",
																"src": "4804:14:6"
															},
															"nativeSrc": "4804:14:6",
															"nodeType": "YulExpressionStatement",
															"src": "4804:14:6"
														},
														{
															"nativeSrc": "4827:26:6",
															"nodeType": "YulAssignment",
															"src": "4827:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4845:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4845:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4848:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4848:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "4835:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "4835:9:6"
																},
																"nativeSrc": "4835:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4835:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4827:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4827:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "4719:141:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4760:3:6",
														"nodeType": "YulTypedName",
														"src": "4760:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "4768:4:6",
														"nodeType": "YulTypedName",
														"src": "4768:4:6",
														"type": ""
													}
												],
												"src": "4719:141:6"
											},
											{
												"body": {
													"nativeSrc": "4910:49:6",
													"nodeType": "YulBlock",
													"src": "4910:49:6",
													"statements": [
														{
															"nativeSrc": "4920:33:6",
															"nodeType": "YulAssignment",
															"src": "4920:33:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4938:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4938:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4945:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4945:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4934:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4934:3:6"
																		},
																		"nativeSrc": "4934:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4934:14:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4950:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4950:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4930:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4930:3:6"
																},
																"nativeSrc": "4930:23:6",
																"nodeType": "YulFunctionCall",
																"src": "4930:23:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4920:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4920:6:6"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "4866:93:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4893:5:6",
														"nodeType": "YulTypedName",
														"src": "4893:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4903:6:6",
														"nodeType": "YulTypedName",
														"src": "4903:6:6",
														"type": ""
													}
												],
												"src": "4866:93:6"
											},
											{
												"body": {
													"nativeSrc": "5018:54:6",
													"nodeType": "YulBlock",
													"src": "5018:54:6",
													"statements": [
														{
															"nativeSrc": "5028:37:6",
															"nodeType": "YulAssignment",
															"src": "5028:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "5053:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5053:4:6"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5059:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "5059:5:6"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5049:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5049:3:6"
																},
																"nativeSrc": "5049:16:6",
																"nodeType": "YulFunctionCall",
																"src": "5049:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5028:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "5028:8:6"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "4965:107:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4993:4:6",
														"nodeType": "YulTypedName",
														"src": "4993:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4999:5:6",
														"nodeType": "YulTypedName",
														"src": "4999:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5009:8:6",
														"nodeType": "YulTypedName",
														"src": "5009:8:6",
														"type": ""
													}
												],
												"src": "4965:107:6"
											},
											{
												"body": {
													"nativeSrc": "5154:317:6",
													"nodeType": "YulBlock",
													"src": "5154:317:6",
													"statements": [
														{
															"nativeSrc": "5164:35:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5164:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "5185:10:6",
																		"nodeType": "YulIdentifier",
																		"src": "5185:10:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5197:1:6",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5181:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5181:3:6"
																},
																"nativeSrc": "5181:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5181:18:6"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "5168:9:6",
																	"nodeType": "YulTypedName",
																	"src": "5168:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5208:109:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5208:109:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5239:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5239:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5250:66:6",
																		"nodeType": "YulLiteral",
																		"src": "5250:66:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5220:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "5220:18:6"
																},
																"nativeSrc": "5220:97:6",
																"nodeType": "YulFunctionCall",
																"src": "5220:97:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5212:4:6",
																	"nodeType": "YulTypedName",
																	"src": "5212:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5326:51:6",
															"nodeType": "YulAssignment",
															"src": "5326:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5357:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5357:9:6"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "5368:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "5368:8:6"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5338:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "5338:18:6"
																},
																"nativeSrc": "5338:39:6",
																"nodeType": "YulFunctionCall",
																"src": "5338:39:6"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "5326:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "5326:8:6"
																}
															]
														},
														{
															"nativeSrc": "5386:30:6",
															"nodeType": "YulAssignment",
															"src": "5386:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5399:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "5399:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "5410:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "5410:4:6"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5406:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5406:3:6"
																		},
																		"nativeSrc": "5406:9:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5406:9:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5395:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5395:3:6"
																},
																"nativeSrc": "5395:21:6",
																"nodeType": "YulFunctionCall",
																"src": "5395:21:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5386:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "5386:5:6"
																}
															]
														},
														{
															"nativeSrc": "5425:40:6",
															"nodeType": "YulAssignment",
															"src": "5425:40:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5438:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "5438:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "5449:8:6",
																				"nodeType": "YulIdentifier",
																				"src": "5449:8:6"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "5459:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "5459:4:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5445:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5445:3:6"
																		},
																		"nativeSrc": "5445:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5445:19:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5435:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5435:2:6"
																},
																"nativeSrc": "5435:30:6",
																"nodeType": "YulFunctionCall",
																"src": "5435:30:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5425:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5425:6:6"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "5078:393:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5115:5:6",
														"nodeType": "YulTypedName",
														"src": "5115:5:6",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "5122:10:6",
														"nodeType": "YulTypedName",
														"src": "5122:10:6",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "5134:8:6",
														"nodeType": "YulTypedName",
														"src": "5134:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5147:6:6",
														"nodeType": "YulTypedName",
														"src": "5147:6:6",
														"type": ""
													}
												],
												"src": "5078:393:6"
											},
											{
												"body": {
													"nativeSrc": "5509:28:6",
													"nodeType": "YulBlock",
													"src": "5509:28:6",
													"statements": [
														{
															"nativeSrc": "5519:12:6",
															"nodeType": "YulAssignment",
															"src": "5519:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "5526:5:6",
																"nodeType": "YulIdentifier",
																"src": "5526:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5519:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5519:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5477:60:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5495:5:6",
														"nodeType": "YulTypedName",
														"src": "5495:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5505:3:6",
														"nodeType": "YulTypedName",
														"src": "5505:3:6",
														"type": ""
													}
												],
												"src": "5477:60:6"
											},
											{
												"body": {
													"nativeSrc": "5603:82:6",
													"nodeType": "YulBlock",
													"src": "5603:82:6",
													"statements": [
														{
															"nativeSrc": "5613:66:6",
															"nodeType": "YulAssignment",
															"src": "5613:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5671:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "5671:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5653:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "5653:17:6"
																				},
																				"nativeSrc": "5653:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5644:8:6",
																			"nodeType": "YulIdentifier",
																			"src": "5644:8:6"
																		},
																		"nativeSrc": "5644:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5644:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5626:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "5626:17:6"
																},
																"nativeSrc": "5626:53:6",
																"nodeType": "YulFunctionCall",
																"src": "5626:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5613:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "5613:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "5543:142:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5583:5:6",
														"nodeType": "YulTypedName",
														"src": "5583:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5593:9:6",
														"nodeType": "YulTypedName",
														"src": "5593:9:6",
														"type": ""
													}
												],
												"src": "5543:142:6"
											},
											{
												"body": {
													"nativeSrc": "5738:28:6",
													"nodeType": "YulBlock",
													"src": "5738:28:6",
													"statements": [
														{
															"nativeSrc": "5748:12:6",
															"nodeType": "YulAssignment",
															"src": "5748:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "5755:5:6",
																"nodeType": "YulIdentifier",
																"src": "5755:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5748:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5748:3:6"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "5691:75:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5724:5:6",
														"nodeType": "YulTypedName",
														"src": "5724:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5734:3:6",
														"nodeType": "YulTypedName",
														"src": "5734:3:6",
														"type": ""
													}
												],
												"src": "5691:75:6"
											},
											{
												"body": {
													"nativeSrc": "5848:193:6",
													"nodeType": "YulBlock",
													"src": "5848:193:6",
													"statements": [
														{
															"nativeSrc": "5858:63:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5858:63:6",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "5913:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "5913:7:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "5882:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "5882:30:6"
																},
																"nativeSrc": "5882:39:6",
																"nodeType": "YulFunctionCall",
																"src": "5882:39:6"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "5862:16:6",
																	"nodeType": "YulTypedName",
																	"src": "5862:16:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5937:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5937:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "5977:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "5977:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "5971:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "5971:5:6"
																				},
																				"nativeSrc": "5971:11:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5971:11:6"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "5984:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5984:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "6016:16:6",
																						"nodeType": "YulIdentifier",
																						"src": "6016:16:6"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "5992:23:6",
																					"nodeType": "YulIdentifier",
																					"src": "5992:23:6"
																				},
																				"nativeSrc": "5992:41:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5992:41:6"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "5943:27:6",
																			"nodeType": "YulIdentifier",
																			"src": "5943:27:6"
																		},
																		"nativeSrc": "5943:91:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5943:91:6"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "5930:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5930:6:6"
																},
																"nativeSrc": "5930:105:6",
																"nodeType": "YulFunctionCall",
																"src": "5930:105:6"
															},
															"nativeSrc": "5930:105:6",
															"nodeType": "YulExpressionStatement",
															"src": "5930:105:6"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "5772:269:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5825:4:6",
														"nodeType": "YulTypedName",
														"src": "5825:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5831:6:6",
														"nodeType": "YulTypedName",
														"src": "5831:6:6",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "5839:7:6",
														"nodeType": "YulTypedName",
														"src": "5839:7:6",
														"type": ""
													}
												],
												"src": "5772:269:6"
											},
											{
												"body": {
													"nativeSrc": "6096:24:6",
													"nodeType": "YulBlock",
													"src": "6096:24:6",
													"statements": [
														{
															"nativeSrc": "6106:8:6",
															"nodeType": "YulAssignment",
															"src": "6106:8:6",
															"value": {
																"kind": "number",
																"nativeSrc": "6113:1:6",
																"nodeType": "YulLiteral",
																"src": "6113:1:6",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6106:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6106:3:6"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "6047:73:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6092:3:6",
														"nodeType": "YulTypedName",
														"src": "6092:3:6",
														"type": ""
													}
												],
												"src": "6047:73:6"
											},
											{
												"body": {
													"nativeSrc": "6179:136:6",
													"nodeType": "YulBlock",
													"src": "6179:136:6",
													"statements": [
														{
															"nativeSrc": "6189:46:6",
															"nodeType": "YulVariableDeclaration",
															"src": "6189:46:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "6203:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "6203:30:6"
																},
																"nativeSrc": "6203:32:6",
																"nodeType": "YulFunctionCall",
																"src": "6203:32:6"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "6193:6:6",
																	"nodeType": "YulTypedName",
																	"src": "6193:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6288:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6288:4:6"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "6294:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6294:6:6"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "6302:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6302:6:6"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "6244:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "6244:43:6"
																},
																"nativeSrc": "6244:65:6",
																"nodeType": "YulFunctionCall",
																"src": "6244:65:6"
															},
															"nativeSrc": "6244:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "6244:65:6"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "6126:189:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6165:4:6",
														"nodeType": "YulTypedName",
														"src": "6165:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6171:6:6",
														"nodeType": "YulTypedName",
														"src": "6171:6:6",
														"type": ""
													}
												],
												"src": "6126:189:6"
											},
											{
												"body": {
													"nativeSrc": "6371:136:6",
													"nodeType": "YulBlock",
													"src": "6371:136:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "6438:63:6",
																"nodeType": "YulBlock",
																"src": "6438:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6482:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "6482:5:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6489:1:6",
																					"nodeType": "YulLiteral",
																					"src": "6489:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "6452:29:6",
																				"nodeType": "YulIdentifier",
																				"src": "6452:29:6"
																			},
																			"nativeSrc": "6452:39:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6452:39:6"
																		},
																		"nativeSrc": "6452:39:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6452:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "6391:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "6391:5:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6398:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6398:3:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6388:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "6388:2:6"
																},
																"nativeSrc": "6388:14:6",
																"nodeType": "YulFunctionCall",
																"src": "6388:14:6"
															},
															"nativeSrc": "6381:120:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6403:26:6",
																"nodeType": "YulBlock",
																"src": "6403:26:6",
																"statements": [
																	{
																		"nativeSrc": "6405:22:6",
																		"nodeType": "YulAssignment",
																		"src": "6405:22:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6418:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "6418:5:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6425:1:6",
																					"nodeType": "YulLiteral",
																					"src": "6425:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6414:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "6414:3:6"
																			},
																			"nativeSrc": "6414:13:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6414:13:6"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "6405:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "6405:5:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6385:2:6",
																"nodeType": "YulBlock",
																"src": "6385:2:6",
																"statements": []
															},
															"src": "6381:120:6"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "6321:186:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "6359:5:6",
														"nodeType": "YulTypedName",
														"src": "6359:5:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6366:3:6",
														"nodeType": "YulTypedName",
														"src": "6366:3:6",
														"type": ""
													}
												],
												"src": "6321:186:6"
											},
											{
												"body": {
													"nativeSrc": "6592:464:6",
													"nodeType": "YulBlock",
													"src": "6592:464:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "6618:431:6",
																"nodeType": "YulBlock",
																"src": "6618:431:6",
																"statements": [
																	{
																		"nativeSrc": "6632:54:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6632:54:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "6680:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "6680:5:6"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "6648:31:6",
																				"nodeType": "YulIdentifier",
																				"src": "6648:31:6"
																			},
																			"nativeSrc": "6648:38:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6648:38:6"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "6636:8:6",
																				"nodeType": "YulTypedName",
																				"src": "6636:8:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6699:63:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6699:63:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "6722:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "6722:8:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "6750:10:6",
																							"nodeType": "YulIdentifier",
																							"src": "6750:10:6"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "6732:17:6",
																						"nodeType": "YulIdentifier",
																						"src": "6732:17:6"
																					},
																					"nativeSrc": "6732:29:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6732:29:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6718:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "6718:3:6"
																			},
																			"nativeSrc": "6718:44:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6718:44:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "6703:11:6",
																				"nodeType": "YulTypedName",
																				"src": "6703:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "6919:27:6",
																			"nodeType": "YulBlock",
																			"src": "6919:27:6",
																			"statements": [
																				{
																					"nativeSrc": "6921:23:6",
																					"nodeType": "YulAssignment",
																					"src": "6921:23:6",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "6936:8:6",
																						"nodeType": "YulIdentifier",
																						"src": "6936:8:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "6921:11:6",
																							"nodeType": "YulIdentifier",
																							"src": "6921:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "6903:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "6903:10:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6915:2:6",
																					"nodeType": "YulLiteral",
																					"src": "6915:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "6900:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "6900:2:6"
																			},
																			"nativeSrc": "6900:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6900:18:6"
																		},
																		"nativeSrc": "6897:49:6",
																		"nodeType": "YulIf",
																		"src": "6897:49:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "6988:11:6",
																					"nodeType": "YulIdentifier",
																					"src": "6988:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "7005:8:6",
																							"nodeType": "YulIdentifier",
																							"src": "7005:8:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "7033:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "7033:3:6"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "7015:17:6",
																								"nodeType": "YulIdentifier",
																								"src": "7015:17:6"
																							},
																							"nativeSrc": "7015:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "7015:22:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7001:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "7001:3:6"
																					},
																					"nativeSrc": "7001:37:6",
																					"nodeType": "YulFunctionCall",
																					"src": "7001:37:6"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "6959:28:6",
																				"nodeType": "YulIdentifier",
																				"src": "6959:28:6"
																			},
																			"nativeSrc": "6959:80:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6959:80:6"
																		},
																		"nativeSrc": "6959:80:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6959:80:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6609:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6609:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6614:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6614:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6606:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "6606:2:6"
																},
																"nativeSrc": "6606:11:6",
																"nodeType": "YulFunctionCall",
																"src": "6606:11:6"
															},
															"nativeSrc": "6603:446:6",
															"nodeType": "YulIf",
															"src": "6603:446:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "6513:543:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "6568:5:6",
														"nodeType": "YulTypedName",
														"src": "6568:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6575:3:6",
														"nodeType": "YulTypedName",
														"src": "6575:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "6580:10:6",
														"nodeType": "YulTypedName",
														"src": "6580:10:6",
														"type": ""
													}
												],
												"src": "6513:543:6"
											},
											{
												"body": {
													"nativeSrc": "7125:54:6",
													"nodeType": "YulBlock",
													"src": "7125:54:6",
													"statements": [
														{
															"nativeSrc": "7135:37:6",
															"nodeType": "YulAssignment",
															"src": "7135:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "7160:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7160:4:6"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7166:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "7166:5:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7156:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7156:3:6"
																},
																"nativeSrc": "7156:16:6",
																"nodeType": "YulFunctionCall",
																"src": "7156:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7135:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "7135:8:6"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "7062:117:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "7100:4:6",
														"nodeType": "YulTypedName",
														"src": "7100:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "7106:5:6",
														"nodeType": "YulTypedName",
														"src": "7106:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7116:8:6",
														"nodeType": "YulTypedName",
														"src": "7116:8:6",
														"type": ""
													}
												],
												"src": "7062:117:6"
											},
											{
												"body": {
													"nativeSrc": "7236:118:6",
													"nodeType": "YulBlock",
													"src": "7236:118:6",
													"statements": [
														{
															"nativeSrc": "7246:68:6",
															"nodeType": "YulVariableDeclaration",
															"src": "7246:68:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7295:1:6",
																						"nodeType": "YulLiteral",
																						"src": "7295:1:6",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "7298:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "7298:5:6"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7291:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7291:3:6"
																				},
																				"nativeSrc": "7291:13:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7291:13:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7310:1:6",
																						"nodeType": "YulLiteral",
																						"src": "7310:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "7306:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7306:3:6"
																				},
																				"nativeSrc": "7306:6:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7306:6:6"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "7262:28:6",
																			"nodeType": "YulIdentifier",
																			"src": "7262:28:6"
																		},
																		"nativeSrc": "7262:51:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7262:51:6"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "7258:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7258:3:6"
																},
																"nativeSrc": "7258:56:6",
																"nodeType": "YulFunctionCall",
																"src": "7258:56:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "7250:4:6",
																	"nodeType": "YulTypedName",
																	"src": "7250:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7323:25:6",
															"nodeType": "YulAssignment",
															"src": "7323:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7337:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7337:4:6"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "7343:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7343:4:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7333:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7333:3:6"
																},
																"nativeSrc": "7333:15:6",
																"nodeType": "YulFunctionCall",
																"src": "7333:15:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7323:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7323:6:6"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "7185:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7213:4:6",
														"nodeType": "YulTypedName",
														"src": "7213:4:6",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "7219:5:6",
														"nodeType": "YulTypedName",
														"src": "7219:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7229:6:6",
														"nodeType": "YulTypedName",
														"src": "7229:6:6",
														"type": ""
													}
												],
												"src": "7185:169:6"
											},
											{
												"body": {
													"nativeSrc": "7440:214:6",
													"nodeType": "YulBlock",
													"src": "7440:214:6",
													"statements": [
														{
															"nativeSrc": "7573:37:6",
															"nodeType": "YulAssignment",
															"src": "7573:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7600:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7600:4:6"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7606:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7606:3:6"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "7581:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "7581:18:6"
																},
																"nativeSrc": "7581:29:6",
																"nodeType": "YulFunctionCall",
																"src": "7581:29:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7573:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7573:4:6"
																}
															]
														},
														{
															"nativeSrc": "7619:29:6",
															"nodeType": "YulAssignment",
															"src": "7619:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7630:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7630:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7640:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7640:1:6",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "7643:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "7643:3:6"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7636:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7636:3:6"
																		},
																		"nativeSrc": "7636:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7636:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7627:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "7627:2:6"
																},
																"nativeSrc": "7627:21:6",
																"nodeType": "YulFunctionCall",
																"src": "7627:21:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7619:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7619:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "7359:295:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7421:4:6",
														"nodeType": "YulTypedName",
														"src": "7421:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7427:3:6",
														"nodeType": "YulTypedName",
														"src": "7427:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "7435:4:6",
														"nodeType": "YulTypedName",
														"src": "7435:4:6",
														"type": ""
													}
												],
												"src": "7359:295:6"
											},
											{
												"body": {
													"nativeSrc": "7751:1303:6",
													"nodeType": "YulBlock",
													"src": "7751:1303:6",
													"statements": [
														{
															"nativeSrc": "7762:51:6",
															"nodeType": "YulVariableDeclaration",
															"src": "7762:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7809:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7809:3:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "7776:32:6",
																	"nodeType": "YulIdentifier",
																	"src": "7776:32:6"
																},
																"nativeSrc": "7776:37:6",
																"nodeType": "YulFunctionCall",
																"src": "7776:37:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "7766:6:6",
																	"nodeType": "YulTypedName",
																	"src": "7766:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7898:22:6",
																"nodeType": "YulBlock",
																"src": "7898:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7900:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "7900:16:6"
																			},
																			"nativeSrc": "7900:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7900:18:6"
																		},
																		"nativeSrc": "7900:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "7900:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7870:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7870:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7878:18:6",
																		"nodeType": "YulLiteral",
																		"src": "7878:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7867:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "7867:2:6"
																},
																"nativeSrc": "7867:30:6",
																"nodeType": "YulFunctionCall",
																"src": "7867:30:6"
															},
															"nativeSrc": "7864:56:6",
															"nodeType": "YulIf",
															"src": "7864:56:6"
														},
														{
															"nativeSrc": "7930:52:6",
															"nodeType": "YulVariableDeclaration",
															"src": "7930:52:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "7976:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "7976:4:6"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "7970:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "7970:5:6"
																		},
																		"nativeSrc": "7970:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7970:11:6"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "7944:25:6",
																	"nodeType": "YulIdentifier",
																	"src": "7944:25:6"
																},
																"nativeSrc": "7944:38:6",
																"nodeType": "YulFunctionCall",
																"src": "7944:38:6"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "7934:6:6",
																	"nodeType": "YulTypedName",
																	"src": "7934:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "8075:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "8075:4:6"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "8081:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8081:6:6"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "8089:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8089:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "8029:45:6",
																	"nodeType": "YulIdentifier",
																	"src": "8029:45:6"
																},
																"nativeSrc": "8029:67:6",
																"nodeType": "YulFunctionCall",
																"src": "8029:67:6"
															},
															"nativeSrc": "8029:67:6",
															"nodeType": "YulExpressionStatement",
															"src": "8029:67:6"
														},
														{
															"nativeSrc": "8106:18:6",
															"nodeType": "YulVariableDeclaration",
															"src": "8106:18:6",
															"value": {
																"kind": "number",
																"nativeSrc": "8123:1:6",
																"nodeType": "YulLiteral",
																"src": "8123:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8110:9:6",
																	"nodeType": "YulTypedName",
																	"src": "8110:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8134:17:6",
															"nodeType": "YulAssignment",
															"src": "8134:17:6",
															"value": {
																"kind": "number",
																"nativeSrc": "8147:4:6",
																"nodeType": "YulLiteral",
																"src": "8147:4:6",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8134:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "8134:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8198:611:6",
																		"nodeType": "YulBlock",
																		"src": "8198:611:6",
																		"statements": [
																			{
																				"nativeSrc": "8212:37:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8212:37:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "8231:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "8231:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "8243:4:6",
																									"nodeType": "YulLiteral",
																									"src": "8243:4:6",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "8239:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "8239:3:6"
																							},
																							"nativeSrc": "8239:9:6",
																							"nodeType": "YulFunctionCall",
																							"src": "8239:9:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "8227:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "8227:3:6"
																					},
																					"nativeSrc": "8227:22:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8227:22:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "8216:7:6",
																						"nodeType": "YulTypedName",
																						"src": "8216:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8263:51:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8263:51:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8309:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "8309:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "8277:31:6",
																						"nodeType": "YulIdentifier",
																						"src": "8277:31:6"
																					},
																					"nativeSrc": "8277:37:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8277:37:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "8267:6:6",
																						"nodeType": "YulTypedName",
																						"src": "8267:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8327:10:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8327:10:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8336:1:6",
																					"nodeType": "YulLiteral",
																					"src": "8336:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "8331:1:6",
																						"nodeType": "YulTypedName",
																						"src": "8331:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8395:163:6",
																					"nodeType": "YulBlock",
																					"src": "8395:163:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8420:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "8420:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "8438:3:6",
																														"nodeType": "YulIdentifier",
																														"src": "8438:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "8443:9:6",
																														"nodeType": "YulIdentifier",
																														"src": "8443:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "8434:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "8434:3:6"
																												},
																												"nativeSrc": "8434:19:6",
																												"nodeType": "YulFunctionCall",
																												"src": "8434:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "8428:5:6",
																											"nodeType": "YulIdentifier",
																											"src": "8428:5:6"
																										},
																										"nativeSrc": "8428:26:6",
																										"nodeType": "YulFunctionCall",
																										"src": "8428:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8413:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "8413:6:6"
																								},
																								"nativeSrc": "8413:42:6",
																								"nodeType": "YulFunctionCall",
																								"src": "8413:42:6"
																							},
																							"nativeSrc": "8413:42:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "8413:42:6"
																						},
																						{
																							"nativeSrc": "8472:24:6",
																							"nodeType": "YulAssignment",
																							"src": "8472:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8486:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "8486:6:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8494:1:6",
																										"nodeType": "YulLiteral",
																										"src": "8494:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8482:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "8482:3:6"
																								},
																								"nativeSrc": "8482:14:6",
																								"nodeType": "YulFunctionCall",
																								"src": "8482:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "8472:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "8472:6:6"
																								}
																							]
																						},
																						{
																							"nativeSrc": "8513:31:6",
																							"nodeType": "YulAssignment",
																							"src": "8513:31:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "8530:9:6",
																										"nodeType": "YulIdentifier",
																										"src": "8530:9:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8541:2:6",
																										"nodeType": "YulLiteral",
																										"src": "8541:2:6",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8526:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "8526:3:6"
																								},
																								"nativeSrc": "8526:18:6",
																								"nodeType": "YulFunctionCall",
																								"src": "8526:18:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "8513:9:6",
																									"nodeType": "YulIdentifier",
																									"src": "8513:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "8361:1:6",
																							"nodeType": "YulIdentifier",
																							"src": "8361:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8364:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "8364:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8358:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "8358:2:6"
																					},
																					"nativeSrc": "8358:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8358:14:6"
																				},
																				"nativeSrc": "8350:208:6",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "8373:21:6",
																					"nodeType": "YulBlock",
																					"src": "8373:21:6",
																					"statements": [
																						{
																							"nativeSrc": "8375:17:6",
																							"nodeType": "YulAssignment",
																							"src": "8375:17:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "8384:1:6",
																										"nodeType": "YulIdentifier",
																										"src": "8384:1:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8387:4:6",
																										"nodeType": "YulLiteral",
																										"src": "8387:4:6",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8380:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "8380:3:6"
																								},
																								"nativeSrc": "8380:12:6",
																								"nodeType": "YulFunctionCall",
																								"src": "8380:12:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "8375:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "8375:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "8354:3:6",
																					"nodeType": "YulBlock",
																					"src": "8354:3:6",
																					"statements": []
																				},
																				"src": "8350:208:6"
																			},
																			{
																				"body": {
																					"nativeSrc": "8594:156:6",
																					"nodeType": "YulBlock",
																					"src": "8594:156:6",
																					"statements": [
																						{
																							"nativeSrc": "8612:43:6",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8612:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8639:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "8639:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8644:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "8644:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8635:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "8635:3:6"
																										},
																										"nativeSrc": "8635:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "8635:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8629:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "8629:5:6"
																								},
																								"nativeSrc": "8629:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "8629:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8616:9:6",
																									"nodeType": "YulTypedName",
																									"src": "8616:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8679:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "8679:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "8706:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "8706:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "8721:6:6",
																														"nodeType": "YulIdentifier",
																														"src": "8721:6:6"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "8729:4:6",
																														"nodeType": "YulLiteral",
																														"src": "8729:4:6",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "8717:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "8717:3:6"
																												},
																												"nativeSrc": "8717:17:6",
																												"nodeType": "YulFunctionCall",
																												"src": "8717:17:6"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "8687:18:6",
																											"nodeType": "YulIdentifier",
																											"src": "8687:18:6"
																										},
																										"nativeSrc": "8687:48:6",
																										"nodeType": "YulFunctionCall",
																										"src": "8687:48:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8672:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "8672:6:6"
																								},
																								"nativeSrc": "8672:64:6",
																								"nodeType": "YulFunctionCall",
																								"src": "8672:64:6"
																							},
																							"nativeSrc": "8672:64:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "8672:64:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8577:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "8577:7:6"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "8586:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "8586:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8574:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "8574:2:6"
																					},
																					"nativeSrc": "8574:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8574:19:6"
																				},
																				"nativeSrc": "8571:179:6",
																				"nodeType": "YulIf",
																				"src": "8571:179:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8770:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "8770:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "8784:6:6",
																											"nodeType": "YulIdentifier",
																											"src": "8784:6:6"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "8792:1:6",
																											"nodeType": "YulLiteral",
																											"src": "8792:1:6",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "8780:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "8780:3:6"
																									},
																									"nativeSrc": "8780:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "8780:14:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8796:1:6",
																									"nodeType": "YulLiteral",
																									"src": "8796:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8776:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "8776:3:6"
																							},
																							"nativeSrc": "8776:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "8776:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8763:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "8763:6:6"
																					},
																					"nativeSrc": "8763:36:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8763:36:6"
																				},
																				"nativeSrc": "8763:36:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "8763:36:6"
																			}
																		]
																	},
																	"nativeSrc": "8191:618:6",
																	"nodeType": "YulCase",
																	"src": "8191:618:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8196:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8196:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8826:222:6",
																		"nodeType": "YulBlock",
																		"src": "8826:222:6",
																		"statements": [
																			{
																				"nativeSrc": "8840:14:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8840:14:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8853:1:6",
																					"nodeType": "YulLiteral",
																					"src": "8853:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "8844:5:6",
																						"nodeType": "YulTypedName",
																						"src": "8844:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8877:67:6",
																					"nodeType": "YulBlock",
																					"src": "8877:67:6",
																					"statements": [
																						{
																							"nativeSrc": "8895:35:6",
																							"nodeType": "YulAssignment",
																							"src": "8895:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8914:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "8914:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8919:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "8919:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8910:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "8910:3:6"
																										},
																										"nativeSrc": "8910:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "8910:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8904:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "8904:5:6"
																								},
																								"nativeSrc": "8904:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "8904:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "8895:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "8895:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "8870:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "8870:6:6"
																				},
																				"nativeSrc": "8867:77:6",
																				"nodeType": "YulIf",
																				"src": "8867:77:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8964:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "8964:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "9023:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "9023:5:6"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "9030:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "9030:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "8970:52:6",
																								"nodeType": "YulIdentifier",
																								"src": "8970:52:6"
																							},
																							"nativeSrc": "8970:67:6",
																							"nodeType": "YulFunctionCall",
																							"src": "8970:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8957:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "8957:6:6"
																					},
																					"nativeSrc": "8957:81:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8957:81:6"
																				},
																				"nativeSrc": "8957:81:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "8957:81:6"
																			}
																		]
																	},
																	"nativeSrc": "8818:230:6",
																	"nodeType": "YulCase",
																	"src": "8818:230:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8171:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8171:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8179:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8179:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8168:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "8168:2:6"
																},
																"nativeSrc": "8168:14:6",
																"nodeType": "YulFunctionCall",
																"src": "8168:14:6"
															},
															"nativeSrc": "8161:887:6",
															"nodeType": "YulSwitch",
															"src": "8161:887:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "7659:1395:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7740:4:6",
														"nodeType": "YulTypedName",
														"src": "7740:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "7746:3:6",
														"nodeType": "YulTypedName",
														"src": "7746:3:6",
														"type": ""
													}
												],
												"src": "7659:1395:6"
											},
											{
												"body": {
													"nativeSrc": "9156:73:6",
													"nodeType": "YulBlock",
													"src": "9156:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9173:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9173:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9178:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "9178:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9166:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9166:6:6"
																},
																"nativeSrc": "9166:19:6",
																"nodeType": "YulFunctionCall",
																"src": "9166:19:6"
															},
															"nativeSrc": "9166:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "9166:19:6"
														},
														{
															"nativeSrc": "9194:29:6",
															"nodeType": "YulAssignment",
															"src": "9194:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9213:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9213:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9218:4:6",
																		"nodeType": "YulLiteral",
																		"src": "9218:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9209:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9209:3:6"
																},
																"nativeSrc": "9209:14:6",
																"nodeType": "YulFunctionCall",
																"src": "9209:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "9194:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "9194:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "9060:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9128:3:6",
														"nodeType": "YulTypedName",
														"src": "9128:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9133:6:6",
														"nodeType": "YulTypedName",
														"src": "9133:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "9144:11:6",
														"nodeType": "YulTypedName",
														"src": "9144:11:6",
														"type": ""
													}
												],
												"src": "9060:169:6"
											},
											{
												"body": {
													"nativeSrc": "9341:118:6",
													"nodeType": "YulBlock",
													"src": "9341:118:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9363:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "9363:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9371:1:6",
																				"nodeType": "YulLiteral",
																				"src": "9371:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9359:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9359:3:6"
																		},
																		"nativeSrc": "9359:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9359:14:6"
																	},
																	{
																		"hexValue": "456c2070726563696f206e6f20707565646520736572206d656e6f7220717565",
																		"kind": "string",
																		"nativeSrc": "9375:34:6",
																		"nodeType": "YulLiteral",
																		"src": "9375:34:6",
																		"type": "",
																		"value": "El precio no puede ser menor que"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9352:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9352:6:6"
																},
																"nativeSrc": "9352:58:6",
																"nodeType": "YulFunctionCall",
																"src": "9352:58:6"
															},
															"nativeSrc": "9352:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "9352:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9431:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "9431:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9439:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9439:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9427:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9427:3:6"
																		},
																		"nativeSrc": "9427:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9427:15:6"
																	},
																	{
																		"hexValue": "206365726f",
																		"kind": "string",
																		"nativeSrc": "9444:7:6",
																		"nodeType": "YulLiteral",
																		"src": "9444:7:6",
																		"type": "",
																		"value": " cero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9420:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9420:6:6"
																},
																"nativeSrc": "9420:32:6",
																"nodeType": "YulFunctionCall",
																"src": "9420:32:6"
															},
															"nativeSrc": "9420:32:6",
															"nodeType": "YulExpressionStatement",
															"src": "9420:32:6"
														}
													]
												},
												"name": "store_literal_in_memory_6a6c01ec836a8333db641469830370640c16d66a01d78c4ea94d5b2ce3cbdeff",
												"nativeSrc": "9235:224:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9333:6:6",
														"nodeType": "YulTypedName",
														"src": "9333:6:6",
														"type": ""
													}
												],
												"src": "9235:224:6"
											},
											{
												"body": {
													"nativeSrc": "9611:220:6",
													"nodeType": "YulBlock",
													"src": "9611:220:6",
													"statements": [
														{
															"nativeSrc": "9621:74:6",
															"nodeType": "YulAssignment",
															"src": "9621:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9687:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9687:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9692:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9692:2:6",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9628:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "9628:58:6"
																},
																"nativeSrc": "9628:67:6",
																"nodeType": "YulFunctionCall",
																"src": "9628:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9621:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9621:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9793:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9793:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6a6c01ec836a8333db641469830370640c16d66a01d78c4ea94d5b2ce3cbdeff",
																	"nativeSrc": "9704:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "9704:88:6"
																},
																"nativeSrc": "9704:93:6",
																"nodeType": "YulFunctionCall",
																"src": "9704:93:6"
															},
															"nativeSrc": "9704:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "9704:93:6"
														},
														{
															"nativeSrc": "9806:19:6",
															"nodeType": "YulAssignment",
															"src": "9806:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9817:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9817:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9822:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9822:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9813:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9813:3:6"
																},
																"nativeSrc": "9813:12:6",
																"nodeType": "YulFunctionCall",
																"src": "9813:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9806:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9806:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6a6c01ec836a8333db641469830370640c16d66a01d78c4ea94d5b2ce3cbdeff_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9465:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9599:3:6",
														"nodeType": "YulTypedName",
														"src": "9599:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9607:3:6",
														"nodeType": "YulTypedName",
														"src": "9607:3:6",
														"type": ""
													}
												],
												"src": "9465:366:6"
											},
											{
												"body": {
													"nativeSrc": "10008:248:6",
													"nodeType": "YulBlock",
													"src": "10008:248:6",
													"statements": [
														{
															"nativeSrc": "10018:26:6",
															"nodeType": "YulAssignment",
															"src": "10018:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10030:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "10030:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10041:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10041:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10026:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10026:3:6"
																},
																"nativeSrc": "10026:18:6",
																"nodeType": "YulFunctionCall",
																"src": "10026:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10018:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10018:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10065:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10065:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10076:1:6",
																				"nodeType": "YulLiteral",
																				"src": "10076:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10061:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10061:3:6"
																		},
																		"nativeSrc": "10061:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10061:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10084:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "10084:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10090:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10090:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10080:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10080:3:6"
																		},
																		"nativeSrc": "10080:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10080:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10054:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10054:6:6"
																},
																"nativeSrc": "10054:47:6",
																"nodeType": "YulFunctionCall",
																"src": "10054:47:6"
															},
															"nativeSrc": "10054:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "10054:47:6"
														},
														{
															"nativeSrc": "10110:139:6",
															"nodeType": "YulAssignment",
															"src": "10110:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10244:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "10244:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6a6c01ec836a8333db641469830370640c16d66a01d78c4ea94d5b2ce3cbdeff_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10118:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "10118:124:6"
																},
																"nativeSrc": "10118:131:6",
																"nodeType": "YulFunctionCall",
																"src": "10118:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10110:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10110:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6a6c01ec836a8333db641469830370640c16d66a01d78c4ea94d5b2ce3cbdeff__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9837:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9988:9:6",
														"nodeType": "YulTypedName",
														"src": "9988:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10003:4:6",
														"nodeType": "YulTypedName",
														"src": "10003:4:6",
														"type": ""
													}
												],
												"src": "9837:419:6"
											},
											{
												"body": {
													"nativeSrc": "10368:128:6",
													"nodeType": "YulBlock",
													"src": "10368:128:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10390:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "10390:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10398:1:6",
																				"nodeType": "YulLiteral",
																				"src": "10398:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10386:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10386:3:6"
																		},
																		"nativeSrc": "10386:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10386:14:6"
																	},
																	{
																		"hexValue": "456c206d6178696d6f20646520746f6b656e73206e6f20707565646520736572",
																		"kind": "string",
																		"nativeSrc": "10402:34:6",
																		"nodeType": "YulLiteral",
																		"src": "10402:34:6",
																		"type": "",
																		"value": "El maximo de tokens no puede ser"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10379:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10379:6:6"
																},
																"nativeSrc": "10379:58:6",
																"nodeType": "YulFunctionCall",
																"src": "10379:58:6"
															},
															"nativeSrc": "10379:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "10379:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10458:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "10458:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10466:2:6",
																				"nodeType": "YulLiteral",
																				"src": "10466:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10454:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10454:3:6"
																		},
																		"nativeSrc": "10454:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10454:15:6"
																	},
																	{
																		"hexValue": "206d656e6f7220717565206365726f",
																		"kind": "string",
																		"nativeSrc": "10471:17:6",
																		"nodeType": "YulLiteral",
																		"src": "10471:17:6",
																		"type": "",
																		"value": " menor que cero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10447:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10447:6:6"
																},
																"nativeSrc": "10447:42:6",
																"nodeType": "YulFunctionCall",
																"src": "10447:42:6"
															},
															"nativeSrc": "10447:42:6",
															"nodeType": "YulExpressionStatement",
															"src": "10447:42:6"
														}
													]
												},
												"name": "store_literal_in_memory_e3deb8891861fc33e56f6ca4e0f0b1ebf88cbcc690d2390f61fcb463e2c54c75",
												"nativeSrc": "10262:234:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10360:6:6",
														"nodeType": "YulTypedName",
														"src": "10360:6:6",
														"type": ""
													}
												],
												"src": "10262:234:6"
											},
											{
												"body": {
													"nativeSrc": "10648:220:6",
													"nodeType": "YulBlock",
													"src": "10648:220:6",
													"statements": [
														{
															"nativeSrc": "10658:74:6",
															"nodeType": "YulAssignment",
															"src": "10658:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10724:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10724:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10729:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10729:2:6",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10665:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "10665:58:6"
																},
																"nativeSrc": "10665:67:6",
																"nodeType": "YulFunctionCall",
																"src": "10665:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10658:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10658:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10830:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10830:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e3deb8891861fc33e56f6ca4e0f0b1ebf88cbcc690d2390f61fcb463e2c54c75",
																	"nativeSrc": "10741:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "10741:88:6"
																},
																"nativeSrc": "10741:93:6",
																"nodeType": "YulFunctionCall",
																"src": "10741:93:6"
															},
															"nativeSrc": "10741:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "10741:93:6"
														},
														{
															"nativeSrc": "10843:19:6",
															"nodeType": "YulAssignment",
															"src": "10843:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10854:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10854:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10859:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10859:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10850:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10850:3:6"
																},
																"nativeSrc": "10850:12:6",
																"nodeType": "YulFunctionCall",
																"src": "10850:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10843:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10843:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e3deb8891861fc33e56f6ca4e0f0b1ebf88cbcc690d2390f61fcb463e2c54c75_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10502:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10636:3:6",
														"nodeType": "YulTypedName",
														"src": "10636:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10644:3:6",
														"nodeType": "YulTypedName",
														"src": "10644:3:6",
														"type": ""
													}
												],
												"src": "10502:366:6"
											},
											{
												"body": {
													"nativeSrc": "11045:248:6",
													"nodeType": "YulBlock",
													"src": "11045:248:6",
													"statements": [
														{
															"nativeSrc": "11055:26:6",
															"nodeType": "YulAssignment",
															"src": "11055:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11067:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "11067:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11078:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11078:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11063:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11063:3:6"
																},
																"nativeSrc": "11063:18:6",
																"nodeType": "YulFunctionCall",
																"src": "11063:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11055:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11055:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11102:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11102:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11113:1:6",
																				"nodeType": "YulLiteral",
																				"src": "11113:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11098:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11098:3:6"
																		},
																		"nativeSrc": "11098:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11098:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11121:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "11121:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11127:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11127:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11117:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11117:3:6"
																		},
																		"nativeSrc": "11117:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11117:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11091:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11091:6:6"
																},
																"nativeSrc": "11091:47:6",
																"nodeType": "YulFunctionCall",
																"src": "11091:47:6"
															},
															"nativeSrc": "11091:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "11091:47:6"
														},
														{
															"nativeSrc": "11147:139:6",
															"nodeType": "YulAssignment",
															"src": "11147:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11281:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "11281:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e3deb8891861fc33e56f6ca4e0f0b1ebf88cbcc690d2390f61fcb463e2c54c75_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11155:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "11155:124:6"
																},
																"nativeSrc": "11155:131:6",
																"nodeType": "YulFunctionCall",
																"src": "11155:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11147:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11147:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e3deb8891861fc33e56f6ca4e0f0b1ebf88cbcc690d2390f61fcb463e2c54c75__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10874:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11025:9:6",
														"nodeType": "YulTypedName",
														"src": "11025:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11040:4:6",
														"nodeType": "YulTypedName",
														"src": "11040:4:6",
														"type": ""
													}
												],
												"src": "10874:419:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_6a6c01ec836a8333db641469830370640c16d66a01d78c4ea94d5b2ce3cbdeff(memPtr) {\n\n        mstore(add(memPtr, 0), \"El precio no puede ser menor que\")\n\n        mstore(add(memPtr, 32), \" cero\")\n\n    }\n\n    function abi_encode_t_stringliteral_6a6c01ec836a8333db641469830370640c16d66a01d78c4ea94d5b2ce3cbdeff_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_6a6c01ec836a8333db641469830370640c16d66a01d78c4ea94d5b2ce3cbdeff(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6a6c01ec836a8333db641469830370640c16d66a01d78c4ea94d5b2ce3cbdeff__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6a6c01ec836a8333db641469830370640c16d66a01d78c4ea94d5b2ce3cbdeff_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e3deb8891861fc33e56f6ca4e0f0b1ebf88cbcc690d2390f61fcb463e2c54c75(memPtr) {\n\n        mstore(add(memPtr, 0), \"El maximo de tokens no puede ser\")\n\n        mstore(add(memPtr, 32), \" menor que cero\")\n\n    }\n\n    function abi_encode_t_stringliteral_e3deb8891861fc33e56f6ca4e0f0b1ebf88cbcc690d2390f61fcb463e2c54c75_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_e3deb8891861fc33e56f6ca4e0f0b1ebf88cbcc690d2390f61fcb463e2c54c75(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e3deb8891861fc33e56f6ca4e0f0b1ebf88cbcc690d2390f61fcb463e2c54c75__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e3deb8891861fc33e56f6ca4e0f0b1ebf88cbcc690d2390f61fcb463e2c54c75_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c060405234801561000f575f5ffd5b50604051611d1e380380611d1e83398181016040528101906100319190610279565b83838160039081610042919061051c565b508060049081610052919061051c565b5050505f8211610097576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161008e9061066b565b60405180910390fd5b5f81116100d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100d0906106f9565b60405180910390fd5b81608081815250508060a081815250505f60058190555050505050610717565b5f604051905090565b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61015882610112565b810181811067ffffffffffffffff8211171561017757610176610122565b5b80604052505050565b5f6101896100f9565b9050610195828261014f565b919050565b5f67ffffffffffffffff8211156101b4576101b3610122565b5b6101bd82610112565b9050602081019050919050565b8281835e5f83830152505050565b5f6101ea6101e58461019a565b610180565b9050828152602081018484840111156102065761020561010e565b5b6102118482856101ca565b509392505050565b5f82601f83011261022d5761022c61010a565b5b815161023d8482602086016101d8565b91505092915050565b5f819050919050565b61025881610246565b8114610262575f5ffd5b50565b5f815190506102738161024f565b92915050565b5f5f5f5f6080858703121561029157610290610102565b5b5f85015167ffffffffffffffff8111156102ae576102ad610106565b5b6102ba87828801610219565b945050602085015167ffffffffffffffff8111156102db576102da610106565b5b6102e787828801610219565b93505060406102f887828801610265565b925050606061030987828801610265565b91505092959194509250565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061036357607f821691505b6020821081036103765761037561031f565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026103d87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261039d565b6103e2868361039d565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61041d61041861041384610246565b6103fa565b610246565b9050919050565b5f819050919050565b61043683610403565b61044a61044282610424565b8484546103a9565b825550505050565b5f5f905090565b610461610452565b61046c81848461042d565b505050565b5b8181101561048f576104845f82610459565b600181019050610472565b5050565b601f8211156104d4576104a58161037c565b6104ae8461038e565b810160208510156104bd578190505b6104d16104c98561038e565b830182610471565b50505b505050565b5f82821c905092915050565b5f6104f45f19846008026104d9565b1980831691505092915050565b5f61050c83836104e5565b9150826002028217905092915050565b61052582610315565b67ffffffffffffffff81111561053e5761053d610122565b5b610548825461034c565b610553828285610493565b5f60209050601f831160018114610584575f8415610572578287015190505b61057c8582610501565b8655506105e3565b601f1984166105928661037c565b5f5b828110156105b957848901518255600182019150602085019450602081019050610594565b868310156105d657848901516105d2601f8916826104e5565b8355505b6001600288020188555050505b505050505050565b5f82825260208201905092915050565b7f456c2070726563696f206e6f20707565646520736572206d656e6f72207175655f8201527f206365726f000000000000000000000000000000000000000000000000000000602082015250565b5f6106556025836105eb565b9150610660826105fb565b604082019050919050565b5f6020820190508181035f83015261068281610649565b9050919050565b7f456c206d6178696d6f20646520746f6b656e73206e6f207075656465207365725f8201527f206d656e6f7220717565206365726f0000000000000000000000000000000000602082015250565b5f6106e3602f836105eb565b91506106ee82610689565b604082019050919050565b5f6020820190508181035f830152610710816106d7565b9050919050565b60805160a0516115d161074d5f395f81816105510152818161060f015261094a01525f81816105e8015261067a01526115d15ff3fe608060405234801561000f575f5ffd5b5060043610610109575f3560e01c806370a08231116100a05780639dc29fac1161006f5780639dc29fac146102a9578063a9059cbb146102c5578063b2bdfa7b146102f5578063dd62ed3e14610313578063e83157421461034357610109565b806370a082311461021f5780637ff9b5961461024f5780638d75fe051461026d57806395d89b411461028b57610109565b8063313ce567116100dc578063313ce567146101a957806340c10f19146101c75780634b94f50e146101e35780636abcded11461020157610109565b806306fdde031461010d578063095ea7b31461012b57806318160ddd1461015b57806323b872dd14610179575b5f5ffd5b610115610361565b604051610122919061105e565b60405180910390f35b6101456004803603810190610140919061110f565b6103f1565b6040516101529190611167565b60405180910390f35b610163610413565b604051610170919061118f565b60405180910390f35b610193600480360381019061018e91906111a8565b61041c565b6040516101a09190611167565b60405180910390f35b6101b161044a565b6040516101be9190611213565b60405180910390f35b6101e160048036038101906101dc919061110f565b610452565b005b6101eb6105e5565b6040516101f8919061118f565b60405180910390f35b61020961060c565b604051610216919061118f565b60405180910390f35b6102396004803603810190610234919061122c565b610633565b604051610246919061118f565b60405180910390f35b610257610678565b604051610264919061118f565b60405180910390f35b61027561069c565b604051610282919061118f565b60405180910390f35b6102936106a2565b6040516102a0919061105e565b60405180910390f35b6102c360048036038101906102be919061110f565b610732565b005b6102df60048036038101906102da919061110f565b61087f565b6040516102ec9190611167565b60405180910390f35b6102fd6108a1565b60405161030a9190611266565b60405180910390f35b61032d6004803603810190610328919061127f565b6108c6565b60405161033a919061118f565b60405180910390f35b61034b610948565b604051610358919061118f565b60405180910390f35b606060038054610370906112ea565b80601f016020809104026020016040519081016040528092919081815260200182805461039c906112ea565b80156103e75780601f106103be576101008083540402835291602001916103e7565b820191905f5260205f20905b8154815290600101906020018083116103ca57829003601f168201915b5050505050905090565b5f5f6103fb61096c565b9050610408818585610973565b600191505092915050565b5f600254905090565b5f5f61042661096c565b9050610433858285610985565b61043e858585610a18565b60019150509392505050565b5f6012905090565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d890611364565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361054f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610546906113f2565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000008160055461057e919061143d565b11156105bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b6906114ba565b60405180910390fd5b8060055f8282546105d0919061143d565b925050819055506105e18282610b08565b5050565b5f7f0000000000000000000000000000000000000000000000000000000000000000905090565b5f7f0000000000000000000000000000000000000000000000000000000000000000905090565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60055481565b6060600480546106b1906112ea565b80601f01602080910402602001604051908101604052809291908181526020018280546106dd906112ea565b80156107285780601f106106ff57610100808354040283529160200191610728565b820191905f5260205f20905b81548152906001019060200180831161070b57829003601f168201915b5050505050905090565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b890611364565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361082f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610826906113f2565b60405180910390fd5b5f8111610871576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086890611548565b60405180910390fd5b61087b8282610b87565b5050565b5f5f61088961096c565b9050610896818585610a18565b600191505092915050565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f33905090565b6109808383836001610c06565b505050565b5f61099084846108c6565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610a125781811015610a03578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016109fa93929190611566565b60405180910390fd5b610a1184848484035f610c06565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a88575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610a7f9190611266565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610af8575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610aef9190611266565b60405180910390fd5b610b03838383610dd5565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b78575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610b6f9190611266565b60405180910390fd5b610b835f8383610dd5565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610bf7575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610bee9190611266565b60405180910390fd5b610c02825f83610dd5565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610c76575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610c6d9190611266565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ce6575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610cdd9190611266565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610dcf578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610dc6919061118f565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e25578060025f828254610e19919061143d565b92505081905550610ef3565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610eae578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610ea593929190611566565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f3a578060025f8282540392505081905550610f84565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610fe1919061118f565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61103082610fee565b61103a8185610ff8565b935061104a818560208601611008565b61105381611016565b840191505092915050565b5f6020820190508181035f8301526110768184611026565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6110ab82611082565b9050919050565b6110bb816110a1565b81146110c5575f5ffd5b50565b5f813590506110d6816110b2565b92915050565b5f819050919050565b6110ee816110dc565b81146110f8575f5ffd5b50565b5f81359050611109816110e5565b92915050565b5f5f604083850312156111255761112461107e565b5b5f611132858286016110c8565b9250506020611143858286016110fb565b9150509250929050565b5f8115159050919050565b6111618161114d565b82525050565b5f60208201905061117a5f830184611158565b92915050565b611189816110dc565b82525050565b5f6020820190506111a25f830184611180565b92915050565b5f5f5f606084860312156111bf576111be61107e565b5b5f6111cc868287016110c8565b93505060206111dd868287016110c8565b92505060406111ee868287016110fb565b9150509250925092565b5f60ff82169050919050565b61120d816111f8565b82525050565b5f6020820190506112265f830184611204565b92915050565b5f602082840312156112415761124061107e565b5b5f61124e848285016110c8565b91505092915050565b611260816110a1565b82525050565b5f6020820190506112795f830184611257565b92915050565b5f5f604083850312156112955761129461107e565b5b5f6112a2858286016110c8565b92505060206112b3858286016110c8565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061130157607f821691505b602082108103611314576113136112bd565b5b50919050565b7f536f6c6f207075656465206c6c616d617220656c206f776e65720000000000005f82015250565b5f61134e601a83610ff8565b91506113598261131a565b602082019050919050565b5f6020820190508181035f83015261137b81611342565b9050919050565b7f4c6120646972656363696f6e2064657374696e6f206e6f2065732076616c69645f8201527f6100000000000000000000000000000000000000000000000000000000000000602082015250565b5f6113dc602183610ff8565b91506113e782611382565b604082019050919050565b5f6020820190508181035f830152611409816113d0565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611447826110dc565b9150611452836110dc565b925082820190508082111561146a57611469611410565b5b92915050565b7f4e6f2073652070756564656e20656d69746972206d617320746f6b656e7321005f82015250565b5f6114a4601f83610ff8565b91506114af82611470565b602082019050919050565b5f6020820190508181035f8301526114d181611498565b9050919050565b7f4e6f20736520707565646520656c696d696e61722030206e6920756e206e756d5f8201527f65726f206e6567617469766f20646520746f6b656e732e000000000000000000602082015250565b5f611532603783610ff8565b915061153d826114d8565b604082019050919050565b5f6020820190508181035f83015261155f81611526565b9050919050565b5f6060820190506115795f830186611257565b6115866020830185611180565b6115936040830184611180565b94935050505056fea26469706673582212205ab7ef6e7f051f8d188607657d134dbad202205c2cb5432cf75ae3b44d51ef6264736f6c634300081d0033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1D1E CODESIZE SUB DUP1 PUSH2 0x1D1E DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x279 JUMP JUMPDEST DUP4 DUP4 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0x51C JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x52 SWAP2 SWAP1 PUSH2 0x51C JUMP JUMPDEST POP POP POP PUSH0 DUP3 GT PUSH2 0x97 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E SWAP1 PUSH2 0x66B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0xD9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD0 SWAP1 PUSH2 0x6F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x80 DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP PUSH0 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP POP POP POP PUSH2 0x717 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x158 DUP3 PUSH2 0x112 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x177 JUMPI PUSH2 0x176 PUSH2 0x122 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x189 PUSH2 0xF9 JUMP JUMPDEST SWAP1 POP PUSH2 0x195 DUP3 DUP3 PUSH2 0x14F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1B4 JUMPI PUSH2 0x1B3 PUSH2 0x122 JUMP JUMPDEST JUMPDEST PUSH2 0x1BD DUP3 PUSH2 0x112 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1EA PUSH2 0x1E5 DUP5 PUSH2 0x19A JUMP JUMPDEST PUSH2 0x180 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x206 JUMPI PUSH2 0x205 PUSH2 0x10E JUMP JUMPDEST JUMPDEST PUSH2 0x211 DUP5 DUP3 DUP6 PUSH2 0x1CA JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x22D JUMPI PUSH2 0x22C PUSH2 0x10A JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x23D DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1D8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x258 DUP2 PUSH2 0x246 JUMP JUMPDEST DUP2 EQ PUSH2 0x262 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x273 DUP2 PUSH2 0x24F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x291 JUMPI PUSH2 0x290 PUSH2 0x102 JUMP JUMPDEST JUMPDEST PUSH0 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2AE JUMPI PUSH2 0x2AD PUSH2 0x106 JUMP JUMPDEST JUMPDEST PUSH2 0x2BA DUP8 DUP3 DUP9 ADD PUSH2 0x219 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2DB JUMPI PUSH2 0x2DA PUSH2 0x106 JUMP JUMPDEST JUMPDEST PUSH2 0x2E7 DUP8 DUP3 DUP9 ADD PUSH2 0x219 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2F8 DUP8 DUP3 DUP9 ADD PUSH2 0x265 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x309 DUP8 DUP3 DUP9 ADD PUSH2 0x265 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x363 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x376 JUMPI PUSH2 0x375 PUSH2 0x31F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x3D8 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x39D JUMP JUMPDEST PUSH2 0x3E2 DUP7 DUP4 PUSH2 0x39D JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x41D PUSH2 0x418 PUSH2 0x413 DUP5 PUSH2 0x246 JUMP JUMPDEST PUSH2 0x3FA JUMP JUMPDEST PUSH2 0x246 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x436 DUP4 PUSH2 0x403 JUMP JUMPDEST PUSH2 0x44A PUSH2 0x442 DUP3 PUSH2 0x424 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x3A9 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x461 PUSH2 0x452 JUMP JUMPDEST PUSH2 0x46C DUP2 DUP5 DUP5 PUSH2 0x42D JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x48F JUMPI PUSH2 0x484 PUSH0 DUP3 PUSH2 0x459 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x472 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x4D4 JUMPI PUSH2 0x4A5 DUP2 PUSH2 0x37C JUMP JUMPDEST PUSH2 0x4AE DUP5 PUSH2 0x38E JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x4BD JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x4D1 PUSH2 0x4C9 DUP6 PUSH2 0x38E JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x471 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4F4 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x4D9 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x50C DUP4 DUP4 PUSH2 0x4E5 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x525 DUP3 PUSH2 0x315 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x53E JUMPI PUSH2 0x53D PUSH2 0x122 JUMP JUMPDEST JUMPDEST PUSH2 0x548 DUP3 SLOAD PUSH2 0x34C JUMP JUMPDEST PUSH2 0x553 DUP3 DUP3 DUP6 PUSH2 0x493 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x584 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x572 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x57C DUP6 DUP3 PUSH2 0x501 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x5E3 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x592 DUP7 PUSH2 0x37C JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x5B9 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x594 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x5D6 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x5D2 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x4E5 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x456C2070726563696F206E6F20707565646520736572206D656E6F7220717565 PUSH0 DUP3 ADD MSTORE PUSH32 0x206365726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x655 PUSH1 0x25 DUP4 PUSH2 0x5EB JUMP JUMPDEST SWAP2 POP PUSH2 0x660 DUP3 PUSH2 0x5FB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x682 DUP2 PUSH2 0x649 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x456C206D6178696D6F20646520746F6B656E73206E6F20707565646520736572 PUSH0 DUP3 ADD MSTORE PUSH32 0x206D656E6F7220717565206365726F0000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x6E3 PUSH1 0x2F DUP4 PUSH2 0x5EB JUMP JUMPDEST SWAP2 POP PUSH2 0x6EE DUP3 PUSH2 0x689 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x710 DUP2 PUSH2 0x6D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x15D1 PUSH2 0x74D PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x551 ADD MSTORE DUP2 DUP2 PUSH2 0x60F ADD MSTORE PUSH2 0x94A ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x5E8 ADD MSTORE PUSH2 0x67A ADD MSTORE PUSH2 0x15D1 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0x9DC29FAC GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x2A9 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0xB2BDFA7B EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0xE8315742 EQ PUSH2 0x343 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x7FF9B596 EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0x8D75FE05 EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x28B JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x4B94F50E EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x6ABCDED1 EQ PUSH2 0x201 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x179 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x115 PUSH2 0x361 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x105E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x145 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x140 SWAP2 SWAP1 PUSH2 0x110F JUMP JUMPDEST PUSH2 0x3F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x1167 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x163 PUSH2 0x413 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x118F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x11A8 JUMP JUMPDEST PUSH2 0x41C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x1167 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B1 PUSH2 0x44A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x1213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0x110F JUMP JUMPDEST PUSH2 0x452 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EB PUSH2 0x5E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F8 SWAP2 SWAP1 PUSH2 0x118F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x209 PUSH2 0x60C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x118F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x239 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x122C JUMP JUMPDEST PUSH2 0x633 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x246 SWAP2 SWAP1 PUSH2 0x118F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x257 PUSH2 0x678 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x264 SWAP2 SWAP1 PUSH2 0x118F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x275 PUSH2 0x69C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x282 SWAP2 SWAP1 PUSH2 0x118F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x293 PUSH2 0x6A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A0 SWAP2 SWAP1 PUSH2 0x105E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BE SWAP2 SWAP1 PUSH2 0x110F JUMP JUMPDEST PUSH2 0x732 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x110F JUMP JUMPDEST PUSH2 0x87F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0x1167 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FD PUSH2 0x8A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30A SWAP2 SWAP1 PUSH2 0x1266 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x127F JUMP JUMPDEST PUSH2 0x8C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x118F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34B PUSH2 0x948 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x358 SWAP2 SWAP1 PUSH2 0x118F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x370 SWAP1 PUSH2 0x12EA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x39C SWAP1 PUSH2 0x12EA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3E7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3BE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3E7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3CA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x3FB PUSH2 0x96C JUMP JUMPDEST SWAP1 POP PUSH2 0x408 DUP2 DUP6 DUP6 PUSH2 0x973 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x426 PUSH2 0x96C JUMP JUMPDEST SWAP1 POP PUSH2 0x433 DUP6 DUP3 DUP6 PUSH2 0x985 JUMP JUMPDEST PUSH2 0x43E DUP6 DUP6 DUP6 PUSH2 0xA18 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4E1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D8 SWAP1 PUSH2 0x1364 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x54F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x546 SWAP1 PUSH2 0x13F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 DUP2 PUSH1 0x5 SLOAD PUSH2 0x57E SWAP2 SWAP1 PUSH2 0x143D JUMP JUMPDEST GT ISZERO PUSH2 0x5BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B6 SWAP1 PUSH2 0x14BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x5D0 SWAP2 SWAP1 PUSH2 0x143D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x5E1 DUP3 DUP3 PUSH2 0xB08 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x6B1 SWAP1 PUSH2 0x12EA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6DD SWAP1 PUSH2 0x12EA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x728 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6FF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x728 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x70B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B8 SWAP1 PUSH2 0x1364 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x82F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x826 SWAP1 PUSH2 0x13F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0x871 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x868 SWAP1 PUSH2 0x1548 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x87B DUP3 DUP3 PUSH2 0xB87 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x889 PUSH2 0x96C JUMP JUMPDEST SWAP1 POP PUSH2 0x896 DUP2 DUP6 DUP6 PUSH2 0xA18 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x980 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xC06 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x990 DUP5 DUP5 PUSH2 0x8C6 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xA12 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xA03 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9FA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1566 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA11 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xC06 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA88 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA7F SWAP2 SWAP1 PUSH2 0x1266 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAF8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAEF SWAP2 SWAP1 PUSH2 0x1266 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB03 DUP4 DUP4 DUP4 PUSH2 0xDD5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB78 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB6F SWAP2 SWAP1 PUSH2 0x1266 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB83 PUSH0 DUP4 DUP4 PUSH2 0xDD5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBF7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEE SWAP2 SWAP1 PUSH2 0x1266 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC02 DUP3 PUSH0 DUP4 PUSH2 0xDD5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC76 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC6D SWAP2 SWAP1 PUSH2 0x1266 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCE6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCDD SWAP2 SWAP1 PUSH2 0x1266 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xDCF JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xDC6 SWAP2 SWAP1 PUSH2 0x118F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE25 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE19 SWAP2 SWAP1 PUSH2 0x143D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xEF3 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xEAE JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEA5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1566 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF3A JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xF84 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xFE1 SWAP2 SWAP1 PUSH2 0x118F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1030 DUP3 PUSH2 0xFEE JUMP JUMPDEST PUSH2 0x103A DUP2 DUP6 PUSH2 0xFF8 JUMP JUMPDEST SWAP4 POP PUSH2 0x104A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1008 JUMP JUMPDEST PUSH2 0x1053 DUP2 PUSH2 0x1016 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1076 DUP2 DUP5 PUSH2 0x1026 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x10AB DUP3 PUSH2 0x1082 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10BB DUP2 PUSH2 0x10A1 JUMP JUMPDEST DUP2 EQ PUSH2 0x10C5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10D6 DUP2 PUSH2 0x10B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10EE DUP2 PUSH2 0x10DC JUMP JUMPDEST DUP2 EQ PUSH2 0x10F8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1109 DUP2 PUSH2 0x10E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1125 JUMPI PUSH2 0x1124 PUSH2 0x107E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1132 DUP6 DUP3 DUP7 ADD PUSH2 0x10C8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1143 DUP6 DUP3 DUP7 ADD PUSH2 0x10FB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1161 DUP2 PUSH2 0x114D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x117A PUSH0 DUP4 ADD DUP5 PUSH2 0x1158 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1189 DUP2 PUSH2 0x10DC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11A2 PUSH0 DUP4 ADD DUP5 PUSH2 0x1180 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x11BF JUMPI PUSH2 0x11BE PUSH2 0x107E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11CC DUP7 DUP3 DUP8 ADD PUSH2 0x10C8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x11DD DUP7 DUP3 DUP8 ADD PUSH2 0x10C8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x11EE DUP7 DUP3 DUP8 ADD PUSH2 0x10FB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x120D DUP2 PUSH2 0x11F8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1226 PUSH0 DUP4 ADD DUP5 PUSH2 0x1204 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1241 JUMPI PUSH2 0x1240 PUSH2 0x107E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x124E DUP5 DUP3 DUP6 ADD PUSH2 0x10C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1260 DUP2 PUSH2 0x10A1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1279 PUSH0 DUP4 ADD DUP5 PUSH2 0x1257 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1295 JUMPI PUSH2 0x1294 PUSH2 0x107E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12A2 DUP6 DUP3 DUP7 ADD PUSH2 0x10C8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12B3 DUP6 DUP3 DUP7 ADD PUSH2 0x10C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1301 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1314 JUMPI PUSH2 0x1313 PUSH2 0x12BD JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x536F6C6F207075656465206C6C616D617220656C206F776E6572000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x134E PUSH1 0x1A DUP4 PUSH2 0xFF8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1359 DUP3 PUSH2 0x131A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x137B DUP2 PUSH2 0x1342 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4C6120646972656363696F6E2064657374696E6F206E6F2065732076616C6964 PUSH0 DUP3 ADD MSTORE PUSH32 0x6100000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x13DC PUSH1 0x21 DUP4 PUSH2 0xFF8 JUMP JUMPDEST SWAP2 POP PUSH2 0x13E7 DUP3 PUSH2 0x1382 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1409 DUP2 PUSH2 0x13D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1447 DUP3 PUSH2 0x10DC JUMP JUMPDEST SWAP2 POP PUSH2 0x1452 DUP4 PUSH2 0x10DC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x146A JUMPI PUSH2 0x1469 PUSH2 0x1410 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F2073652070756564656E20656D69746972206D617320746F6B656E732100 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14A4 PUSH1 0x1F DUP4 PUSH2 0xFF8 JUMP JUMPDEST SWAP2 POP PUSH2 0x14AF DUP3 PUSH2 0x1470 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14D1 DUP2 PUSH2 0x1498 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F20736520707565646520656C696D696E61722030206E6920756E206E756D PUSH0 DUP3 ADD MSTORE PUSH32 0x65726F206E6567617469766F20646520746F6B656E732E000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1532 PUSH1 0x37 DUP4 PUSH2 0xFF8 JUMP JUMPDEST SWAP2 POP PUSH2 0x153D DUP3 PUSH2 0x14D8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x155F DUP2 PUSH2 0x1526 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1579 PUSH0 DUP4 ADD DUP7 PUSH2 0x1257 JUMP JUMPDEST PUSH2 0x1586 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1180 JUMP JUMPDEST PUSH2 0x1593 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1180 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS 0xB7 0xEF PUSH15 0x7F051F8D188607657D134DBAD20220 TLOAD 0x2C 0xB5 NUMBER 0x2C 0xF7 GAS CALLF 0xB44D MLOAD 0xEF PUSH3 0x64736F PUSH13 0x634300081D0033000000000000 ",
							"sourceMap": "212:2189:0:-:0;;;581:369;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;681:4;686:6;1656:5:2;1648;:13;;;;;;:::i;:::-;;1681:7;1671;:17;;;;;;:::i;:::-;;1582:113;;725:1:0::1;712:11;:14;704:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;799:1;787:10;:13;779:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;874:11;863:22;;;;::::0;::::1;906:10;896:20;;;;::::0;::::1;941:1;928:12;:14;;;;581:369:::0;;;;212:2189;;7:75:6;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:139::-;1699:6;1694:3;1689;1683:23;1740:1;1731:6;1726:3;1722:16;1715:27;1610:139;;;:::o;1755:434::-;1844:5;1869:66;1885:49;1927:6;1885:49;:::i;:::-;1869:66;:::i;:::-;1860:75;;1958:6;1951:5;1944:21;1996:4;1989:5;1985:16;2034:3;2025:6;2020:3;2016:16;2013:25;2010:112;;;2041:79;;:::i;:::-;2010:112;2131:52;2176:6;2171:3;2166;2131:52;:::i;:::-;1850:339;1755:434;;;;;:::o;2209:355::-;2276:5;2325:3;2318:4;2310:6;2306:17;2302:27;2292:122;;2333:79;;:::i;:::-;2292:122;2443:6;2437:13;2468:90;2554:3;2546:6;2539:4;2531:6;2527:17;2468:90;:::i;:::-;2459:99;;2282:282;2209:355;;;;:::o;2570:77::-;2607:7;2636:5;2625:16;;2570:77;;;:::o;2653:122::-;2726:24;2744:5;2726:24;:::i;:::-;2719:5;2716:35;2706:63;;2765:1;2762;2755:12;2706:63;2653:122;:::o;2781:143::-;2838:5;2869:6;2863:13;2854:22;;2885:33;2912:5;2885:33;:::i;:::-;2781:143;;;;:::o;2930:1166::-;3047:6;3055;3063;3071;3120:3;3108:9;3099:7;3095:23;3091:33;3088:120;;;3127:79;;:::i;:::-;3088:120;3268:1;3257:9;3253:17;3247:24;3298:18;3290:6;3287:30;3284:117;;;3320:79;;:::i;:::-;3284:117;3425:74;3491:7;3482:6;3471:9;3467:22;3425:74;:::i;:::-;3415:84;;3218:291;3569:2;3558:9;3554:18;3548:25;3600:18;3592:6;3589:30;3586:117;;;3622:79;;:::i;:::-;3586:117;3727:74;3793:7;3784:6;3773:9;3769:22;3727:74;:::i;:::-;3717:84;;3519:292;3850:2;3876:64;3932:7;3923:6;3912:9;3908:22;3876:64;:::i;:::-;3866:74;;3821:129;3989:2;4015:64;4071:7;4062:6;4051:9;4047:22;4015:64;:::i;:::-;4005:74;;3960:129;2930:1166;;;;;;;:::o;4102:99::-;4154:6;4188:5;4182:12;4172:22;;4102:99;;;:::o;4207:180::-;4255:77;4252:1;4245:88;4352:4;4349:1;4342:15;4376:4;4373:1;4366:15;4393:320;4437:6;4474:1;4468:4;4464:12;4454:22;;4521:1;4515:4;4511:12;4542:18;4532:81;;4598:4;4590:6;4586:17;4576:27;;4532:81;4660:2;4652:6;4649:14;4629:18;4626:38;4623:84;;4679:18;;:::i;:::-;4623:84;4444:269;4393:320;;;:::o;4719:141::-;4768:4;4791:3;4783:11;;4814:3;4811:1;4804:14;4848:4;4845:1;4835:18;4827:26;;4719:141;;;:::o;4866:93::-;4903:6;4950:2;4945;4938:5;4934:14;4930:23;4920:33;;4866:93;;;:::o;4965:107::-;5009:8;5059:5;5053:4;5049:16;5028:37;;4965:107;;;;:::o;5078:393::-;5147:6;5197:1;5185:10;5181:18;5220:97;5250:66;5239:9;5220:97;:::i;:::-;5338:39;5368:8;5357:9;5338:39;:::i;:::-;5326:51;;5410:4;5406:9;5399:5;5395:21;5386:30;;5459:4;5449:8;5445:19;5438:5;5435:30;5425:40;;5154:317;;5078:393;;;;;:::o;5477:60::-;5505:3;5526:5;5519:12;;5477:60;;;:::o;5543:142::-;5593:9;5626:53;5644:34;5653:24;5671:5;5653:24;:::i;:::-;5644:34;:::i;:::-;5626:53;:::i;:::-;5613:66;;5543:142;;;:::o;5691:75::-;5734:3;5755:5;5748:12;;5691:75;;;:::o;5772:269::-;5882:39;5913:7;5882:39;:::i;:::-;5943:91;5992:41;6016:16;5992:41;:::i;:::-;5984:6;5977:4;5971:11;5943:91;:::i;:::-;5937:4;5930:105;5848:193;5772:269;;;:::o;6047:73::-;6092:3;6113:1;6106:8;;6047:73;:::o;6126:189::-;6203:32;;:::i;:::-;6244:65;6302:6;6294;6288:4;6244:65;:::i;:::-;6179:136;6126:189;;:::o;6321:186::-;6381:120;6398:3;6391:5;6388:14;6381:120;;;6452:39;6489:1;6482:5;6452:39;:::i;:::-;6425:1;6418:5;6414:13;6405:22;;6381:120;;;6321:186;;:::o;6513:543::-;6614:2;6609:3;6606:11;6603:446;;;6648:38;6680:5;6648:38;:::i;:::-;6732:29;6750:10;6732:29;:::i;:::-;6722:8;6718:44;6915:2;6903:10;6900:18;6897:49;;;6936:8;6921:23;;6897:49;6959:80;7015:22;7033:3;7015:22;:::i;:::-;7005:8;7001:37;6988:11;6959:80;:::i;:::-;6618:431;;6603:446;6513:543;;;:::o;7062:117::-;7116:8;7166:5;7160:4;7156:16;7135:37;;7062:117;;;;:::o;7185:169::-;7229:6;7262:51;7310:1;7306:6;7298:5;7295:1;7291:13;7262:51;:::i;:::-;7258:56;7343:4;7337;7333:15;7323:25;;7236:118;7185:169;;;;:::o;7359:295::-;7435:4;7581:29;7606:3;7600:4;7581:29;:::i;:::-;7573:37;;7643:3;7640:1;7636:11;7630:4;7627:21;7619:29;;7359:295;;;;:::o;7659:1395::-;7776:37;7809:3;7776:37;:::i;:::-;7878:18;7870:6;7867:30;7864:56;;;7900:18;;:::i;:::-;7864:56;7944:38;7976:4;7970:11;7944:38;:::i;:::-;8029:67;8089:6;8081;8075:4;8029:67;:::i;:::-;8123:1;8147:4;8134:17;;8179:2;8171:6;8168:14;8196:1;8191:618;;;;8853:1;8870:6;8867:77;;;8919:9;8914:3;8910:19;8904:26;8895:35;;8867:77;8970:67;9030:6;9023:5;8970:67;:::i;:::-;8964:4;8957:81;8826:222;8161:887;;8191:618;8243:4;8239:9;8231:6;8227:22;8277:37;8309:4;8277:37;:::i;:::-;8336:1;8350:208;8364:7;8361:1;8358:14;8350:208;;;8443:9;8438:3;8434:19;8428:26;8420:6;8413:42;8494:1;8486:6;8482:14;8472:24;;8541:2;8530:9;8526:18;8513:31;;8387:4;8384:1;8380:12;8375:17;;8350:208;;;8586:6;8577:7;8574:19;8571:179;;;8644:9;8639:3;8635:19;8629:26;8687:48;8729:4;8721:6;8717:17;8706:9;8687:48;:::i;:::-;8679:6;8672:64;8594:156;8571:179;8796:1;8792;8784:6;8780:14;8776:22;8770:4;8763:36;8198:611;;;8161:887;;7751:1303;;;7659:1395;;:::o;9060:169::-;9144:11;9178:6;9173:3;9166:19;9218:4;9213:3;9209:14;9194:29;;9060:169;;;;:::o;9235:224::-;9375:34;9371:1;9363:6;9359:14;9352:58;9444:7;9439:2;9431:6;9427:15;9420:32;9235:224;:::o;9465:366::-;9607:3;9628:67;9692:2;9687:3;9628:67;:::i;:::-;9621:74;;9704:93;9793:3;9704:93;:::i;:::-;9822:2;9817:3;9813:12;9806:19;;9465:366;;;:::o;9837:419::-;10003:4;10041:2;10030:9;10026:18;10018:26;;10090:9;10084:4;10080:20;10076:1;10065:9;10061:17;10054:47;10118:131;10244:4;10118:131;:::i;:::-;10110:139;;9837:419;;;:::o;10262:234::-;10402:34;10398:1;10390:6;10386:14;10379:58;10471:17;10466:2;10458:6;10454:15;10447:42;10262:234;:::o;10502:366::-;10644:3;10665:67;10729:2;10724:3;10665:67;:::i;:::-;10658:74;;10741:93;10830:3;10741:93;:::i;:::-;10859:2;10854:3;10850:12;10843:19;;10502:366;;;:::o;10874:419::-;11040:4;11078:2;11067:9;11063:18;11055:26;;11127:9;11121:4;11117:20;11113:1;11102:9;11098:17;11091:47;11155:131;11281:4;11155:131;:::i;:::-;11147:139;;10874:419;;;:::o;212:2189:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_696": {
									"entryPoint": 2419,
									"id": 696,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_756": {
									"entryPoint": 3078,
									"id": 756,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_678": {
									"entryPoint": 2951,
									"id": 678,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_645": {
									"entryPoint": 2824,
									"id": 645,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_921": {
									"entryPoint": 2412,
									"id": 921,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_owner_12": {
									"entryPoint": 2209,
									"id": 12,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_spendAllowance_804": {
									"entryPoint": 2437,
									"id": 804,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_535": {
									"entryPoint": 2584,
									"id": 535,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_612": {
									"entryPoint": 3541,
									"id": 612,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_432": {
									"entryPoint": 2246,
									"id": 432,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_456": {
									"entryPoint": 1009,
									"id": 456,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_391": {
									"entryPoint": 1587,
									"id": 391,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_136": {
									"entryPoint": 1842,
									"id": 136,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@decimals_369": {
									"entryPoint": 1098,
									"id": 369,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getMaxTokens_152": {
									"entryPoint": 1548,
									"id": 152,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getTokenPrice_144": {
									"entryPoint": 1509,
									"id": 144,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@maxTokens_8": {
									"entryPoint": 2376,
									"id": 8,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mint_104": {
									"entryPoint": 1106,
									"id": 104,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@mintedTokens_10": {
									"entryPoint": 1692,
									"id": 10,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_351": {
									"entryPoint": 865,
									"id": 351,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_360": {
									"entryPoint": 1698,
									"id": 360,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenPrice_6": {
									"entryPoint": 1656,
									"id": 6,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_378": {
									"entryPoint": 1043,
									"id": 378,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_488": {
									"entryPoint": 1052,
									"id": 488,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_415": {
									"entryPoint": 2175,
									"id": 415,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4296,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4347,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4652,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4735,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4520,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4367,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4695,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4440,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4134,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_336f12110b5c92494efba6968210650067826eac23d477ab2241ce7b6a14d97b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5272,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4ec76783f3894e67036af6919e25ed127fdc6f729f79865424eb8381f82d8d50_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4930,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_51de52eeb4deb82ff460c459daa1179bd1766e5f1ee051b554fcaf62cf6e33ea_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5414,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a741e67d6dc9c74b39a03cacfe829cad0f05f603ef935636f3247bb18530cc63_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5072,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4480,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 4612,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4710,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5478,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4455,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4190,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_336f12110b5c92494efba6968210650067826eac23d477ab2241ce7b6a14d97b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5306,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4ec76783f3894e67036af6919e25ed127fdc6f729f79865424eb8381f82d8d50__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4964,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_51de52eeb4deb82ff460c459daa1179bd1766e5f1ee051b554fcaf62cf6e33ea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5448,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a741e67d6dc9c74b39a03cacfe829cad0f05f603ef935636f3247bb18530cc63__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5106,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4495,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 4627,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4078,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4088,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5181,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4257,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4429,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4226,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4316,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4600,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4104,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4842,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5136,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 4797,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4222,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4118,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_336f12110b5c92494efba6968210650067826eac23d477ab2241ce7b6a14d97b": {
									"entryPoint": 5232,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4ec76783f3894e67036af6919e25ed127fdc6f729f79865424eb8381f82d8d50": {
									"entryPoint": 4890,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_51de52eeb4deb82ff460c459daa1179bd1766e5f1ee051b554fcaf62cf6e33ea": {
									"entryPoint": 5336,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a741e67d6dc9c74b39a03cacfe829cad0f05f603ef935636f3247bb18530cc63": {
									"entryPoint": 4994,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4274,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4325,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11284:6",
										"nodeType": "YulBlock",
										"src": "0:11284:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:6",
													"nodeType": "YulBlock",
													"src": "66:40:6",
													"statements": [
														{
															"nativeSrc": "77:22:6",
															"nodeType": "YulAssignment",
															"src": "77:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:6"
																},
																"nativeSrc": "87:12:6",
																"nodeType": "YulFunctionCall",
																"src": "87:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:6",
														"nodeType": "YulTypedName",
														"src": "49:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:6",
														"nodeType": "YulTypedName",
														"src": "59:6:6",
														"type": ""
													}
												],
												"src": "7:99:6"
											},
											{
												"body": {
													"nativeSrc": "208:73:6",
													"nodeType": "YulBlock",
													"src": "208:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:6"
																},
																"nativeSrc": "218:19:6",
																"nodeType": "YulFunctionCall",
																"src": "218:19:6"
															},
															"nativeSrc": "218:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:6"
														},
														{
															"nativeSrc": "246:29:6",
															"nodeType": "YulAssignment",
															"src": "246:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:6",
																		"nodeType": "YulLiteral",
																		"src": "270:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:6"
																},
																"nativeSrc": "261:14:6",
																"nodeType": "YulFunctionCall",
																"src": "261:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:6",
														"nodeType": "YulTypedName",
														"src": "180:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:6",
														"nodeType": "YulTypedName",
														"src": "185:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:6",
														"nodeType": "YulTypedName",
														"src": "196:11:6",
														"type": ""
													}
												],
												"src": "112:169:6"
											},
											{
												"body": {
													"nativeSrc": "349:77:6",
													"nodeType": "YulBlock",
													"src": "349:77:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:6"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:6"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:6"
																},
																"nativeSrc": "360:23:6",
																"nodeType": "YulFunctionCall",
																"src": "360:23:6"
															},
															"nativeSrc": "360:23:6",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:6"
																		},
																		"nativeSrc": "399:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:6",
																		"nodeType": "YulLiteral",
																		"src": "417:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:6"
																},
																"nativeSrc": "392:27:6",
																"nodeType": "YulFunctionCall",
																"src": "392:27:6"
															},
															"nativeSrc": "392:27:6",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:6",
														"nodeType": "YulTypedName",
														"src": "331:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:6",
														"nodeType": "YulTypedName",
														"src": "336:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:6",
														"nodeType": "YulTypedName",
														"src": "341:6:6",
														"type": ""
													}
												],
												"src": "287:139:6"
											},
											{
												"body": {
													"nativeSrc": "480:54:6",
													"nodeType": "YulBlock",
													"src": "480:54:6",
													"statements": [
														{
															"nativeSrc": "490:38:6",
															"nodeType": "YulAssignment",
															"src": "490:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:6",
																				"nodeType": "YulLiteral",
																				"src": "515:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:6"
																		},
																		"nativeSrc": "504:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:6",
																				"nodeType": "YulLiteral",
																				"src": "524:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:6"
																		},
																		"nativeSrc": "520:7:6",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:6"
																},
																"nativeSrc": "500:28:6",
																"nodeType": "YulFunctionCall",
																"src": "500:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:6",
														"nodeType": "YulTypedName",
														"src": "463:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:6",
														"nodeType": "YulTypedName",
														"src": "473:6:6",
														"type": ""
													}
												],
												"src": "432:102:6"
											},
											{
												"body": {
													"nativeSrc": "632:285:6",
													"nodeType": "YulBlock",
													"src": "632:285:6",
													"statements": [
														{
															"nativeSrc": "642:53:6",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:6",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:6"
																},
																"nativeSrc": "656:39:6",
																"nodeType": "YulFunctionCall",
																"src": "656:39:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:6",
																	"nodeType": "YulTypedName",
																	"src": "646:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:6",
															"nodeType": "YulAssignment",
															"src": "704:78:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:6"
																},
																"nativeSrc": "711:71:6",
																"nodeType": "YulFunctionCall",
																"src": "711:71:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:6",
																				"nodeType": "YulLiteral",
																				"src": "837:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:6"
																		},
																		"nativeSrc": "826:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:6",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:6"
																},
																"nativeSrc": "791:65:6",
																"nodeType": "YulFunctionCall",
																"src": "791:65:6"
															},
															"nativeSrc": "791:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:6"
														},
														{
															"nativeSrc": "865:46:6",
															"nodeType": "YulAssignment",
															"src": "865:46:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:6",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:6"
																		},
																		"nativeSrc": "881:29:6",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:6"
																},
																"nativeSrc": "872:39:6",
																"nodeType": "YulFunctionCall",
																"src": "872:39:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:6",
														"nodeType": "YulTypedName",
														"src": "613:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:6",
														"nodeType": "YulTypedName",
														"src": "620:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:6",
														"nodeType": "YulTypedName",
														"src": "628:3:6",
														"type": ""
													}
												],
												"src": "540:377:6"
											},
											{
												"body": {
													"nativeSrc": "1041:195:6",
													"nodeType": "YulBlock",
													"src": "1041:195:6",
													"statements": [
														{
															"nativeSrc": "1051:26:6",
															"nodeType": "YulAssignment",
															"src": "1051:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:6"
																},
																"nativeSrc": "1059:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:6"
																		},
																		"nativeSrc": "1094:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:6"
																		},
																		"nativeSrc": "1113:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:6"
																},
																"nativeSrc": "1087:47:6",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:6"
															},
															"nativeSrc": "1087:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:6"
														},
														{
															"nativeSrc": "1143:86:6",
															"nodeType": "YulAssignment",
															"src": "1143:86:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:6"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:6",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:6"
																},
																"nativeSrc": "1151:78:6",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:6",
														"nodeType": "YulTypedName",
														"src": "1013:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:6",
														"nodeType": "YulTypedName",
														"src": "1025:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:6",
														"nodeType": "YulTypedName",
														"src": "1036:4:6",
														"type": ""
													}
												],
												"src": "923:313:6"
											},
											{
												"body": {
													"nativeSrc": "1282:35:6",
													"nodeType": "YulBlock",
													"src": "1282:35:6",
													"statements": [
														{
															"nativeSrc": "1292:19:6",
															"nodeType": "YulAssignment",
															"src": "1292:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:6"
																},
																"nativeSrc": "1302:9:6",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:6",
														"nodeType": "YulTypedName",
														"src": "1275:6:6",
														"type": ""
													}
												],
												"src": "1242:75:6"
											},
											{
												"body": {
													"nativeSrc": "1412:28:6",
													"nodeType": "YulBlock",
													"src": "1412:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:6"
																},
																"nativeSrc": "1422:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:6"
															},
															"nativeSrc": "1422:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:6"
											},
											{
												"body": {
													"nativeSrc": "1535:28:6",
													"nodeType": "YulBlock",
													"src": "1535:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:6"
																},
																"nativeSrc": "1545:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:6"
															},
															"nativeSrc": "1545:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:6"
											},
											{
												"body": {
													"nativeSrc": "1614:81:6",
													"nodeType": "YulBlock",
													"src": "1614:81:6",
													"statements": [
														{
															"nativeSrc": "1624:65:6",
															"nodeType": "YulAssignment",
															"src": "1624:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:6",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:6"
																},
																"nativeSrc": "1635:54:6",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:6",
														"nodeType": "YulTypedName",
														"src": "1596:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:6",
														"nodeType": "YulTypedName",
														"src": "1606:7:6",
														"type": ""
													}
												],
												"src": "1569:126:6"
											},
											{
												"body": {
													"nativeSrc": "1746:51:6",
													"nodeType": "YulBlock",
													"src": "1746:51:6",
													"statements": [
														{
															"nativeSrc": "1756:35:6",
															"nodeType": "YulAssignment",
															"src": "1756:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:6"
																},
																"nativeSrc": "1767:24:6",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:6",
														"nodeType": "YulTypedName",
														"src": "1728:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:6",
														"nodeType": "YulTypedName",
														"src": "1738:7:6",
														"type": ""
													}
												],
												"src": "1701:96:6"
											},
											{
												"body": {
													"nativeSrc": "1846:79:6",
													"nodeType": "YulBlock",
													"src": "1846:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:6",
																"nodeType": "YulBlock",
																"src": "1903:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:6"
																			},
																			"nativeSrc": "1905:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:6"
																		},
																		"nativeSrc": "1905:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:6"
																				},
																				"nativeSrc": "1876:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:6"
																		},
																		"nativeSrc": "1866:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:6"
																},
																"nativeSrc": "1859:43:6",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:6"
															},
															"nativeSrc": "1856:63:6",
															"nodeType": "YulIf",
															"src": "1856:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:6",
														"nodeType": "YulTypedName",
														"src": "1839:5:6",
														"type": ""
													}
												],
												"src": "1803:122:6"
											},
											{
												"body": {
													"nativeSrc": "1983:87:6",
													"nodeType": "YulBlock",
													"src": "1983:87:6",
													"statements": [
														{
															"nativeSrc": "1993:29:6",
															"nodeType": "YulAssignment",
															"src": "1993:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:6"
																},
																"nativeSrc": "2002:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:6"
																},
																"nativeSrc": "2031:33:6",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:6"
															},
															"nativeSrc": "2031:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:6",
														"nodeType": "YulTypedName",
														"src": "1961:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:6",
														"nodeType": "YulTypedName",
														"src": "1969:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:6",
														"nodeType": "YulTypedName",
														"src": "1977:5:6",
														"type": ""
													}
												],
												"src": "1931:139:6"
											},
											{
												"body": {
													"nativeSrc": "2121:32:6",
													"nodeType": "YulBlock",
													"src": "2121:32:6",
													"statements": [
														{
															"nativeSrc": "2131:16:6",
															"nodeType": "YulAssignment",
															"src": "2131:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:6",
																"nodeType": "YulIdentifier",
																"src": "2142:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:6",
														"nodeType": "YulTypedName",
														"src": "2103:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:6",
														"nodeType": "YulTypedName",
														"src": "2113:7:6",
														"type": ""
													}
												],
												"src": "2076:77:6"
											},
											{
												"body": {
													"nativeSrc": "2202:79:6",
													"nodeType": "YulBlock",
													"src": "2202:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:6",
																"nodeType": "YulBlock",
																"src": "2259:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:6"
																			},
																			"nativeSrc": "2261:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:6"
																		},
																		"nativeSrc": "2261:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:6"
																				},
																				"nativeSrc": "2232:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:6"
																		},
																		"nativeSrc": "2222:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:6"
																},
																"nativeSrc": "2215:43:6",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:6"
															},
															"nativeSrc": "2212:63:6",
															"nodeType": "YulIf",
															"src": "2212:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:6",
														"nodeType": "YulTypedName",
														"src": "2195:5:6",
														"type": ""
													}
												],
												"src": "2159:122:6"
											},
											{
												"body": {
													"nativeSrc": "2339:87:6",
													"nodeType": "YulBlock",
													"src": "2339:87:6",
													"statements": [
														{
															"nativeSrc": "2349:29:6",
															"nodeType": "YulAssignment",
															"src": "2349:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:6"
																},
																"nativeSrc": "2358:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:6"
																},
																"nativeSrc": "2387:33:6",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:6"
															},
															"nativeSrc": "2387:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:6",
														"nodeType": "YulTypedName",
														"src": "2317:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:6",
														"nodeType": "YulTypedName",
														"src": "2325:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:6",
														"nodeType": "YulTypedName",
														"src": "2333:5:6",
														"type": ""
													}
												],
												"src": "2287:139:6"
											},
											{
												"body": {
													"nativeSrc": "2515:391:6",
													"nodeType": "YulBlock",
													"src": "2515:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:6",
																"nodeType": "YulBlock",
																"src": "2561:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:6"
																			},
																			"nativeSrc": "2563:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:6"
																		},
																		"nativeSrc": "2563:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:6"
																		},
																		"nativeSrc": "2532:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:6"
																},
																"nativeSrc": "2528:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:6"
															},
															"nativeSrc": "2525:119:6",
															"nodeType": "YulIf",
															"src": "2525:119:6"
														},
														{
															"nativeSrc": "2654:117:6",
															"nodeType": "YulBlock",
															"src": "2654:117:6",
															"statements": [
																{
																	"nativeSrc": "2669:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:6"
																				},
																				"nativeSrc": "2729:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:6"
																		},
																		"nativeSrc": "2708:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:6",
															"nodeType": "YulBlock",
															"src": "2781:118:6",
															"statements": [
																{
																	"nativeSrc": "2796:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:6"
																				},
																				"nativeSrc": "2857:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:6"
																		},
																		"nativeSrc": "2836:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:6",
														"nodeType": "YulTypedName",
														"src": "2477:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:6",
														"nodeType": "YulTypedName",
														"src": "2488:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:6",
														"nodeType": "YulTypedName",
														"src": "2500:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:6",
														"nodeType": "YulTypedName",
														"src": "2508:6:6",
														"type": ""
													}
												],
												"src": "2432:474:6"
											},
											{
												"body": {
													"nativeSrc": "2954:48:6",
													"nodeType": "YulBlock",
													"src": "2954:48:6",
													"statements": [
														{
															"nativeSrc": "2964:32:6",
															"nodeType": "YulAssignment",
															"src": "2964:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:6"
																		},
																		"nativeSrc": "2982:13:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:6"
																},
																"nativeSrc": "2975:21:6",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:6",
														"nodeType": "YulTypedName",
														"src": "2936:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:6",
														"nodeType": "YulTypedName",
														"src": "2946:7:6",
														"type": ""
													}
												],
												"src": "2912:90:6"
											},
											{
												"body": {
													"nativeSrc": "3067:50:6",
													"nodeType": "YulBlock",
													"src": "3067:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:6",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:6"
																		},
																		"nativeSrc": "3089:21:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:6"
																},
																"nativeSrc": "3077:34:6",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:6"
															},
															"nativeSrc": "3077:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:6"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:6",
														"nodeType": "YulTypedName",
														"src": "3055:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:6",
														"nodeType": "YulTypedName",
														"src": "3062:3:6",
														"type": ""
													}
												],
												"src": "3008:109:6"
											},
											{
												"body": {
													"nativeSrc": "3215:118:6",
													"nodeType": "YulBlock",
													"src": "3215:118:6",
													"statements": [
														{
															"nativeSrc": "3225:26:6",
															"nodeType": "YulAssignment",
															"src": "3225:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:6"
																},
																"nativeSrc": "3233:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:6"
																		},
																		"nativeSrc": "3308:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:6",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:6"
																},
																"nativeSrc": "3261:65:6",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:6"
															},
															"nativeSrc": "3261:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:6",
														"nodeType": "YulTypedName",
														"src": "3187:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:6",
														"nodeType": "YulTypedName",
														"src": "3199:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:6",
														"nodeType": "YulTypedName",
														"src": "3210:4:6",
														"type": ""
													}
												],
												"src": "3123:210:6"
											},
											{
												"body": {
													"nativeSrc": "3404:53:6",
													"nodeType": "YulBlock",
													"src": "3404:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:6"
																		},
																		"nativeSrc": "3426:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:6"
																},
																"nativeSrc": "3414:37:6",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:6"
															},
															"nativeSrc": "3414:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:6",
														"nodeType": "YulTypedName",
														"src": "3392:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:6",
														"nodeType": "YulTypedName",
														"src": "3399:3:6",
														"type": ""
													}
												],
												"src": "3339:118:6"
											},
											{
												"body": {
													"nativeSrc": "3561:124:6",
													"nodeType": "YulBlock",
													"src": "3561:124:6",
													"statements": [
														{
															"nativeSrc": "3571:26:6",
															"nodeType": "YulAssignment",
															"src": "3571:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:6"
																},
																"nativeSrc": "3579:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:6"
																		},
																		"nativeSrc": "3660:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:6"
																},
																"nativeSrc": "3607:71:6",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:6"
															},
															"nativeSrc": "3607:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:6",
														"nodeType": "YulTypedName",
														"src": "3533:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:6",
														"nodeType": "YulTypedName",
														"src": "3545:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:6",
														"nodeType": "YulTypedName",
														"src": "3556:4:6",
														"type": ""
													}
												],
												"src": "3463:222:6"
											},
											{
												"body": {
													"nativeSrc": "3791:519:6",
													"nodeType": "YulBlock",
													"src": "3791:519:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:6",
																"nodeType": "YulBlock",
																"src": "3837:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:6"
																			},
																			"nativeSrc": "3839:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:6"
																		},
																		"nativeSrc": "3839:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:6"
																		},
																		"nativeSrc": "3808:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:6"
																},
																"nativeSrc": "3804:32:6",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:6"
															},
															"nativeSrc": "3801:119:6",
															"nodeType": "YulIf",
															"src": "3801:119:6"
														},
														{
															"nativeSrc": "3930:117:6",
															"nodeType": "YulBlock",
															"src": "3930:117:6",
															"statements": [
																{
																	"nativeSrc": "3945:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:6",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:6"
																				},
																				"nativeSrc": "4005:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:6"
																		},
																		"nativeSrc": "3984:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:6",
															"nodeType": "YulBlock",
															"src": "4057:118:6",
															"statements": [
																{
																	"nativeSrc": "4072:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:6"
																				},
																				"nativeSrc": "4133:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:6"
																		},
																		"nativeSrc": "4112:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:6",
															"nodeType": "YulBlock",
															"src": "4185:118:6",
															"statements": [
																{
																	"nativeSrc": "4200:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:6"
																				},
																				"nativeSrc": "4261:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:6"
																		},
																		"nativeSrc": "4240:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:6",
														"nodeType": "YulTypedName",
														"src": "3745:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:6",
														"nodeType": "YulTypedName",
														"src": "3756:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:6",
														"nodeType": "YulTypedName",
														"src": "3768:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:6",
														"nodeType": "YulTypedName",
														"src": "3776:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:6",
														"nodeType": "YulTypedName",
														"src": "3784:6:6",
														"type": ""
													}
												],
												"src": "3691:619:6"
											},
											{
												"body": {
													"nativeSrc": "4359:43:6",
													"nodeType": "YulBlock",
													"src": "4359:43:6",
													"statements": [
														{
															"nativeSrc": "4369:27:6",
															"nodeType": "YulAssignment",
															"src": "4369:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4384:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4384:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4391:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4391:4:6",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4380:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4380:3:6"
																},
																"nativeSrc": "4380:16:6",
																"nodeType": "YulFunctionCall",
																"src": "4380:16:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4369:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "4369:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4316:86:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4341:5:6",
														"nodeType": "YulTypedName",
														"src": "4341:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4351:7:6",
														"nodeType": "YulTypedName",
														"src": "4351:7:6",
														"type": ""
													}
												],
												"src": "4316:86:6"
											},
											{
												"body": {
													"nativeSrc": "4469:51:6",
													"nodeType": "YulBlock",
													"src": "4469:51:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4486:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4486:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4507:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4507:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4491:15:6",
																			"nodeType": "YulIdentifier",
																			"src": "4491:15:6"
																		},
																		"nativeSrc": "4491:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4491:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4479:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:6"
																},
																"nativeSrc": "4479:35:6",
																"nodeType": "YulFunctionCall",
																"src": "4479:35:6"
															},
															"nativeSrc": "4479:35:6",
															"nodeType": "YulExpressionStatement",
															"src": "4479:35:6"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4408:112:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4457:5:6",
														"nodeType": "YulTypedName",
														"src": "4457:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4464:3:6",
														"nodeType": "YulTypedName",
														"src": "4464:3:6",
														"type": ""
													}
												],
												"src": "4408:112:6"
											},
											{
												"body": {
													"nativeSrc": "4620:120:6",
													"nodeType": "YulBlock",
													"src": "4620:120:6",
													"statements": [
														{
															"nativeSrc": "4630:26:6",
															"nodeType": "YulAssignment",
															"src": "4630:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4642:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4642:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4653:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4653:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4638:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4638:3:6"
																},
																"nativeSrc": "4638:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4638:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4630:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4630:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4706:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4706:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4719:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4719:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4730:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4730:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4715:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4715:3:6"
																		},
																		"nativeSrc": "4715:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4715:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4666:39:6",
																	"nodeType": "YulIdentifier",
																	"src": "4666:39:6"
																},
																"nativeSrc": "4666:67:6",
																"nodeType": "YulFunctionCall",
																"src": "4666:67:6"
															},
															"nativeSrc": "4666:67:6",
															"nodeType": "YulExpressionStatement",
															"src": "4666:67:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4526:214:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4592:9:6",
														"nodeType": "YulTypedName",
														"src": "4592:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4604:6:6",
														"nodeType": "YulTypedName",
														"src": "4604:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4615:4:6",
														"nodeType": "YulTypedName",
														"src": "4615:4:6",
														"type": ""
													}
												],
												"src": "4526:214:6"
											},
											{
												"body": {
													"nativeSrc": "4812:263:6",
													"nodeType": "YulBlock",
													"src": "4812:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4858:83:6",
																"nodeType": "YulBlock",
																"src": "4858:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4860:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "4860:77:6"
																			},
																			"nativeSrc": "4860:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4860:79:6"
																		},
																		"nativeSrc": "4860:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4860:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4833:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4833:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4842:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4842:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4829:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4829:3:6"
																		},
																		"nativeSrc": "4829:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4829:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4854:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4854:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4825:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4825:3:6"
																},
																"nativeSrc": "4825:32:6",
																"nodeType": "YulFunctionCall",
																"src": "4825:32:6"
															},
															"nativeSrc": "4822:119:6",
															"nodeType": "YulIf",
															"src": "4822:119:6"
														},
														{
															"nativeSrc": "4951:117:6",
															"nodeType": "YulBlock",
															"src": "4951:117:6",
															"statements": [
																{
																	"nativeSrc": "4966:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4966:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4980:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4980:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4970:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4970:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4995:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4995:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5030:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5030:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5041:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5041:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5026:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5026:3:6"
																				},
																				"nativeSrc": "5026:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5026:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5050:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5050:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5005:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "5005:20:6"
																		},
																		"nativeSrc": "5005:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4995:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4995:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4746:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4782:9:6",
														"nodeType": "YulTypedName",
														"src": "4782:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4793:7:6",
														"nodeType": "YulTypedName",
														"src": "4793:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4805:6:6",
														"nodeType": "YulTypedName",
														"src": "4805:6:6",
														"type": ""
													}
												],
												"src": "4746:329:6"
											},
											{
												"body": {
													"nativeSrc": "5146:53:6",
													"nodeType": "YulBlock",
													"src": "5146:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5163:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5163:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5186:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5186:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5168:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "5168:17:6"
																		},
																		"nativeSrc": "5168:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5168:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5156:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5156:6:6"
																},
																"nativeSrc": "5156:37:6",
																"nodeType": "YulFunctionCall",
																"src": "5156:37:6"
															},
															"nativeSrc": "5156:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "5156:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5081:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5134:5:6",
														"nodeType": "YulTypedName",
														"src": "5134:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5141:3:6",
														"nodeType": "YulTypedName",
														"src": "5141:3:6",
														"type": ""
													}
												],
												"src": "5081:118:6"
											},
											{
												"body": {
													"nativeSrc": "5303:124:6",
													"nodeType": "YulBlock",
													"src": "5303:124:6",
													"statements": [
														{
															"nativeSrc": "5313:26:6",
															"nodeType": "YulAssignment",
															"src": "5313:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5325:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5325:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5336:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5336:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5321:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5321:3:6"
																},
																"nativeSrc": "5321:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5321:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5313:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5313:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5393:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5393:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5406:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5406:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5417:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5417:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5402:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5402:3:6"
																		},
																		"nativeSrc": "5402:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5402:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5349:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "5349:43:6"
																},
																"nativeSrc": "5349:71:6",
																"nodeType": "YulFunctionCall",
																"src": "5349:71:6"
															},
															"nativeSrc": "5349:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "5349:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5205:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5275:9:6",
														"nodeType": "YulTypedName",
														"src": "5275:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5287:6:6",
														"nodeType": "YulTypedName",
														"src": "5287:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5298:4:6",
														"nodeType": "YulTypedName",
														"src": "5298:4:6",
														"type": ""
													}
												],
												"src": "5205:222:6"
											},
											{
												"body": {
													"nativeSrc": "5516:391:6",
													"nodeType": "YulBlock",
													"src": "5516:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "5562:83:6",
																"nodeType": "YulBlock",
																"src": "5562:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5564:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "5564:77:6"
																			},
																			"nativeSrc": "5564:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5564:79:6"
																		},
																		"nativeSrc": "5564:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5564:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5537:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5537:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5546:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5546:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5533:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5533:3:6"
																		},
																		"nativeSrc": "5533:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5533:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5558:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5558:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5529:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5529:3:6"
																},
																"nativeSrc": "5529:32:6",
																"nodeType": "YulFunctionCall",
																"src": "5529:32:6"
															},
															"nativeSrc": "5526:119:6",
															"nodeType": "YulIf",
															"src": "5526:119:6"
														},
														{
															"nativeSrc": "5655:117:6",
															"nodeType": "YulBlock",
															"src": "5655:117:6",
															"statements": [
																{
																	"nativeSrc": "5670:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5670:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5684:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5684:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5674:6:6",
																			"nodeType": "YulTypedName",
																			"src": "5674:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5699:63:6",
																	"nodeType": "YulAssignment",
																	"src": "5699:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5734:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5734:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5745:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5745:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5730:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5730:3:6"
																				},
																				"nativeSrc": "5730:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5730:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5754:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5754:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5709:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "5709:20:6"
																		},
																		"nativeSrc": "5709:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5709:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5699:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5699:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5782:118:6",
															"nodeType": "YulBlock",
															"src": "5782:118:6",
															"statements": [
																{
																	"nativeSrc": "5797:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5797:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5811:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5811:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5801:6:6",
																			"nodeType": "YulTypedName",
																			"src": "5801:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5827:63:6",
																	"nodeType": "YulAssignment",
																	"src": "5827:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5862:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5862:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5873:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5873:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5858:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5858:3:6"
																				},
																				"nativeSrc": "5858:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5858:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5882:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5882:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5837:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "5837:20:6"
																		},
																		"nativeSrc": "5837:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5837:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5827:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5827:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5433:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5478:9:6",
														"nodeType": "YulTypedName",
														"src": "5478:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5489:7:6",
														"nodeType": "YulTypedName",
														"src": "5489:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5501:6:6",
														"nodeType": "YulTypedName",
														"src": "5501:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5509:6:6",
														"nodeType": "YulTypedName",
														"src": "5509:6:6",
														"type": ""
													}
												],
												"src": "5433:474:6"
											},
											{
												"body": {
													"nativeSrc": "5941:152:6",
													"nodeType": "YulBlock",
													"src": "5941:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5958:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5958:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5961:77:6",
																		"nodeType": "YulLiteral",
																		"src": "5961:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5951:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5951:6:6"
																},
																"nativeSrc": "5951:88:6",
																"nodeType": "YulFunctionCall",
																"src": "5951:88:6"
															},
															"nativeSrc": "5951:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "5951:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6055:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6055:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6058:4:6",
																		"nodeType": "YulLiteral",
																		"src": "6058:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6048:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6048:6:6"
																},
																"nativeSrc": "6048:15:6",
																"nodeType": "YulFunctionCall",
																"src": "6048:15:6"
															},
															"nativeSrc": "6048:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "6048:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6079:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6079:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6082:4:6",
																		"nodeType": "YulLiteral",
																		"src": "6082:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6072:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6072:6:6"
																},
																"nativeSrc": "6072:15:6",
																"nodeType": "YulFunctionCall",
																"src": "6072:15:6"
															},
															"nativeSrc": "6072:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "6072:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "5913:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "5913:180:6"
											},
											{
												"body": {
													"nativeSrc": "6150:269:6",
													"nodeType": "YulBlock",
													"src": "6150:269:6",
													"statements": [
														{
															"nativeSrc": "6160:22:6",
															"nodeType": "YulAssignment",
															"src": "6160:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6174:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6174:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6180:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6180:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6170:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6170:3:6"
																},
																"nativeSrc": "6170:12:6",
																"nodeType": "YulFunctionCall",
																"src": "6170:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6160:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6160:6:6"
																}
															]
														},
														{
															"nativeSrc": "6191:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "6191:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6221:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6221:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6227:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6227:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6217:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6217:3:6"
																},
																"nativeSrc": "6217:12:6",
																"nodeType": "YulFunctionCall",
																"src": "6217:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6195:18:6",
																	"nodeType": "YulTypedName",
																	"src": "6195:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6268:51:6",
																"nodeType": "YulBlock",
																"src": "6268:51:6",
																"statements": [
																	{
																		"nativeSrc": "6282:27:6",
																		"nodeType": "YulAssignment",
																		"src": "6282:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6296:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "6296:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6304:4:6",
																					"nodeType": "YulLiteral",
																					"src": "6304:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6292:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "6292:3:6"
																			},
																			"nativeSrc": "6292:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6292:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6282:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6282:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6248:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "6248:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6241:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6241:6:6"
																},
																"nativeSrc": "6241:26:6",
																"nodeType": "YulFunctionCall",
																"src": "6241:26:6"
															},
															"nativeSrc": "6238:81:6",
															"nodeType": "YulIf",
															"src": "6238:81:6"
														},
														{
															"body": {
																"nativeSrc": "6371:42:6",
																"nodeType": "YulBlock",
																"src": "6371:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6385:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "6385:16:6"
																			},
																			"nativeSrc": "6385:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6385:18:6"
																		},
																		"nativeSrc": "6385:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6385:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6335:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "6335:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6358:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6358:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6366:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6366:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6355:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "6355:2:6"
																		},
																		"nativeSrc": "6355:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6355:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6332:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "6332:2:6"
																},
																"nativeSrc": "6332:38:6",
																"nodeType": "YulFunctionCall",
																"src": "6332:38:6"
															},
															"nativeSrc": "6329:84:6",
															"nodeType": "YulIf",
															"src": "6329:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6099:320:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6134:4:6",
														"nodeType": "YulTypedName",
														"src": "6134:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6143:6:6",
														"nodeType": "YulTypedName",
														"src": "6143:6:6",
														"type": ""
													}
												],
												"src": "6099:320:6"
											},
											{
												"body": {
													"nativeSrc": "6531:70:6",
													"nodeType": "YulBlock",
													"src": "6531:70:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6553:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6553:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6561:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6561:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6549:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6549:3:6"
																		},
																		"nativeSrc": "6549:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6549:14:6"
																	},
																	{
																		"hexValue": "536f6c6f207075656465206c6c616d617220656c206f776e6572",
																		"kind": "string",
																		"nativeSrc": "6565:28:6",
																		"nodeType": "YulLiteral",
																		"src": "6565:28:6",
																		"type": "",
																		"value": "Solo puede llamar el owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6542:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6542:6:6"
																},
																"nativeSrc": "6542:52:6",
																"nodeType": "YulFunctionCall",
																"src": "6542:52:6"
															},
															"nativeSrc": "6542:52:6",
															"nodeType": "YulExpressionStatement",
															"src": "6542:52:6"
														}
													]
												},
												"name": "store_literal_in_memory_4ec76783f3894e67036af6919e25ed127fdc6f729f79865424eb8381f82d8d50",
												"nativeSrc": "6425:176:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6523:6:6",
														"nodeType": "YulTypedName",
														"src": "6523:6:6",
														"type": ""
													}
												],
												"src": "6425:176:6"
											},
											{
												"body": {
													"nativeSrc": "6753:220:6",
													"nodeType": "YulBlock",
													"src": "6753:220:6",
													"statements": [
														{
															"nativeSrc": "6763:74:6",
															"nodeType": "YulAssignment",
															"src": "6763:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6829:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6829:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6834:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6834:2:6",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6770:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "6770:58:6"
																},
																"nativeSrc": "6770:67:6",
																"nodeType": "YulFunctionCall",
																"src": "6770:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6763:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6763:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6935:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6935:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4ec76783f3894e67036af6919e25ed127fdc6f729f79865424eb8381f82d8d50",
																	"nativeSrc": "6846:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "6846:88:6"
																},
																"nativeSrc": "6846:93:6",
																"nodeType": "YulFunctionCall",
																"src": "6846:93:6"
															},
															"nativeSrc": "6846:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "6846:93:6"
														},
														{
															"nativeSrc": "6948:19:6",
															"nodeType": "YulAssignment",
															"src": "6948:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6959:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6959:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6964:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6964:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6955:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6955:3:6"
																},
																"nativeSrc": "6955:12:6",
																"nodeType": "YulFunctionCall",
																"src": "6955:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6948:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6948:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4ec76783f3894e67036af6919e25ed127fdc6f729f79865424eb8381f82d8d50_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6607:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6741:3:6",
														"nodeType": "YulTypedName",
														"src": "6741:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6749:3:6",
														"nodeType": "YulTypedName",
														"src": "6749:3:6",
														"type": ""
													}
												],
												"src": "6607:366:6"
											},
											{
												"body": {
													"nativeSrc": "7150:248:6",
													"nodeType": "YulBlock",
													"src": "7150:248:6",
													"statements": [
														{
															"nativeSrc": "7160:26:6",
															"nodeType": "YulAssignment",
															"src": "7160:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7172:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7172:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7183:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7183:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7168:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7168:3:6"
																},
																"nativeSrc": "7168:18:6",
																"nodeType": "YulFunctionCall",
																"src": "7168:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7160:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7160:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7207:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7207:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7218:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7218:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7203:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7203:3:6"
																		},
																		"nativeSrc": "7203:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7203:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7226:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "7226:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7232:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7232:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7222:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7222:3:6"
																		},
																		"nativeSrc": "7222:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7222:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7196:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7196:6:6"
																},
																"nativeSrc": "7196:47:6",
																"nodeType": "YulFunctionCall",
																"src": "7196:47:6"
															},
															"nativeSrc": "7196:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "7196:47:6"
														},
														{
															"nativeSrc": "7252:139:6",
															"nodeType": "YulAssignment",
															"src": "7252:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7386:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7386:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4ec76783f3894e67036af6919e25ed127fdc6f729f79865424eb8381f82d8d50_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7260:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "7260:124:6"
																},
																"nativeSrc": "7260:131:6",
																"nodeType": "YulFunctionCall",
																"src": "7260:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7252:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7252:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4ec76783f3894e67036af6919e25ed127fdc6f729f79865424eb8381f82d8d50__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6979:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7130:9:6",
														"nodeType": "YulTypedName",
														"src": "7130:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7145:4:6",
														"nodeType": "YulTypedName",
														"src": "7145:4:6",
														"type": ""
													}
												],
												"src": "6979:419:6"
											},
											{
												"body": {
													"nativeSrc": "7510:114:6",
													"nodeType": "YulBlock",
													"src": "7510:114:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7532:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "7532:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7540:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7540:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7528:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7528:3:6"
																		},
																		"nativeSrc": "7528:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7528:14:6"
																	},
																	{
																		"hexValue": "4c6120646972656363696f6e2064657374696e6f206e6f2065732076616c6964",
																		"kind": "string",
																		"nativeSrc": "7544:34:6",
																		"nodeType": "YulLiteral",
																		"src": "7544:34:6",
																		"type": "",
																		"value": "La direccion destino no es valid"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7521:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7521:6:6"
																},
																"nativeSrc": "7521:58:6",
																"nodeType": "YulFunctionCall",
																"src": "7521:58:6"
															},
															"nativeSrc": "7521:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "7521:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7600:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "7600:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7608:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7608:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7596:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7596:3:6"
																		},
																		"nativeSrc": "7596:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7596:15:6"
																	},
																	{
																		"hexValue": "61",
																		"kind": "string",
																		"nativeSrc": "7613:3:6",
																		"nodeType": "YulLiteral",
																		"src": "7613:3:6",
																		"type": "",
																		"value": "a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7589:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7589:6:6"
																},
																"nativeSrc": "7589:28:6",
																"nodeType": "YulFunctionCall",
																"src": "7589:28:6"
															},
															"nativeSrc": "7589:28:6",
															"nodeType": "YulExpressionStatement",
															"src": "7589:28:6"
														}
													]
												},
												"name": "store_literal_in_memory_a741e67d6dc9c74b39a03cacfe829cad0f05f603ef935636f3247bb18530cc63",
												"nativeSrc": "7404:220:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7502:6:6",
														"nodeType": "YulTypedName",
														"src": "7502:6:6",
														"type": ""
													}
												],
												"src": "7404:220:6"
											},
											{
												"body": {
													"nativeSrc": "7776:220:6",
													"nodeType": "YulBlock",
													"src": "7776:220:6",
													"statements": [
														{
															"nativeSrc": "7786:74:6",
															"nodeType": "YulAssignment",
															"src": "7786:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7852:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7852:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7857:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7857:2:6",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7793:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "7793:58:6"
																},
																"nativeSrc": "7793:67:6",
																"nodeType": "YulFunctionCall",
																"src": "7793:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7786:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7786:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7958:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7958:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a741e67d6dc9c74b39a03cacfe829cad0f05f603ef935636f3247bb18530cc63",
																	"nativeSrc": "7869:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "7869:88:6"
																},
																"nativeSrc": "7869:93:6",
																"nodeType": "YulFunctionCall",
																"src": "7869:93:6"
															},
															"nativeSrc": "7869:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "7869:93:6"
														},
														{
															"nativeSrc": "7971:19:6",
															"nodeType": "YulAssignment",
															"src": "7971:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7982:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7982:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7987:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7987:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7978:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7978:3:6"
																},
																"nativeSrc": "7978:12:6",
																"nodeType": "YulFunctionCall",
																"src": "7978:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7971:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7971:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a741e67d6dc9c74b39a03cacfe829cad0f05f603ef935636f3247bb18530cc63_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7630:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7764:3:6",
														"nodeType": "YulTypedName",
														"src": "7764:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7772:3:6",
														"nodeType": "YulTypedName",
														"src": "7772:3:6",
														"type": ""
													}
												],
												"src": "7630:366:6"
											},
											{
												"body": {
													"nativeSrc": "8173:248:6",
													"nodeType": "YulBlock",
													"src": "8173:248:6",
													"statements": [
														{
															"nativeSrc": "8183:26:6",
															"nodeType": "YulAssignment",
															"src": "8183:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8195:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8195:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8206:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8206:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8191:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8191:3:6"
																},
																"nativeSrc": "8191:18:6",
																"nodeType": "YulFunctionCall",
																"src": "8191:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8183:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8183:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8230:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8230:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8241:1:6",
																				"nodeType": "YulLiteral",
																				"src": "8241:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8226:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8226:3:6"
																		},
																		"nativeSrc": "8226:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8226:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8249:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "8249:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8255:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8255:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8245:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8245:3:6"
																		},
																		"nativeSrc": "8245:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8245:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8219:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8219:6:6"
																},
																"nativeSrc": "8219:47:6",
																"nodeType": "YulFunctionCall",
																"src": "8219:47:6"
															},
															"nativeSrc": "8219:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "8219:47:6"
														},
														{
															"nativeSrc": "8275:139:6",
															"nodeType": "YulAssignment",
															"src": "8275:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8409:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "8409:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a741e67d6dc9c74b39a03cacfe829cad0f05f603ef935636f3247bb18530cc63_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8283:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "8283:124:6"
																},
																"nativeSrc": "8283:131:6",
																"nodeType": "YulFunctionCall",
																"src": "8283:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8275:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8275:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a741e67d6dc9c74b39a03cacfe829cad0f05f603ef935636f3247bb18530cc63__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8002:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8153:9:6",
														"nodeType": "YulTypedName",
														"src": "8153:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8168:4:6",
														"nodeType": "YulTypedName",
														"src": "8168:4:6",
														"type": ""
													}
												],
												"src": "8002:419:6"
											},
											{
												"body": {
													"nativeSrc": "8455:152:6",
													"nodeType": "YulBlock",
													"src": "8455:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8472:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8472:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8475:77:6",
																		"nodeType": "YulLiteral",
																		"src": "8475:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8465:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8465:6:6"
																},
																"nativeSrc": "8465:88:6",
																"nodeType": "YulFunctionCall",
																"src": "8465:88:6"
															},
															"nativeSrc": "8465:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "8465:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8569:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8569:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8572:4:6",
																		"nodeType": "YulLiteral",
																		"src": "8572:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8562:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8562:6:6"
																},
																"nativeSrc": "8562:15:6",
																"nodeType": "YulFunctionCall",
																"src": "8562:15:6"
															},
															"nativeSrc": "8562:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "8562:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8593:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8593:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8596:4:6",
																		"nodeType": "YulLiteral",
																		"src": "8596:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8586:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8586:6:6"
																},
																"nativeSrc": "8586:15:6",
																"nodeType": "YulFunctionCall",
																"src": "8586:15:6"
															},
															"nativeSrc": "8586:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "8586:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8427:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "8427:180:6"
											},
											{
												"body": {
													"nativeSrc": "8657:147:6",
													"nodeType": "YulBlock",
													"src": "8657:147:6",
													"statements": [
														{
															"nativeSrc": "8667:25:6",
															"nodeType": "YulAssignment",
															"src": "8667:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8690:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8690:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8672:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "8672:17:6"
																},
																"nativeSrc": "8672:20:6",
																"nodeType": "YulFunctionCall",
																"src": "8672:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8667:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "8667:1:6"
																}
															]
														},
														{
															"nativeSrc": "8701:25:6",
															"nodeType": "YulAssignment",
															"src": "8701:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8724:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8724:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8706:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "8706:17:6"
																},
																"nativeSrc": "8706:20:6",
																"nodeType": "YulFunctionCall",
																"src": "8706:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8701:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "8701:1:6"
																}
															]
														},
														{
															"nativeSrc": "8735:16:6",
															"nodeType": "YulAssignment",
															"src": "8735:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8746:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8746:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8749:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8749:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8742:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8742:3:6"
																},
																"nativeSrc": "8742:9:6",
																"nodeType": "YulFunctionCall",
																"src": "8742:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8735:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8735:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8775:22:6",
																"nodeType": "YulBlock",
																"src": "8775:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8777:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "8777:16:6"
																			},
																			"nativeSrc": "8777:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8777:18:6"
																		},
																		"nativeSrc": "8777:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8777:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8767:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8767:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "8770:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8770:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8764:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "8764:2:6"
																},
																"nativeSrc": "8764:10:6",
																"nodeType": "YulFunctionCall",
																"src": "8764:10:6"
															},
															"nativeSrc": "8761:36:6",
															"nodeType": "YulIf",
															"src": "8761:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8613:191:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8644:1:6",
														"nodeType": "YulTypedName",
														"src": "8644:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8647:1:6",
														"nodeType": "YulTypedName",
														"src": "8647:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8653:3:6",
														"nodeType": "YulTypedName",
														"src": "8653:3:6",
														"type": ""
													}
												],
												"src": "8613:191:6"
											},
											{
												"body": {
													"nativeSrc": "8916:75:6",
													"nodeType": "YulBlock",
													"src": "8916:75:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8938:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8938:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8946:1:6",
																				"nodeType": "YulLiteral",
																				"src": "8946:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8934:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8934:3:6"
																		},
																		"nativeSrc": "8934:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8934:14:6"
																	},
																	{
																		"hexValue": "4e6f2073652070756564656e20656d69746972206d617320746f6b656e7321",
																		"kind": "string",
																		"nativeSrc": "8950:33:6",
																		"nodeType": "YulLiteral",
																		"src": "8950:33:6",
																		"type": "",
																		"value": "No se pueden emitir mas tokens!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8927:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8927:6:6"
																},
																"nativeSrc": "8927:57:6",
																"nodeType": "YulFunctionCall",
																"src": "8927:57:6"
															},
															"nativeSrc": "8927:57:6",
															"nodeType": "YulExpressionStatement",
															"src": "8927:57:6"
														}
													]
												},
												"name": "store_literal_in_memory_336f12110b5c92494efba6968210650067826eac23d477ab2241ce7b6a14d97b",
												"nativeSrc": "8810:181:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8908:6:6",
														"nodeType": "YulTypedName",
														"src": "8908:6:6",
														"type": ""
													}
												],
												"src": "8810:181:6"
											},
											{
												"body": {
													"nativeSrc": "9143:220:6",
													"nodeType": "YulBlock",
													"src": "9143:220:6",
													"statements": [
														{
															"nativeSrc": "9153:74:6",
															"nodeType": "YulAssignment",
															"src": "9153:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9219:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9219:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9224:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9224:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9160:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "9160:58:6"
																},
																"nativeSrc": "9160:67:6",
																"nodeType": "YulFunctionCall",
																"src": "9160:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9153:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9153:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9325:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9325:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_336f12110b5c92494efba6968210650067826eac23d477ab2241ce7b6a14d97b",
																	"nativeSrc": "9236:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "9236:88:6"
																},
																"nativeSrc": "9236:93:6",
																"nodeType": "YulFunctionCall",
																"src": "9236:93:6"
															},
															"nativeSrc": "9236:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "9236:93:6"
														},
														{
															"nativeSrc": "9338:19:6",
															"nodeType": "YulAssignment",
															"src": "9338:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9349:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9349:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9354:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9354:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9345:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9345:3:6"
																},
																"nativeSrc": "9345:12:6",
																"nodeType": "YulFunctionCall",
																"src": "9345:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9338:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9338:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_336f12110b5c92494efba6968210650067826eac23d477ab2241ce7b6a14d97b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8997:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9131:3:6",
														"nodeType": "YulTypedName",
														"src": "9131:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9139:3:6",
														"nodeType": "YulTypedName",
														"src": "9139:3:6",
														"type": ""
													}
												],
												"src": "8997:366:6"
											},
											{
												"body": {
													"nativeSrc": "9540:248:6",
													"nodeType": "YulBlock",
													"src": "9540:248:6",
													"statements": [
														{
															"nativeSrc": "9550:26:6",
															"nodeType": "YulAssignment",
															"src": "9550:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9562:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9562:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9573:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9573:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9558:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9558:3:6"
																},
																"nativeSrc": "9558:18:6",
																"nodeType": "YulFunctionCall",
																"src": "9558:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9550:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9550:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9597:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9597:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9608:1:6",
																				"nodeType": "YulLiteral",
																				"src": "9608:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9593:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9593:3:6"
																		},
																		"nativeSrc": "9593:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9593:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9616:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9616:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9622:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9622:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9612:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9612:3:6"
																		},
																		"nativeSrc": "9612:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9612:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9586:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9586:6:6"
																},
																"nativeSrc": "9586:47:6",
																"nodeType": "YulFunctionCall",
																"src": "9586:47:6"
															},
															"nativeSrc": "9586:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "9586:47:6"
														},
														{
															"nativeSrc": "9642:139:6",
															"nodeType": "YulAssignment",
															"src": "9642:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9776:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "9776:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_336f12110b5c92494efba6968210650067826eac23d477ab2241ce7b6a14d97b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9650:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "9650:124:6"
																},
																"nativeSrc": "9650:131:6",
																"nodeType": "YulFunctionCall",
																"src": "9650:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9642:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9642:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_336f12110b5c92494efba6968210650067826eac23d477ab2241ce7b6a14d97b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9369:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9520:9:6",
														"nodeType": "YulTypedName",
														"src": "9520:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9535:4:6",
														"nodeType": "YulTypedName",
														"src": "9535:4:6",
														"type": ""
													}
												],
												"src": "9369:419:6"
											},
											{
												"body": {
													"nativeSrc": "9900:136:6",
													"nodeType": "YulBlock",
													"src": "9900:136:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9922:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "9922:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9930:1:6",
																				"nodeType": "YulLiteral",
																				"src": "9930:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9918:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9918:3:6"
																		},
																		"nativeSrc": "9918:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9918:14:6"
																	},
																	{
																		"hexValue": "4e6f20736520707565646520656c696d696e61722030206e6920756e206e756d",
																		"kind": "string",
																		"nativeSrc": "9934:34:6",
																		"nodeType": "YulLiteral",
																		"src": "9934:34:6",
																		"type": "",
																		"value": "No se puede eliminar 0 ni un num"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9911:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9911:6:6"
																},
																"nativeSrc": "9911:58:6",
																"nodeType": "YulFunctionCall",
																"src": "9911:58:6"
															},
															"nativeSrc": "9911:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "9911:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9990:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "9990:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9998:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9998:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9986:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9986:3:6"
																		},
																		"nativeSrc": "9986:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9986:15:6"
																	},
																	{
																		"hexValue": "65726f206e6567617469766f20646520746f6b656e732e",
																		"kind": "string",
																		"nativeSrc": "10003:25:6",
																		"nodeType": "YulLiteral",
																		"src": "10003:25:6",
																		"type": "",
																		"value": "ero negativo de tokens."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9979:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9979:6:6"
																},
																"nativeSrc": "9979:50:6",
																"nodeType": "YulFunctionCall",
																"src": "9979:50:6"
															},
															"nativeSrc": "9979:50:6",
															"nodeType": "YulExpressionStatement",
															"src": "9979:50:6"
														}
													]
												},
												"name": "store_literal_in_memory_51de52eeb4deb82ff460c459daa1179bd1766e5f1ee051b554fcaf62cf6e33ea",
												"nativeSrc": "9794:242:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9892:6:6",
														"nodeType": "YulTypedName",
														"src": "9892:6:6",
														"type": ""
													}
												],
												"src": "9794:242:6"
											},
											{
												"body": {
													"nativeSrc": "10188:220:6",
													"nodeType": "YulBlock",
													"src": "10188:220:6",
													"statements": [
														{
															"nativeSrc": "10198:74:6",
															"nodeType": "YulAssignment",
															"src": "10198:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10264:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10264:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10269:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10269:2:6",
																		"type": "",
																		"value": "55"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10205:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "10205:58:6"
																},
																"nativeSrc": "10205:67:6",
																"nodeType": "YulFunctionCall",
																"src": "10205:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10198:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10198:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10370:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10370:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_51de52eeb4deb82ff460c459daa1179bd1766e5f1ee051b554fcaf62cf6e33ea",
																	"nativeSrc": "10281:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "10281:88:6"
																},
																"nativeSrc": "10281:93:6",
																"nodeType": "YulFunctionCall",
																"src": "10281:93:6"
															},
															"nativeSrc": "10281:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "10281:93:6"
														},
														{
															"nativeSrc": "10383:19:6",
															"nodeType": "YulAssignment",
															"src": "10383:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10394:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10394:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10399:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10399:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10390:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10390:3:6"
																},
																"nativeSrc": "10390:12:6",
																"nodeType": "YulFunctionCall",
																"src": "10390:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10383:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10383:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_51de52eeb4deb82ff460c459daa1179bd1766e5f1ee051b554fcaf62cf6e33ea_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10042:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10176:3:6",
														"nodeType": "YulTypedName",
														"src": "10176:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10184:3:6",
														"nodeType": "YulTypedName",
														"src": "10184:3:6",
														"type": ""
													}
												],
												"src": "10042:366:6"
											},
											{
												"body": {
													"nativeSrc": "10585:248:6",
													"nodeType": "YulBlock",
													"src": "10585:248:6",
													"statements": [
														{
															"nativeSrc": "10595:26:6",
															"nodeType": "YulAssignment",
															"src": "10595:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10607:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "10607:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10618:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10618:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10603:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10603:3:6"
																},
																"nativeSrc": "10603:18:6",
																"nodeType": "YulFunctionCall",
																"src": "10603:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10595:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10595:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10642:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10642:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10653:1:6",
																				"nodeType": "YulLiteral",
																				"src": "10653:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10638:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10638:3:6"
																		},
																		"nativeSrc": "10638:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10638:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10661:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "10661:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10667:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10667:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10657:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10657:3:6"
																		},
																		"nativeSrc": "10657:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10657:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10631:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10631:6:6"
																},
																"nativeSrc": "10631:47:6",
																"nodeType": "YulFunctionCall",
																"src": "10631:47:6"
															},
															"nativeSrc": "10631:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "10631:47:6"
														},
														{
															"nativeSrc": "10687:139:6",
															"nodeType": "YulAssignment",
															"src": "10687:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10821:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "10821:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_51de52eeb4deb82ff460c459daa1179bd1766e5f1ee051b554fcaf62cf6e33ea_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10695:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "10695:124:6"
																},
																"nativeSrc": "10695:131:6",
																"nodeType": "YulFunctionCall",
																"src": "10695:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10687:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10687:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_51de52eeb4deb82ff460c459daa1179bd1766e5f1ee051b554fcaf62cf6e33ea__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10414:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10565:9:6",
														"nodeType": "YulTypedName",
														"src": "10565:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10580:4:6",
														"nodeType": "YulTypedName",
														"src": "10580:4:6",
														"type": ""
													}
												],
												"src": "10414:419:6"
											},
											{
												"body": {
													"nativeSrc": "10993:288:6",
													"nodeType": "YulBlock",
													"src": "10993:288:6",
													"statements": [
														{
															"nativeSrc": "11003:26:6",
															"nodeType": "YulAssignment",
															"src": "11003:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11015:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "11015:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11026:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11026:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11011:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11011:3:6"
																},
																"nativeSrc": "11011:18:6",
																"nodeType": "YulFunctionCall",
																"src": "11011:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11003:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11003:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11083:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "11083:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11096:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11096:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11107:1:6",
																				"nodeType": "YulLiteral",
																				"src": "11107:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11092:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11092:3:6"
																		},
																		"nativeSrc": "11092:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11092:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11039:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "11039:43:6"
																},
																"nativeSrc": "11039:71:6",
																"nodeType": "YulFunctionCall",
																"src": "11039:71:6"
															},
															"nativeSrc": "11039:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "11039:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11164:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "11164:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11177:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11177:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11188:2:6",
																				"nodeType": "YulLiteral",
																				"src": "11188:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11173:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11173:3:6"
																		},
																		"nativeSrc": "11173:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11173:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11120:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "11120:43:6"
																},
																"nativeSrc": "11120:72:6",
																"nodeType": "YulFunctionCall",
																"src": "11120:72:6"
															},
															"nativeSrc": "11120:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "11120:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11246:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "11246:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11259:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11259:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11270:2:6",
																				"nodeType": "YulLiteral",
																				"src": "11270:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11255:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11255:3:6"
																		},
																		"nativeSrc": "11255:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11255:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11202:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "11202:43:6"
																},
																"nativeSrc": "11202:72:6",
																"nodeType": "YulFunctionCall",
																"src": "11202:72:6"
															},
															"nativeSrc": "11202:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "11202:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10839:442:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10949:9:6",
														"nodeType": "YulTypedName",
														"src": "10949:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10961:6:6",
														"nodeType": "YulTypedName",
														"src": "10961:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10969:6:6",
														"nodeType": "YulTypedName",
														"src": "10969:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10977:6:6",
														"nodeType": "YulTypedName",
														"src": "10977:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10988:4:6",
														"nodeType": "YulTypedName",
														"src": "10988:4:6",
														"type": ""
													}
												],
												"src": "10839:442:6"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_4ec76783f3894e67036af6919e25ed127fdc6f729f79865424eb8381f82d8d50(memPtr) {\n\n        mstore(add(memPtr, 0), \"Solo puede llamar el owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_4ec76783f3894e67036af6919e25ed127fdc6f729f79865424eb8381f82d8d50_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_4ec76783f3894e67036af6919e25ed127fdc6f729f79865424eb8381f82d8d50(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4ec76783f3894e67036af6919e25ed127fdc6f729f79865424eb8381f82d8d50__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4ec76783f3894e67036af6919e25ed127fdc6f729f79865424eb8381f82d8d50_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a741e67d6dc9c74b39a03cacfe829cad0f05f603ef935636f3247bb18530cc63(memPtr) {\n\n        mstore(add(memPtr, 0), \"La direccion destino no es valid\")\n\n        mstore(add(memPtr, 32), \"a\")\n\n    }\n\n    function abi_encode_t_stringliteral_a741e67d6dc9c74b39a03cacfe829cad0f05f603ef935636f3247bb18530cc63_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_a741e67d6dc9c74b39a03cacfe829cad0f05f603ef935636f3247bb18530cc63(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a741e67d6dc9c74b39a03cacfe829cad0f05f603ef935636f3247bb18530cc63__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a741e67d6dc9c74b39a03cacfe829cad0f05f603ef935636f3247bb18530cc63_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_336f12110b5c92494efba6968210650067826eac23d477ab2241ce7b6a14d97b(memPtr) {\n\n        mstore(add(memPtr, 0), \"No se pueden emitir mas tokens!\")\n\n    }\n\n    function abi_encode_t_stringliteral_336f12110b5c92494efba6968210650067826eac23d477ab2241ce7b6a14d97b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_336f12110b5c92494efba6968210650067826eac23d477ab2241ce7b6a14d97b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_336f12110b5c92494efba6968210650067826eac23d477ab2241ce7b6a14d97b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_336f12110b5c92494efba6968210650067826eac23d477ab2241ce7b6a14d97b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_51de52eeb4deb82ff460c459daa1179bd1766e5f1ee051b554fcaf62cf6e33ea(memPtr) {\n\n        mstore(add(memPtr, 0), \"No se puede eliminar 0 ni un num\")\n\n        mstore(add(memPtr, 32), \"ero negativo de tokens.\")\n\n    }\n\n    function abi_encode_t_stringliteral_51de52eeb4deb82ff460c459daa1179bd1766e5f1ee051b554fcaf62cf6e33ea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 55)\n        store_literal_in_memory_51de52eeb4deb82ff460c459daa1179bd1766e5f1ee051b554fcaf62cf6e33ea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_51de52eeb4deb82ff460c459daa1179bd1766e5f1ee051b554fcaf62cf6e33ea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_51de52eeb4deb82ff460c459daa1179bd1766e5f1ee051b554fcaf62cf6e33ea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"6": [
									{
										"length": 32,
										"start": 1512
									},
									{
										"length": 32,
										"start": 1658
									}
								],
								"8": [
									{
										"length": 32,
										"start": 1361
									},
									{
										"length": 32,
										"start": 1551
									},
									{
										"length": 32,
										"start": 2378
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610109575f3560e01c806370a08231116100a05780639dc29fac1161006f5780639dc29fac146102a9578063a9059cbb146102c5578063b2bdfa7b146102f5578063dd62ed3e14610313578063e83157421461034357610109565b806370a082311461021f5780637ff9b5961461024f5780638d75fe051461026d57806395d89b411461028b57610109565b8063313ce567116100dc578063313ce567146101a957806340c10f19146101c75780634b94f50e146101e35780636abcded11461020157610109565b806306fdde031461010d578063095ea7b31461012b57806318160ddd1461015b57806323b872dd14610179575b5f5ffd5b610115610361565b604051610122919061105e565b60405180910390f35b6101456004803603810190610140919061110f565b6103f1565b6040516101529190611167565b60405180910390f35b610163610413565b604051610170919061118f565b60405180910390f35b610193600480360381019061018e91906111a8565b61041c565b6040516101a09190611167565b60405180910390f35b6101b161044a565b6040516101be9190611213565b60405180910390f35b6101e160048036038101906101dc919061110f565b610452565b005b6101eb6105e5565b6040516101f8919061118f565b60405180910390f35b61020961060c565b604051610216919061118f565b60405180910390f35b6102396004803603810190610234919061122c565b610633565b604051610246919061118f565b60405180910390f35b610257610678565b604051610264919061118f565b60405180910390f35b61027561069c565b604051610282919061118f565b60405180910390f35b6102936106a2565b6040516102a0919061105e565b60405180910390f35b6102c360048036038101906102be919061110f565b610732565b005b6102df60048036038101906102da919061110f565b61087f565b6040516102ec9190611167565b60405180910390f35b6102fd6108a1565b60405161030a9190611266565b60405180910390f35b61032d6004803603810190610328919061127f565b6108c6565b60405161033a919061118f565b60405180910390f35b61034b610948565b604051610358919061118f565b60405180910390f35b606060038054610370906112ea565b80601f016020809104026020016040519081016040528092919081815260200182805461039c906112ea565b80156103e75780601f106103be576101008083540402835291602001916103e7565b820191905f5260205f20905b8154815290600101906020018083116103ca57829003601f168201915b5050505050905090565b5f5f6103fb61096c565b9050610408818585610973565b600191505092915050565b5f600254905090565b5f5f61042661096c565b9050610433858285610985565b61043e858585610a18565b60019150509392505050565b5f6012905090565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d890611364565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361054f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610546906113f2565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000008160055461057e919061143d565b11156105bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b6906114ba565b60405180910390fd5b8060055f8282546105d0919061143d565b925050819055506105e18282610b08565b5050565b5f7f0000000000000000000000000000000000000000000000000000000000000000905090565b5f7f0000000000000000000000000000000000000000000000000000000000000000905090565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60055481565b6060600480546106b1906112ea565b80601f01602080910402602001604051908101604052809291908181526020018280546106dd906112ea565b80156107285780601f106106ff57610100808354040283529160200191610728565b820191905f5260205f20905b81548152906001019060200180831161070b57829003601f168201915b5050505050905090565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b890611364565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361082f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610826906113f2565b60405180910390fd5b5f8111610871576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086890611548565b60405180910390fd5b61087b8282610b87565b5050565b5f5f61088961096c565b9050610896818585610a18565b600191505092915050565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f33905090565b6109808383836001610c06565b505050565b5f61099084846108c6565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610a125781811015610a03578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016109fa93929190611566565b60405180910390fd5b610a1184848484035f610c06565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a88575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610a7f9190611266565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610af8575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610aef9190611266565b60405180910390fd5b610b03838383610dd5565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b78575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610b6f9190611266565b60405180910390fd5b610b835f8383610dd5565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610bf7575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610bee9190611266565b60405180910390fd5b610c02825f83610dd5565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610c76575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610c6d9190611266565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ce6575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610cdd9190611266565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610dcf578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610dc6919061118f565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e25578060025f828254610e19919061143d565b92505081905550610ef3565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610eae578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610ea593929190611566565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f3a578060025f8282540392505081905550610f84565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610fe1919061118f565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61103082610fee565b61103a8185610ff8565b935061104a818560208601611008565b61105381611016565b840191505092915050565b5f6020820190508181035f8301526110768184611026565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6110ab82611082565b9050919050565b6110bb816110a1565b81146110c5575f5ffd5b50565b5f813590506110d6816110b2565b92915050565b5f819050919050565b6110ee816110dc565b81146110f8575f5ffd5b50565b5f81359050611109816110e5565b92915050565b5f5f604083850312156111255761112461107e565b5b5f611132858286016110c8565b9250506020611143858286016110fb565b9150509250929050565b5f8115159050919050565b6111618161114d565b82525050565b5f60208201905061117a5f830184611158565b92915050565b611189816110dc565b82525050565b5f6020820190506111a25f830184611180565b92915050565b5f5f5f606084860312156111bf576111be61107e565b5b5f6111cc868287016110c8565b93505060206111dd868287016110c8565b92505060406111ee868287016110fb565b9150509250925092565b5f60ff82169050919050565b61120d816111f8565b82525050565b5f6020820190506112265f830184611204565b92915050565b5f602082840312156112415761124061107e565b5b5f61124e848285016110c8565b91505092915050565b611260816110a1565b82525050565b5f6020820190506112795f830184611257565b92915050565b5f5f604083850312156112955761129461107e565b5b5f6112a2858286016110c8565b92505060206112b3858286016110c8565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061130157607f821691505b602082108103611314576113136112bd565b5b50919050565b7f536f6c6f207075656465206c6c616d617220656c206f776e65720000000000005f82015250565b5f61134e601a83610ff8565b91506113598261131a565b602082019050919050565b5f6020820190508181035f83015261137b81611342565b9050919050565b7f4c6120646972656363696f6e2064657374696e6f206e6f2065732076616c69645f8201527f6100000000000000000000000000000000000000000000000000000000000000602082015250565b5f6113dc602183610ff8565b91506113e782611382565b604082019050919050565b5f6020820190508181035f830152611409816113d0565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611447826110dc565b9150611452836110dc565b925082820190508082111561146a57611469611410565b5b92915050565b7f4e6f2073652070756564656e20656d69746972206d617320746f6b656e7321005f82015250565b5f6114a4601f83610ff8565b91506114af82611470565b602082019050919050565b5f6020820190508181035f8301526114d181611498565b9050919050565b7f4e6f20736520707565646520656c696d696e61722030206e6920756e206e756d5f8201527f65726f206e6567617469766f20646520746f6b656e732e000000000000000000602082015250565b5f611532603783610ff8565b915061153d826114d8565b604082019050919050565b5f6020820190508181035f83015261155f81611526565b9050919050565b5f6060820190506115795f830186611257565b6115866020830185611180565b6115936040830184611180565b94935050505056fea26469706673582212205ab7ef6e7f051f8d188607657d134dbad202205c2cb5432cf75ae3b44d51ef6264736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0x9DC29FAC GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x2A9 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0xB2BDFA7B EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0xE8315742 EQ PUSH2 0x343 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x7FF9B596 EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0x8D75FE05 EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x28B JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x4B94F50E EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x6ABCDED1 EQ PUSH2 0x201 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x179 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x115 PUSH2 0x361 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x105E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x145 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x140 SWAP2 SWAP1 PUSH2 0x110F JUMP JUMPDEST PUSH2 0x3F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x1167 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x163 PUSH2 0x413 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x118F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x11A8 JUMP JUMPDEST PUSH2 0x41C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x1167 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B1 PUSH2 0x44A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x1213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0x110F JUMP JUMPDEST PUSH2 0x452 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EB PUSH2 0x5E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F8 SWAP2 SWAP1 PUSH2 0x118F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x209 PUSH2 0x60C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x118F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x239 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x122C JUMP JUMPDEST PUSH2 0x633 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x246 SWAP2 SWAP1 PUSH2 0x118F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x257 PUSH2 0x678 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x264 SWAP2 SWAP1 PUSH2 0x118F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x275 PUSH2 0x69C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x282 SWAP2 SWAP1 PUSH2 0x118F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x293 PUSH2 0x6A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A0 SWAP2 SWAP1 PUSH2 0x105E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BE SWAP2 SWAP1 PUSH2 0x110F JUMP JUMPDEST PUSH2 0x732 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x110F JUMP JUMPDEST PUSH2 0x87F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0x1167 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FD PUSH2 0x8A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30A SWAP2 SWAP1 PUSH2 0x1266 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x127F JUMP JUMPDEST PUSH2 0x8C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x118F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34B PUSH2 0x948 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x358 SWAP2 SWAP1 PUSH2 0x118F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x370 SWAP1 PUSH2 0x12EA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x39C SWAP1 PUSH2 0x12EA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3E7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3BE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3E7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3CA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x3FB PUSH2 0x96C JUMP JUMPDEST SWAP1 POP PUSH2 0x408 DUP2 DUP6 DUP6 PUSH2 0x973 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x426 PUSH2 0x96C JUMP JUMPDEST SWAP1 POP PUSH2 0x433 DUP6 DUP3 DUP6 PUSH2 0x985 JUMP JUMPDEST PUSH2 0x43E DUP6 DUP6 DUP6 PUSH2 0xA18 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4E1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D8 SWAP1 PUSH2 0x1364 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x54F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x546 SWAP1 PUSH2 0x13F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 DUP2 PUSH1 0x5 SLOAD PUSH2 0x57E SWAP2 SWAP1 PUSH2 0x143D JUMP JUMPDEST GT ISZERO PUSH2 0x5BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B6 SWAP1 PUSH2 0x14BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x5D0 SWAP2 SWAP1 PUSH2 0x143D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x5E1 DUP3 DUP3 PUSH2 0xB08 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x6B1 SWAP1 PUSH2 0x12EA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6DD SWAP1 PUSH2 0x12EA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x728 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6FF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x728 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x70B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B8 SWAP1 PUSH2 0x1364 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x82F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x826 SWAP1 PUSH2 0x13F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0x871 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x868 SWAP1 PUSH2 0x1548 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x87B DUP3 DUP3 PUSH2 0xB87 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x889 PUSH2 0x96C JUMP JUMPDEST SWAP1 POP PUSH2 0x896 DUP2 DUP6 DUP6 PUSH2 0xA18 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x980 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xC06 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x990 DUP5 DUP5 PUSH2 0x8C6 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xA12 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xA03 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9FA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1566 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA11 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xC06 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA88 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA7F SWAP2 SWAP1 PUSH2 0x1266 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAF8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAEF SWAP2 SWAP1 PUSH2 0x1266 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB03 DUP4 DUP4 DUP4 PUSH2 0xDD5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB78 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB6F SWAP2 SWAP1 PUSH2 0x1266 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB83 PUSH0 DUP4 DUP4 PUSH2 0xDD5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBF7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEE SWAP2 SWAP1 PUSH2 0x1266 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC02 DUP3 PUSH0 DUP4 PUSH2 0xDD5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC76 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC6D SWAP2 SWAP1 PUSH2 0x1266 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCE6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCDD SWAP2 SWAP1 PUSH2 0x1266 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xDCF JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xDC6 SWAP2 SWAP1 PUSH2 0x118F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE25 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE19 SWAP2 SWAP1 PUSH2 0x143D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xEF3 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xEAE JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEA5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1566 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF3A JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xF84 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xFE1 SWAP2 SWAP1 PUSH2 0x118F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1030 DUP3 PUSH2 0xFEE JUMP JUMPDEST PUSH2 0x103A DUP2 DUP6 PUSH2 0xFF8 JUMP JUMPDEST SWAP4 POP PUSH2 0x104A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1008 JUMP JUMPDEST PUSH2 0x1053 DUP2 PUSH2 0x1016 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1076 DUP2 DUP5 PUSH2 0x1026 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x10AB DUP3 PUSH2 0x1082 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10BB DUP2 PUSH2 0x10A1 JUMP JUMPDEST DUP2 EQ PUSH2 0x10C5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10D6 DUP2 PUSH2 0x10B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10EE DUP2 PUSH2 0x10DC JUMP JUMPDEST DUP2 EQ PUSH2 0x10F8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1109 DUP2 PUSH2 0x10E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1125 JUMPI PUSH2 0x1124 PUSH2 0x107E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1132 DUP6 DUP3 DUP7 ADD PUSH2 0x10C8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1143 DUP6 DUP3 DUP7 ADD PUSH2 0x10FB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1161 DUP2 PUSH2 0x114D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x117A PUSH0 DUP4 ADD DUP5 PUSH2 0x1158 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1189 DUP2 PUSH2 0x10DC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11A2 PUSH0 DUP4 ADD DUP5 PUSH2 0x1180 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x11BF JUMPI PUSH2 0x11BE PUSH2 0x107E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11CC DUP7 DUP3 DUP8 ADD PUSH2 0x10C8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x11DD DUP7 DUP3 DUP8 ADD PUSH2 0x10C8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x11EE DUP7 DUP3 DUP8 ADD PUSH2 0x10FB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x120D DUP2 PUSH2 0x11F8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1226 PUSH0 DUP4 ADD DUP5 PUSH2 0x1204 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1241 JUMPI PUSH2 0x1240 PUSH2 0x107E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x124E DUP5 DUP3 DUP6 ADD PUSH2 0x10C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1260 DUP2 PUSH2 0x10A1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1279 PUSH0 DUP4 ADD DUP5 PUSH2 0x1257 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1295 JUMPI PUSH2 0x1294 PUSH2 0x107E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12A2 DUP6 DUP3 DUP7 ADD PUSH2 0x10C8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12B3 DUP6 DUP3 DUP7 ADD PUSH2 0x10C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1301 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1314 JUMPI PUSH2 0x1313 PUSH2 0x12BD JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x536F6C6F207075656465206C6C616D617220656C206F776E6572000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x134E PUSH1 0x1A DUP4 PUSH2 0xFF8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1359 DUP3 PUSH2 0x131A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x137B DUP2 PUSH2 0x1342 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4C6120646972656363696F6E2064657374696E6F206E6F2065732076616C6964 PUSH0 DUP3 ADD MSTORE PUSH32 0x6100000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x13DC PUSH1 0x21 DUP4 PUSH2 0xFF8 JUMP JUMPDEST SWAP2 POP PUSH2 0x13E7 DUP3 PUSH2 0x1382 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1409 DUP2 PUSH2 0x13D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1447 DUP3 PUSH2 0x10DC JUMP JUMPDEST SWAP2 POP PUSH2 0x1452 DUP4 PUSH2 0x10DC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x146A JUMPI PUSH2 0x1469 PUSH2 0x1410 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F2073652070756564656E20656D69746972206D617320746F6B656E732100 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14A4 PUSH1 0x1F DUP4 PUSH2 0xFF8 JUMP JUMPDEST SWAP2 POP PUSH2 0x14AF DUP3 PUSH2 0x1470 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14D1 DUP2 PUSH2 0x1498 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F20736520707565646520656C696D696E61722030206E6920756E206E756D PUSH0 DUP3 ADD MSTORE PUSH32 0x65726F206E6567617469766F20646520746F6B656E732E000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1532 PUSH1 0x37 DUP4 PUSH2 0xFF8 JUMP JUMPDEST SWAP2 POP PUSH2 0x153D DUP3 PUSH2 0x14D8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x155F DUP2 PUSH2 0x1526 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1579 PUSH0 DUP4 ADD DUP7 PUSH2 0x1257 JUMP JUMPDEST PUSH2 0x1586 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1180 JUMP JUMPDEST PUSH2 0x1593 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1180 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS 0xB7 0xEF PUSH15 0x7F051F8D188607657D134DBAD20220 TLOAD 0x2C 0xB5 NUMBER 0x2C 0xF7 GAS CALLF 0xB44D MLOAD 0xEF PUSH3 0x64736F PUSH13 0x634300081D0033000000000000 ",
							"sourceMap": "212:2189:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3979:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2830:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4757:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2688:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1224:519:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2239:78;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2323:75;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2985:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;253:35:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;475:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1962:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1751:480:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3296:178:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;551:21:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3532:140:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;370:34:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1760:89:2;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3979:186::-;4052:4;4068:13;4084:12;:10;:12::i;:::-;4068:28;;4106:31;4115:5;4122:7;4131:5;4106:8;:31::i;:::-;4154:4;4147:11;;;3979:186;;;;:::o;2830:97::-;2882:7;2908:12;;2901:19;;2830:97;:::o;4757:244::-;4844:4;4860:15;4878:12;:10;:12::i;:::-;4860:30;;4900:37;4916:4;4922:7;4931:5;4900:15;:37::i;:::-;4947:26;4957:4;4963:2;4967:5;4947:9;:26::i;:::-;4990:4;4983:11;;;4757:244;;;;;:::o;2688:82::-;2737:5;2761:2;2754:9;;2688:82;:::o;1224:519:0:-;1011:6;;;;;;;;;;;998:19;;:10;:19;;;990:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;1407:1:::1;1388:21;;:7;:21;;::::0;1380:67:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1567:9;1551:14;1538:12;;:27;;;;:::i;:::-;:38;;1530:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;1640:14;1624:12;;:30;;;;;;;:::i;:::-;;;;;;;;1705;1711:7;1720:14;1705:5;:30::i;:::-;1224:519:::0;;:::o;2239:78::-;2287:7;2305:10;2298:17;;2239:78;:::o;2323:75::-;2370:7;2386:9;2379:16;;2323:75;:::o;2985:116:2:-;3050:7;3076:9;:18;3086:7;3076:18;;;;;;;;;;;;;;;;3069:25;;2985:116;;;:::o;253:35:0:-;;;:::o;475:27::-;;;;:::o;1962:93:2:-;2009:13;2041:7;2034:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:93;:::o;1751:480:0:-;1011:6;;;;;;;;;;;998:19;;:10;:19;;;990:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;1934:1:::1;1915:21;;:7;:21;;::::0;1907:67:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:1;2064:16;:18;2056:86;;;;;;;;;;;;:::i;:::-;;;;;;;;;2191:32;2197:7;2206:16;2191:5;:32::i;:::-;1751:480:::0;;:::o;3296:178:2:-;3365:4;3381:13;3397:12;:10;:12::i;:::-;3381:28;;3419:27;3429:5;3436:2;3440:5;3419:9;:27::i;:::-;3463:4;3456:11;;;3296:178;;;;:::o;551:21:0:-;;;;;;;;;;;;;:::o;3532:140:2:-;3612:7;3638:11;:18;3650:5;3638:18;;;;;;;;;;;;;;;:27;3657:7;3638:27;;;;;;;;;;;;;;;;3631:34;;3532:140;;;;:::o;370:34:0:-;;;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8707:128:2:-;8791:37;8800:5;8807:7;8816:5;8823:4;8791:8;:37::i;:::-;8707:128;;;:::o;10396:476::-;10495:24;10522:25;10532:5;10539:7;10522:9;:25::i;:::-;10495:52;;10580:17;10561:16;:36;10557:309;;;10636:5;10617:16;:24;10613:130;;;10695:7;10704:16;10722:5;10668:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10613:130;10784:57;10793:5;10800:7;10828:5;10809:16;:24;10835:5;10784:8;:57::i;:::-;10557:309;10485:387;10396:476;;;:::o;5374:300::-;5473:1;5457:18;;:4;:18;;;5453:86;;5525:1;5498:30;;;;;;;;;;;:::i;:::-;;;;;;;;5453:86;5566:1;5552:16;;:2;:16;;;5548:86;;5620:1;5591:32;;;;;;;;;;;:::i;:::-;;;;;;;;5548:86;5643:24;5651:4;5657:2;5661:5;5643:7;:24::i;:::-;5374:300;;;:::o;7439:208::-;7528:1;7509:21;;:7;:21;;;7505:91;;7582:1;7553:32;;;;;;;;;;;:::i;:::-;;;;;;;;7505:91;7605:35;7621:1;7625:7;7634:5;7605:7;:35::i;:::-;7439:208;;:::o;7965:206::-;8054:1;8035:21;;:7;:21;;;8031:89;;8106:1;8079:30;;;;;;;;;;;:::i;:::-;;;;;;;;8031:89;8129:35;8137:7;8154:1;8158:5;8129:7;:35::i;:::-;7965:206;;:::o;9682:432::-;9811:1;9794:19;;:5;:19;;;9790:89;;9865:1;9836:32;;;;;;;;;;;:::i;:::-;;;;;;;;9790:89;9911:1;9892:21;;:7;:21;;;9888:90;;9964:1;9936:31;;;;;;;;;;;:::i;:::-;;;;;;;;9888:90;10017:5;9987:11;:18;9999:5;9987:18;;;;;;;;;;;;;;;:27;10006:7;9987:27;;;;;;;;;;;;;;;:35;;;;10036:9;10032:76;;;10082:7;10066:31;;10075:5;10066:31;;;10091:5;10066:31;;;;;;:::i;:::-;;;;;;;;10032:76;9682:432;;;;:::o;5989:1107::-;6094:1;6078:18;;:4;:18;;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;;;;;6074:540;;;6266:19;6288:9;:15;6298:4;6288:15;;;;;;;;;;;;;;;;6266:37;;6335:5;6321:11;:19;6317:115;;;6392:4;6398:11;6411:5;6367:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6317:115;6584:5;6570:11;:19;6552:9;:15;6562:4;6552:15;;;;;;;;;;;;;;;:37;;;;6252:362;6074:540;6642:1;6628:16;;:2;:16;;;6624:425;;6807:5;6791:12;;:21;;;;;;;;;;;6624:425;;;7019:5;7002:9;:13;7012:2;7002:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6624:425;7079:2;7064:25;;7073:4;7064:25;;;7083:5;7064:25;;;;;;:::i;:::-;;;;;;;;5989:1107;;;:::o;7:99:6:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:86::-;4351:7;4391:4;4384:5;4380:16;4369:27;;4316:86;;;:::o;4408:112::-;4491:22;4507:5;4491:22;:::i;:::-;4486:3;4479:35;4408:112;;:::o;4526:214::-;4615:4;4653:2;4642:9;4638:18;4630:26;;4666:67;4730:1;4719:9;4715:17;4706:6;4666:67;:::i;:::-;4526:214;;;;:::o;4746:329::-;4805:6;4854:2;4842:9;4833:7;4829:23;4825:32;4822:119;;;4860:79;;:::i;:::-;4822:119;4980:1;5005:53;5050:7;5041:6;5030:9;5026:22;5005:53;:::i;:::-;4995:63;;4951:117;4746:329;;;;:::o;5081:118::-;5168:24;5186:5;5168:24;:::i;:::-;5163:3;5156:37;5081:118;;:::o;5205:222::-;5298:4;5336:2;5325:9;5321:18;5313:26;;5349:71;5417:1;5406:9;5402:17;5393:6;5349:71;:::i;:::-;5205:222;;;;:::o;5433:474::-;5501:6;5509;5558:2;5546:9;5537:7;5533:23;5529:32;5526:119;;;5564:79;;:::i;:::-;5526:119;5684:1;5709:53;5754:7;5745:6;5734:9;5730:22;5709:53;:::i;:::-;5699:63;;5655:117;5811:2;5837:53;5882:7;5873:6;5862:9;5858:22;5837:53;:::i;:::-;5827:63;;5782:118;5433:474;;;;;:::o;5913:180::-;5961:77;5958:1;5951:88;6058:4;6055:1;6048:15;6082:4;6079:1;6072:15;6099:320;6143:6;6180:1;6174:4;6170:12;6160:22;;6227:1;6221:4;6217:12;6248:18;6238:81;;6304:4;6296:6;6292:17;6282:27;;6238:81;6366:2;6358:6;6355:14;6335:18;6332:38;6329:84;;6385:18;;:::i;:::-;6329:84;6150:269;6099:320;;;:::o;6425:176::-;6565:28;6561:1;6553:6;6549:14;6542:52;6425:176;:::o;6607:366::-;6749:3;6770:67;6834:2;6829:3;6770:67;:::i;:::-;6763:74;;6846:93;6935:3;6846:93;:::i;:::-;6964:2;6959:3;6955:12;6948:19;;6607:366;;;:::o;6979:419::-;7145:4;7183:2;7172:9;7168:18;7160:26;;7232:9;7226:4;7222:20;7218:1;7207:9;7203:17;7196:47;7260:131;7386:4;7260:131;:::i;:::-;7252:139;;6979:419;;;:::o;7404:220::-;7544:34;7540:1;7532:6;7528:14;7521:58;7613:3;7608:2;7600:6;7596:15;7589:28;7404:220;:::o;7630:366::-;7772:3;7793:67;7857:2;7852:3;7793:67;:::i;:::-;7786:74;;7869:93;7958:3;7869:93;:::i;:::-;7987:2;7982:3;7978:12;7971:19;;7630:366;;;:::o;8002:419::-;8168:4;8206:2;8195:9;8191:18;8183:26;;8255:9;8249:4;8245:20;8241:1;8230:9;8226:17;8219:47;8283:131;8409:4;8283:131;:::i;:::-;8275:139;;8002:419;;;:::o;8427:180::-;8475:77;8472:1;8465:88;8572:4;8569:1;8562:15;8596:4;8593:1;8586:15;8613:191;8653:3;8672:20;8690:1;8672:20;:::i;:::-;8667:25;;8706:20;8724:1;8706:20;:::i;:::-;8701:25;;8749:1;8746;8742:9;8735:16;;8770:3;8767:1;8764:10;8761:36;;;8777:18;;:::i;:::-;8761:36;8613:191;;;;:::o;8810:181::-;8950:33;8946:1;8938:6;8934:14;8927:57;8810:181;:::o;8997:366::-;9139:3;9160:67;9224:2;9219:3;9160:67;:::i;:::-;9153:74;;9236:93;9325:3;9236:93;:::i;:::-;9354:2;9349:3;9345:12;9338:19;;8997:366;;;:::o;9369:419::-;9535:4;9573:2;9562:9;9558:18;9550:26;;9622:9;9616:4;9612:20;9608:1;9597:9;9593:17;9586:47;9650:131;9776:4;9650:131;:::i;:::-;9642:139;;9369:419;;;:::o;9794:242::-;9934:34;9930:1;9922:6;9918:14;9911:58;10003:25;9998:2;9990:6;9986:15;9979:50;9794:242;:::o;10042:366::-;10184:3;10205:67;10269:2;10264:3;10205:67;:::i;:::-;10198:74;;10281:93;10370:3;10281:93;:::i;:::-;10399:2;10394:3;10390:12;10383:19;;10042:366;;;:::o;10414:419::-;10580:4;10618:2;10607:9;10603:18;10595:26;;10667:9;10661:4;10657:20;10653:1;10642:9;10638:17;10631:47;10695:131;10821:4;10695:131;:::i;:::-;10687:139;;10414:419;;;:::o;10839:442::-;10988:4;11026:2;11015:9;11011:18;11003:26;;11039:71;11107:1;11096:9;11092:17;11083:6;11039:71;:::i;:::-;11120:72;11188:2;11177:9;11173:18;11164:6;11120:72;:::i;:::-;11202;11270:2;11259:9;11255:18;11246:6;11202:72;:::i;:::-;10839:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1117000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_owner()": "2574",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2851",
								"burn(address,uint256)": "infinite",
								"decimals()": "361",
								"getMaxTokens()": "infinite",
								"getTokenPrice()": "infinite",
								"maxTokens()": "infinite",
								"mint(address,uint256)": "infinite",
								"mintedTokens()": "2492",
								"name()": "infinite",
								"symbol()": "infinite",
								"tokenPrice()": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 212,
									"end": 2401,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 212,
									"end": 2401,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 212,
									"end": 2401,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 581,
									"end": 950,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 581,
									"end": 950,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 581,
									"end": 950,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 581,
									"end": 950,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 581,
									"end": 950,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 581,
									"end": 950,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 581,
									"end": 950,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 581,
									"end": 950,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 581,
									"end": 950,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 581,
									"end": 950,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 581,
									"end": 950,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 581,
									"end": 950,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 581,
									"end": 950,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 581,
									"end": 950,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 581,
									"end": 950,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 581,
									"end": 950,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 581,
									"end": 950,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 581,
									"end": 950,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 581,
									"end": 950,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 581,
									"end": 950,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 581,
									"end": 950,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 581,
									"end": 950,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 581,
									"end": 950,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 581,
									"end": 950,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 581,
									"end": 950,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 581,
									"end": 950,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 581,
									"end": 950,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 581,
									"end": 950,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 581,
									"end": 950,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 581,
									"end": 950,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 581,
									"end": 950,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 581,
									"end": 950,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 581,
									"end": 950,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 581,
									"end": 950,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 581,
									"end": 950,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 681,
									"end": 685,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 686,
									"end": 692,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1656,
									"end": 1661,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 725,
									"end": 726,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 712,
									"end": 723,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 712,
									"end": 726,
									"modifierDepth": 1,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 704,
									"end": 768,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 704,
									"end": 768,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 704,
									"end": 768,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 704,
									"end": 768,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 704,
									"end": 768,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 704,
									"end": 768,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 704,
									"end": 768,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 704,
									"end": 768,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 704,
									"end": 768,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 704,
									"end": 768,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 704,
									"end": 768,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 704,
									"end": 768,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 704,
									"end": 768,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 704,
									"end": 768,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 704,
									"end": 768,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 704,
									"end": 768,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 704,
									"end": 768,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 704,
									"end": 768,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 704,
									"end": 768,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 704,
									"end": 768,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 704,
									"end": 768,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 704,
									"end": 768,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 704,
									"end": 768,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 704,
									"end": 768,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 799,
									"end": 800,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 787,
									"end": 797,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 787,
									"end": 800,
									"modifierDepth": 1,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 779,
									"end": 852,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 779,
									"end": 852,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 779,
									"end": 852,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 779,
									"end": 852,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 779,
									"end": 852,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 779,
									"end": 852,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 779,
									"end": 852,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 779,
									"end": 852,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 779,
									"end": 852,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 779,
									"end": 852,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 779,
									"end": 852,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 779,
									"end": 852,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 779,
									"end": 852,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 779,
									"end": 852,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 779,
									"end": 852,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 779,
									"end": 852,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 779,
									"end": 852,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 779,
									"end": 852,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 779,
									"end": 852,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 779,
									"end": 852,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 779,
									"end": 852,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 779,
									"end": 852,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 779,
									"end": 852,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 779,
									"end": 852,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 874,
									"end": 885,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 863,
									"end": 885,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 863,
									"end": 885,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 863,
									"end": 885,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 863,
									"end": 885,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 863,
									"end": 885,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 863,
									"end": 885,
									"modifierDepth": 1,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 906,
									"end": 916,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 896,
									"end": 916,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 896,
									"end": 916,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 896,
									"end": 916,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 896,
									"end": 916,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 896,
									"end": 916,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 896,
									"end": 916,
									"modifierDepth": 1,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 941,
									"end": 942,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 928,
									"end": 940,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 928,
									"end": 942,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 928,
									"end": 942,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 928,
									"end": 942,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 928,
									"end": 942,
									"modifierDepth": 1,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 581,
									"end": 950,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 581,
									"end": 950,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 581,
									"end": 950,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 581,
									"end": 950,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 212,
									"end": 2401,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 212,
									"end": 2401,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "74"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 6,
									"value": "74"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "75"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 6,
									"value": "75"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1699,
									"end": 1705,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1694,
									"end": 1697,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1689,
									"end": 1692,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1683,
									"end": 1706,
									"name": "MCOPY",
									"source": 6
								},
								{
									"begin": 1740,
									"end": 1741,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1731,
									"end": 1737,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1726,
									"end": 1729,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1722,
									"end": 1738,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1715,
									"end": 1742,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1749,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1844,
									"end": 1849,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "78"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 1927,
									"end": 1933,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 1885,
									"end": 1934,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "tag",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 1869,
									"end": 1935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "tag",
									"source": 6,
									"value": "78"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1958,
									"end": 1964,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1944,
									"end": 1965,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1996,
									"end": 2000,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1989,
									"end": 1994,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1985,
									"end": 2001,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2034,
									"end": 2037,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2025,
									"end": 2031,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2020,
									"end": 2023,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2016,
									"end": 2032,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2013,
									"end": 2038,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 2041,
									"end": 2120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "tag",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "tag",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 2176,
									"end": 2182,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2171,
									"end": 2174,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 2131,
									"end": 2183,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "tag",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1850,
									"end": 2189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2276,
									"end": 2281,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2325,
									"end": 2328,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2310,
									"end": 2316,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2306,
									"end": 2323,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2302,
									"end": 2329,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 2333,
									"end": 2412,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "tag",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "tag",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2443,
									"end": 2449,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2437,
									"end": 2450,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "86"
								},
								{
									"begin": 2554,
									"end": 2557,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2546,
									"end": 2552,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2539,
									"end": 2543,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2531,
									"end": 2537,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 2468,
									"end": 2558,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "tag",
									"source": 6,
									"value": "86"
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2282,
									"end": 2564,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2564,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2607,
									"end": 2614,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2636,
									"end": 2641,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2625,
									"end": 2641,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2625,
									"end": 2641,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 2647,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2653,
									"end": 2775,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 2653,
									"end": 2775,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2726,
									"end": 2750,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "89"
								},
								{
									"begin": 2744,
									"end": 2749,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2726,
									"end": 2750,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 2726,
									"end": 2750,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2726,
									"end": 2750,
									"name": "tag",
									"source": 6,
									"value": "89"
								},
								{
									"begin": 2726,
									"end": 2750,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2719,
									"end": 2724,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2716,
									"end": 2751,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 2706,
									"end": 2769,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "90"
								},
								{
									"begin": 2706,
									"end": 2769,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2765,
									"end": 2766,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2762,
									"end": 2763,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2755,
									"end": 2767,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 2706,
									"end": 2769,
									"name": "tag",
									"source": 6,
									"value": "90"
								},
								{
									"begin": 2706,
									"end": 2769,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2653,
									"end": 2775,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2653,
									"end": 2775,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2838,
									"end": 2843,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2869,
									"end": 2875,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2863,
									"end": 2876,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2854,
									"end": 2876,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2854,
									"end": 2876,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2885,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "92"
								},
								{
									"begin": 2912,
									"end": 2917,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2885,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 2885,
									"end": 2918,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2885,
									"end": 2918,
									"name": "tag",
									"source": 6,
									"value": "92"
								},
								{
									"begin": 2885,
									"end": 2918,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2781,
									"end": 2924,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2930,
									"end": 4096,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 2930,
									"end": 4096,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3047,
									"end": 3053,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3055,
									"end": 3061,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3063,
									"end": 3069,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3071,
									"end": 3077,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3120,
									"end": 3123,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 3108,
									"end": 3117,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3099,
									"end": 3106,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 3091,
									"end": 3124,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 3088,
									"end": 3208,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3088,
									"end": 3208,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "94"
								},
								{
									"begin": 3088,
									"end": 3208,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3127,
									"end": 3206,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "95"
								},
								{
									"begin": 3127,
									"end": 3206,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 3127,
									"end": 3206,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3127,
									"end": 3206,
									"name": "tag",
									"source": 6,
									"value": "95"
								},
								{
									"begin": 3127,
									"end": 3206,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3088,
									"end": 3208,
									"name": "tag",
									"source": 6,
									"value": "94"
								},
								{
									"begin": 3088,
									"end": 3208,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3268,
									"end": 3269,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3257,
									"end": 3266,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3253,
									"end": 3270,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3247,
									"end": 3271,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3298,
									"end": 3316,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3290,
									"end": 3296,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3287,
									"end": 3317,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 3284,
									"end": 3401,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3284,
									"end": 3401,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 3284,
									"end": 3401,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3320,
									"end": 3399,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "97"
								},
								{
									"begin": 3320,
									"end": 3399,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3320,
									"end": 3399,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3320,
									"end": 3399,
									"name": "tag",
									"source": 6,
									"value": "97"
								},
								{
									"begin": 3320,
									"end": 3399,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3284,
									"end": 3401,
									"name": "tag",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 3284,
									"end": 3401,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3425,
									"end": 3499,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "98"
								},
								{
									"begin": 3491,
									"end": 3498,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 3482,
									"end": 3488,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3471,
									"end": 3480,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 3467,
									"end": 3489,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3425,
									"end": 3499,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 3425,
									"end": 3499,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3425,
									"end": 3499,
									"name": "tag",
									"source": 6,
									"value": "98"
								},
								{
									"begin": 3425,
									"end": 3499,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3415,
									"end": 3499,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 3415,
									"end": 3499,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3218,
									"end": 3509,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3569,
									"end": 3571,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3558,
									"end": 3567,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3554,
									"end": 3572,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3548,
									"end": 3573,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3600,
									"end": 3618,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3592,
									"end": 3598,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3589,
									"end": 3619,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 3586,
									"end": 3703,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3586,
									"end": 3703,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 3586,
									"end": 3703,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3622,
									"end": 3701,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 3622,
									"end": 3701,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3622,
									"end": 3701,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3622,
									"end": 3701,
									"name": "tag",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 3622,
									"end": 3701,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3586,
									"end": 3703,
									"name": "tag",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 3586,
									"end": 3703,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3727,
									"end": 3801,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "101"
								},
								{
									"begin": 3793,
									"end": 3800,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 3784,
									"end": 3790,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3773,
									"end": 3782,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 3769,
									"end": 3791,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3727,
									"end": 3801,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 3727,
									"end": 3801,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3727,
									"end": 3801,
									"name": "tag",
									"source": 6,
									"value": "101"
								},
								{
									"begin": 3727,
									"end": 3801,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3717,
									"end": 3801,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 3717,
									"end": 3801,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3519,
									"end": 3811,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3850,
									"end": 3852,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3876,
									"end": 3940,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "102"
								},
								{
									"begin": 3932,
									"end": 3939,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 3923,
									"end": 3929,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3912,
									"end": 3921,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 3908,
									"end": 3930,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3876,
									"end": 3940,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 3876,
									"end": 3940,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3876,
									"end": 3940,
									"name": "tag",
									"source": 6,
									"value": "102"
								},
								{
									"begin": 3876,
									"end": 3940,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3866,
									"end": 3940,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3866,
									"end": 3940,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3821,
									"end": 3950,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3989,
									"end": 3991,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 4015,
									"end": 4079,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "103"
								},
								{
									"begin": 4071,
									"end": 4078,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 4062,
									"end": 4068,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4051,
									"end": 4060,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 4047,
									"end": 4069,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4015,
									"end": 4079,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 4015,
									"end": 4079,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4015,
									"end": 4079,
									"name": "tag",
									"source": 6,
									"value": "103"
								},
								{
									"begin": 4015,
									"end": 4079,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4005,
									"end": 4079,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4005,
									"end": 4079,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3960,
									"end": 4089,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2930,
									"end": 4096,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2930,
									"end": 4096,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 2930,
									"end": 4096,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2930,
									"end": 4096,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 2930,
									"end": 4096,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2930,
									"end": 4096,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2930,
									"end": 4096,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2930,
									"end": 4096,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4102,
									"end": 4201,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 4102,
									"end": 4201,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4154,
									"end": 4160,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4188,
									"end": 4193,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4182,
									"end": 4194,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 4172,
									"end": 4194,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4172,
									"end": 4194,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4102,
									"end": 4201,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4102,
									"end": 4201,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4102,
									"end": 4201,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4102,
									"end": 4201,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4207,
									"end": 4387,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 4207,
									"end": 4387,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4255,
									"end": 4332,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4252,
									"end": 4253,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4245,
									"end": 4333,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4352,
									"end": 4356,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 4349,
									"end": 4350,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 4342,
									"end": 4357,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4376,
									"end": 4380,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 4373,
									"end": 4374,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4366,
									"end": 4381,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 4393,
									"end": 4713,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 4393,
									"end": 4713,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4437,
									"end": 4443,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4474,
									"end": 4475,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 4468,
									"end": 4472,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4464,
									"end": 4476,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 4454,
									"end": 4476,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4454,
									"end": 4476,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4521,
									"end": 4522,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 4515,
									"end": 4519,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4511,
									"end": 4523,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4542,
									"end": 4560,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4532,
									"end": 4613,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "107"
								},
								{
									"begin": 4532,
									"end": 4613,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4598,
									"end": 4602,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 4590,
									"end": 4596,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4586,
									"end": 4603,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4576,
									"end": 4603,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4576,
									"end": 4603,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4532,
									"end": 4613,
									"name": "tag",
									"source": 6,
									"value": "107"
								},
								{
									"begin": 4532,
									"end": 4613,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4660,
									"end": 4662,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4652,
									"end": 4658,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4649,
									"end": 4663,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 4629,
									"end": 4647,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4626,
									"end": 4664,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 4623,
									"end": 4707,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "108"
								},
								{
									"begin": 4623,
									"end": 4707,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4679,
									"end": 4697,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "109"
								},
								{
									"begin": 4679,
									"end": 4697,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 4679,
									"end": 4697,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4679,
									"end": 4697,
									"name": "tag",
									"source": 6,
									"value": "109"
								},
								{
									"begin": 4679,
									"end": 4697,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4623,
									"end": 4707,
									"name": "tag",
									"source": 6,
									"value": "108"
								},
								{
									"begin": 4623,
									"end": 4707,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4444,
									"end": 4713,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4393,
									"end": 4713,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4393,
									"end": 4713,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4393,
									"end": 4713,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4393,
									"end": 4713,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4719,
									"end": 4860,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 4719,
									"end": 4860,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4768,
									"end": 4772,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4791,
									"end": 4794,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4783,
									"end": 4794,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4783,
									"end": 4794,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4814,
									"end": 4817,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4811,
									"end": 4812,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4804,
									"end": 4818,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4848,
									"end": 4852,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4845,
									"end": 4846,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4835,
									"end": 4853,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 4827,
									"end": 4853,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4827,
									"end": 4853,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4719,
									"end": 4860,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4719,
									"end": 4860,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4719,
									"end": 4860,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4719,
									"end": 4860,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4866,
									"end": 4959,
									"name": "tag",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 4866,
									"end": 4959,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4903,
									"end": 4909,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4950,
									"end": 4952,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4945,
									"end": 4947,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 4938,
									"end": 4943,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4934,
									"end": 4948,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4930,
									"end": 4953,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 4920,
									"end": 4953,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4920,
									"end": 4953,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4866,
									"end": 4959,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4866,
									"end": 4959,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4866,
									"end": 4959,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4866,
									"end": 4959,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4965,
									"end": 5072,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 4965,
									"end": 5072,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5009,
									"end": 5017,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5059,
									"end": 5064,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5053,
									"end": 5057,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5049,
									"end": 5065,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 5028,
									"end": 5065,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5028,
									"end": 5065,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4965,
									"end": 5072,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4965,
									"end": 5072,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4965,
									"end": 5072,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4965,
									"end": 5072,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4965,
									"end": 5072,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5078,
									"end": 5471,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 5078,
									"end": 5471,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5147,
									"end": 5153,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5197,
									"end": 5198,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 5185,
									"end": 5195,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5181,
									"end": 5199,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 5220,
									"end": 5317,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "114"
								},
								{
									"begin": 5250,
									"end": 5316,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5239,
									"end": 5248,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5220,
									"end": 5317,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 5220,
									"end": 5317,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5220,
									"end": 5317,
									"name": "tag",
									"source": 6,
									"value": "114"
								},
								{
									"begin": 5220,
									"end": 5317,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5338,
									"end": 5377,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "115"
								},
								{
									"begin": 5368,
									"end": 5376,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 5357,
									"end": 5366,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5338,
									"end": 5377,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 5338,
									"end": 5377,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5338,
									"end": 5377,
									"name": "tag",
									"source": 6,
									"value": "115"
								},
								{
									"begin": 5338,
									"end": 5377,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5326,
									"end": 5377,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 5326,
									"end": 5377,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5410,
									"end": 5414,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 5406,
									"end": 5415,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 5399,
									"end": 5404,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5395,
									"end": 5416,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5386,
									"end": 5416,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 5386,
									"end": 5416,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5459,
									"end": 5463,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 5449,
									"end": 5457,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 5445,
									"end": 5464,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5438,
									"end": 5443,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5435,
									"end": 5465,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 5425,
									"end": 5465,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 5425,
									"end": 5465,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5154,
									"end": 5471,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5154,
									"end": 5471,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5078,
									"end": 5471,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 5078,
									"end": 5471,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 5078,
									"end": 5471,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5078,
									"end": 5471,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5078,
									"end": 5471,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5078,
									"end": 5471,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5477,
									"end": 5537,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 5477,
									"end": 5537,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5505,
									"end": 5508,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5526,
									"end": 5531,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5519,
									"end": 5531,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5519,
									"end": 5531,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5477,
									"end": 5537,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5477,
									"end": 5537,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5477,
									"end": 5537,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5477,
									"end": 5537,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5543,
									"end": 5685,
									"name": "tag",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 5543,
									"end": 5685,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5593,
									"end": 5602,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5626,
									"end": 5679,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "118"
								},
								{
									"begin": 5644,
									"end": 5678,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "119"
								},
								{
									"begin": 5653,
									"end": 5677,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "120"
								},
								{
									"begin": 5671,
									"end": 5676,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5653,
									"end": 5677,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 5653,
									"end": 5677,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5653,
									"end": 5677,
									"name": "tag",
									"source": 6,
									"value": "120"
								},
								{
									"begin": 5653,
									"end": 5677,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5644,
									"end": 5678,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 5644,
									"end": 5678,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5644,
									"end": 5678,
									"name": "tag",
									"source": 6,
									"value": "119"
								},
								{
									"begin": 5644,
									"end": 5678,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5626,
									"end": 5679,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 5626,
									"end": 5679,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5626,
									"end": 5679,
									"name": "tag",
									"source": 6,
									"value": "118"
								},
								{
									"begin": 5626,
									"end": 5679,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5613,
									"end": 5679,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5613,
									"end": 5679,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5543,
									"end": 5685,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5543,
									"end": 5685,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5543,
									"end": 5685,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5543,
									"end": 5685,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5691,
									"end": 5766,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 5691,
									"end": 5766,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5734,
									"end": 5737,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5755,
									"end": 5760,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5748,
									"end": 5760,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5748,
									"end": 5760,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5691,
									"end": 5766,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5691,
									"end": 5766,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5691,
									"end": 5766,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5691,
									"end": 5766,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5772,
									"end": 6041,
									"name": "tag",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 5772,
									"end": 6041,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5882,
									"end": 5921,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "123"
								},
								{
									"begin": 5913,
									"end": 5920,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5882,
									"end": 5921,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 5882,
									"end": 5921,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5882,
									"end": 5921,
									"name": "tag",
									"source": 6,
									"value": "123"
								},
								{
									"begin": 5882,
									"end": 5921,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5943,
									"end": 6034,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "124"
								},
								{
									"begin": 5992,
									"end": 6033,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "125"
								},
								{
									"begin": 6016,
									"end": 6032,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5992,
									"end": 6033,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 5992,
									"end": 6033,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5992,
									"end": 6033,
									"name": "tag",
									"source": 6,
									"value": "125"
								},
								{
									"begin": 5992,
									"end": 6033,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5984,
									"end": 5990,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5977,
									"end": 5981,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5971,
									"end": 5982,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 5943,
									"end": 6034,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 5943,
									"end": 6034,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5943,
									"end": 6034,
									"name": "tag",
									"source": 6,
									"value": "124"
								},
								{
									"begin": 5943,
									"end": 6034,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5937,
									"end": 5941,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5930,
									"end": 6035,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 5848,
									"end": 6041,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5772,
									"end": 6041,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5772,
									"end": 6041,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5772,
									"end": 6041,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5772,
									"end": 6041,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6047,
									"end": 6120,
									"name": "tag",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 6047,
									"end": 6120,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6092,
									"end": 6095,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6113,
									"end": 6114,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6106,
									"end": 6114,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6106,
									"end": 6114,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6047,
									"end": 6120,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6047,
									"end": 6120,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6126,
									"end": 6315,
									"name": "tag",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 6126,
									"end": 6315,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6203,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "128"
								},
								{
									"begin": 6203,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 6203,
									"end": 6235,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6203,
									"end": 6235,
									"name": "tag",
									"source": 6,
									"value": "128"
								},
								{
									"begin": 6203,
									"end": 6235,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6244,
									"end": 6309,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "129"
								},
								{
									"begin": 6302,
									"end": 6308,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6294,
									"end": 6300,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6288,
									"end": 6292,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6244,
									"end": 6309,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 6244,
									"end": 6309,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6244,
									"end": 6309,
									"name": "tag",
									"source": 6,
									"value": "129"
								},
								{
									"begin": 6244,
									"end": 6309,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6179,
									"end": 6315,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6126,
									"end": 6315,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6126,
									"end": 6315,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6126,
									"end": 6315,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6321,
									"end": 6507,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 6321,
									"end": 6507,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6381,
									"end": 6501,
									"name": "tag",
									"source": 6,
									"value": "131"
								},
								{
									"begin": 6381,
									"end": 6501,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6398,
									"end": 6401,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6391,
									"end": 6396,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6388,
									"end": 6402,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 6381,
									"end": 6501,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6381,
									"end": 6501,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "133"
								},
								{
									"begin": 6381,
									"end": 6501,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6452,
									"end": 6491,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "134"
								},
								{
									"begin": 6489,
									"end": 6490,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6482,
									"end": 6487,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6452,
									"end": 6491,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 6452,
									"end": 6491,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6452,
									"end": 6491,
									"name": "tag",
									"source": 6,
									"value": "134"
								},
								{
									"begin": 6452,
									"end": 6491,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6425,
									"end": 6426,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 6418,
									"end": 6423,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6414,
									"end": 6427,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6405,
									"end": 6427,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6405,
									"end": 6427,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6381,
									"end": 6501,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "131"
								},
								{
									"begin": 6381,
									"end": 6501,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6381,
									"end": 6501,
									"name": "tag",
									"source": 6,
									"value": "133"
								},
								{
									"begin": 6381,
									"end": 6501,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6321,
									"end": 6507,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6321,
									"end": 6507,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6321,
									"end": 6507,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6513,
									"end": 7056,
									"name": "tag",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 6513,
									"end": 7056,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6614,
									"end": 6616,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 6609,
									"end": 6612,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6606,
									"end": 6617,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 6603,
									"end": 7049,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6603,
									"end": 7049,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "136"
								},
								{
									"begin": 6603,
									"end": 7049,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6648,
									"end": 6686,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "137"
								},
								{
									"begin": 6680,
									"end": 6685,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6648,
									"end": 6686,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 6648,
									"end": 6686,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6648,
									"end": 6686,
									"name": "tag",
									"source": 6,
									"value": "137"
								},
								{
									"begin": 6648,
									"end": 6686,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6732,
									"end": 6761,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "138"
								},
								{
									"begin": 6750,
									"end": 6760,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6732,
									"end": 6761,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 6732,
									"end": 6761,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6732,
									"end": 6761,
									"name": "tag",
									"source": 6,
									"value": "138"
								},
								{
									"begin": 6732,
									"end": 6761,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6722,
									"end": 6730,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6718,
									"end": 6762,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6915,
									"end": 6917,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 6903,
									"end": 6913,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 6900,
									"end": 6918,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 6897,
									"end": 6946,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6897,
									"end": 6946,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "139"
								},
								{
									"begin": 6897,
									"end": 6946,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6936,
									"end": 6944,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6921,
									"end": 6944,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6921,
									"end": 6944,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6897,
									"end": 6946,
									"name": "tag",
									"source": 6,
									"value": "139"
								},
								{
									"begin": 6897,
									"end": 6946,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6959,
									"end": 7039,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "140"
								},
								{
									"begin": 7015,
									"end": 7037,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "141"
								},
								{
									"begin": 7033,
									"end": 7036,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 7015,
									"end": 7037,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 7015,
									"end": 7037,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7015,
									"end": 7037,
									"name": "tag",
									"source": 6,
									"value": "141"
								},
								{
									"begin": 7015,
									"end": 7037,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7005,
									"end": 7013,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7001,
									"end": 7038,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6988,
									"end": 6999,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6959,
									"end": 7039,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 6959,
									"end": 7039,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6959,
									"end": 7039,
									"name": "tag",
									"source": 6,
									"value": "140"
								},
								{
									"begin": 6959,
									"end": 7039,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6618,
									"end": 7049,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6618,
									"end": 7049,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6603,
									"end": 7049,
									"name": "tag",
									"source": 6,
									"value": "136"
								},
								{
									"begin": 6603,
									"end": 7049,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6513,
									"end": 7056,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6513,
									"end": 7056,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6513,
									"end": 7056,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6513,
									"end": 7056,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7062,
									"end": 7179,
									"name": "tag",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 7062,
									"end": 7179,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7116,
									"end": 7124,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7166,
									"end": 7171,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7160,
									"end": 7164,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7156,
									"end": 7172,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 7135,
									"end": 7172,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7135,
									"end": 7172,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7062,
									"end": 7179,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 7062,
									"end": 7179,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7062,
									"end": 7179,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7062,
									"end": 7179,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7062,
									"end": 7179,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7185,
									"end": 7354,
									"name": "tag",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 7185,
									"end": 7354,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7229,
									"end": 7235,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7262,
									"end": 7313,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "144"
								},
								{
									"begin": 7310,
									"end": 7311,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7306,
									"end": 7312,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 7298,
									"end": 7303,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 7295,
									"end": 7296,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 7291,
									"end": 7304,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 7262,
									"end": 7313,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 7262,
									"end": 7313,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7262,
									"end": 7313,
									"name": "tag",
									"source": 6,
									"value": "144"
								},
								{
									"begin": 7262,
									"end": 7313,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7258,
									"end": 7314,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 7343,
									"end": 7347,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 7337,
									"end": 7341,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7333,
									"end": 7348,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 7323,
									"end": 7348,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7323,
									"end": 7348,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7236,
									"end": 7354,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7185,
									"end": 7354,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 7185,
									"end": 7354,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7185,
									"end": 7354,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7185,
									"end": 7354,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7185,
									"end": 7354,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7359,
									"end": 7654,
									"name": "tag",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 7359,
									"end": 7654,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7435,
									"end": 7439,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7581,
									"end": 7610,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "146"
								},
								{
									"begin": 7606,
									"end": 7609,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7600,
									"end": 7604,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7581,
									"end": 7610,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 7581,
									"end": 7610,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7581,
									"end": 7610,
									"name": "tag",
									"source": 6,
									"value": "146"
								},
								{
									"begin": 7581,
									"end": 7610,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7573,
									"end": 7610,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7573,
									"end": 7610,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7643,
									"end": 7646,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 7636,
									"end": 7647,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 7630,
									"end": 7634,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7627,
									"end": 7648,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 7619,
									"end": 7648,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7619,
									"end": 7648,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7359,
									"end": 7654,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 7359,
									"end": 7654,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7359,
									"end": 7654,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7359,
									"end": 7654,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7359,
									"end": 7654,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7659,
									"end": 9054,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 7659,
									"end": 9054,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7776,
									"end": 7813,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "148"
								},
								{
									"begin": 7809,
									"end": 7812,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7776,
									"end": 7813,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 7776,
									"end": 7813,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7776,
									"end": 7813,
									"name": "tag",
									"source": 6,
									"value": "148"
								},
								{
									"begin": 7776,
									"end": 7813,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7878,
									"end": 7896,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7870,
									"end": 7876,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7867,
									"end": 7897,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 7864,
									"end": 7920,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 7864,
									"end": 7920,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "149"
								},
								{
									"begin": 7864,
									"end": 7920,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7900,
									"end": 7918,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "150"
								},
								{
									"begin": 7900,
									"end": 7918,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 7900,
									"end": 7918,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7900,
									"end": 7918,
									"name": "tag",
									"source": 6,
									"value": "150"
								},
								{
									"begin": 7900,
									"end": 7918,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7864,
									"end": 7920,
									"name": "tag",
									"source": 6,
									"value": "149"
								},
								{
									"begin": 7864,
									"end": 7920,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7944,
									"end": 7982,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "151"
								},
								{
									"begin": 7976,
									"end": 7980,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7970,
									"end": 7981,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 7944,
									"end": 7982,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 7944,
									"end": 7982,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7944,
									"end": 7982,
									"name": "tag",
									"source": 6,
									"value": "151"
								},
								{
									"begin": 7944,
									"end": 7982,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8029,
									"end": 8096,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "152"
								},
								{
									"begin": 8089,
									"end": 8095,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8081,
									"end": 8087,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8075,
									"end": 8079,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 8029,
									"end": 8096,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 8029,
									"end": 8096,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8029,
									"end": 8096,
									"name": "tag",
									"source": 6,
									"value": "152"
								},
								{
									"begin": 8029,
									"end": 8096,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8123,
									"end": 8124,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 8147,
									"end": 8151,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 8134,
									"end": 8151,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 8134,
									"end": 8151,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8179,
									"end": 8181,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 8171,
									"end": 8177,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 8168,
									"end": 8182,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 8196,
									"end": 8197,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 8191,
									"end": 8809,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 8191,
									"end": 8809,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 8191,
									"end": 8809,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "154"
								},
								{
									"begin": 8191,
									"end": 8809,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 8853,
									"end": 8854,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 8870,
									"end": 8876,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8867,
									"end": 8944,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 8867,
									"end": 8944,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "155"
								},
								{
									"begin": 8867,
									"end": 8944,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 8919,
									"end": 8928,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8914,
									"end": 8917,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 8910,
									"end": 8929,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8904,
									"end": 8930,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 8895,
									"end": 8930,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 8895,
									"end": 8930,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8867,
									"end": 8944,
									"name": "tag",
									"source": 6,
									"value": "155"
								},
								{
									"begin": 8867,
									"end": 8944,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8970,
									"end": 9037,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "156"
								},
								{
									"begin": 9030,
									"end": 9036,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 9023,
									"end": 9028,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8970,
									"end": 9037,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 8970,
									"end": 9037,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8970,
									"end": 9037,
									"name": "tag",
									"source": 6,
									"value": "156"
								},
								{
									"begin": 8970,
									"end": 9037,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8964,
									"end": 8968,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 8957,
									"end": 9038,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 8826,
									"end": 9048,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8161,
									"end": 9048,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "153"
								},
								{
									"begin": 8161,
									"end": 9048,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8191,
									"end": 8809,
									"name": "tag",
									"source": 6,
									"value": "154"
								},
								{
									"begin": 8191,
									"end": 8809,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8243,
									"end": 8247,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 8239,
									"end": 8248,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 8231,
									"end": 8237,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8227,
									"end": 8249,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 8277,
									"end": 8314,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "157"
								},
								{
									"begin": 8309,
									"end": 8313,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 8277,
									"end": 8314,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 8277,
									"end": 8314,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8277,
									"end": 8314,
									"name": "tag",
									"source": 6,
									"value": "157"
								},
								{
									"begin": 8277,
									"end": 8314,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8336,
									"end": 8337,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 8350,
									"end": 8558,
									"name": "tag",
									"source": 6,
									"value": "158"
								},
								{
									"begin": 8350,
									"end": 8558,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8364,
									"end": 8371,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8361,
									"end": 8362,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 8358,
									"end": 8372,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 8350,
									"end": 8558,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 8350,
									"end": 8558,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "160"
								},
								{
									"begin": 8350,
									"end": 8558,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 8443,
									"end": 8452,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8438,
									"end": 8441,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 8434,
									"end": 8453,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8428,
									"end": 8454,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 8420,
									"end": 8426,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8413,
									"end": 8455,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 8494,
									"end": 8495,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 8486,
									"end": 8492,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8482,
									"end": 8496,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8472,
									"end": 8496,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 8472,
									"end": 8496,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8541,
									"end": 8543,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 8530,
									"end": 8539,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 8526,
									"end": 8544,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8513,
									"end": 8544,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 8513,
									"end": 8544,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8387,
									"end": 8391,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 8384,
									"end": 8385,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 8380,
									"end": 8392,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8375,
									"end": 8392,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 8375,
									"end": 8392,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8350,
									"end": 8558,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "158"
								},
								{
									"begin": 8350,
									"end": 8558,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8350,
									"end": 8558,
									"name": "tag",
									"source": 6,
									"value": "160"
								},
								{
									"begin": 8350,
									"end": 8558,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8586,
									"end": 8592,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 8577,
									"end": 8584,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 8574,
									"end": 8593,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 8571,
									"end": 8750,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 8571,
									"end": 8750,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "161"
								},
								{
									"begin": 8571,
									"end": 8750,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 8644,
									"end": 8653,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8639,
									"end": 8642,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 8635,
									"end": 8654,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8629,
									"end": 8655,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 8687,
									"end": 8735,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "162"
								},
								{
									"begin": 8729,
									"end": 8733,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 8721,
									"end": 8727,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 8717,
									"end": 8734,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 8706,
									"end": 8715,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8687,
									"end": 8735,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 8687,
									"end": 8735,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8687,
									"end": 8735,
									"name": "tag",
									"source": 6,
									"value": "162"
								},
								{
									"begin": 8687,
									"end": 8735,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8679,
									"end": 8685,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 8672,
									"end": 8736,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 8594,
									"end": 8750,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8571,
									"end": 8750,
									"name": "tag",
									"source": 6,
									"value": "161"
								},
								{
									"begin": 8571,
									"end": 8750,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8796,
									"end": 8797,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 8792,
									"end": 8793,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 8784,
									"end": 8790,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 8780,
									"end": 8794,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 8776,
									"end": 8798,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8770,
									"end": 8774,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 8763,
									"end": 8799,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 8198,
									"end": 8809,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8198,
									"end": 8809,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8198,
									"end": 8809,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8161,
									"end": 9048,
									"name": "tag",
									"source": 6,
									"value": "153"
								},
								{
									"begin": 8161,
									"end": 9048,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8161,
									"end": 9048,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7751,
									"end": 9054,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7751,
									"end": 9054,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7751,
									"end": 9054,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7659,
									"end": 9054,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7659,
									"end": 9054,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7659,
									"end": 9054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9060,
									"end": 9229,
									"name": "tag",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 9060,
									"end": 9229,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9144,
									"end": 9155,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9178,
									"end": 9184,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9173,
									"end": 9176,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9166,
									"end": 9185,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 9218,
									"end": 9222,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 9213,
									"end": 9216,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9209,
									"end": 9223,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9194,
									"end": 9223,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9194,
									"end": 9223,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9060,
									"end": 9229,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 9060,
									"end": 9229,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 9060,
									"end": 9229,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9060,
									"end": 9229,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9060,
									"end": 9229,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9235,
									"end": 9459,
									"name": "tag",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 9235,
									"end": 9459,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9375,
									"end": 9409,
									"name": "PUSH",
									"source": 6,
									"value": "456C2070726563696F206E6F20707565646520736572206D656E6F7220717565"
								},
								{
									"begin": 9371,
									"end": 9372,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9363,
									"end": 9369,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9359,
									"end": 9373,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9352,
									"end": 9410,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 9444,
									"end": 9451,
									"name": "PUSH",
									"source": 6,
									"value": "206365726F000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9439,
									"end": 9441,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 9431,
									"end": 9437,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9427,
									"end": 9442,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9420,
									"end": 9452,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 9235,
									"end": 9459,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9235,
									"end": 9459,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9465,
									"end": 9831,
									"name": "tag",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 9465,
									"end": 9831,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9607,
									"end": 9610,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9628,
									"end": 9695,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "166"
								},
								{
									"begin": 9692,
									"end": 9694,
									"name": "PUSH",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 9687,
									"end": 9690,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 9628,
									"end": 9695,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 9628,
									"end": 9695,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9628,
									"end": 9695,
									"name": "tag",
									"source": 6,
									"value": "166"
								},
								{
									"begin": 9628,
									"end": 9695,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9621,
									"end": 9695,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 9621,
									"end": 9695,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9704,
									"end": 9797,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "167"
								},
								{
									"begin": 9793,
									"end": 9796,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9704,
									"end": 9797,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 9704,
									"end": 9797,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9704,
									"end": 9797,
									"name": "tag",
									"source": 6,
									"value": "167"
								},
								{
									"begin": 9704,
									"end": 9797,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9822,
									"end": 9824,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 9817,
									"end": 9820,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9813,
									"end": 9825,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9806,
									"end": 9825,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9806,
									"end": 9825,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9465,
									"end": 9831,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 9465,
									"end": 9831,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9465,
									"end": 9831,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9465,
									"end": 9831,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9837,
									"end": 10256,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 9837,
									"end": 10256,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10003,
									"end": 10007,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 10041,
									"end": 10043,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 10030,
									"end": 10039,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 10026,
									"end": 10044,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 10018,
									"end": 10044,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 10018,
									"end": 10044,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10090,
									"end": 10099,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 10084,
									"end": 10088,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 10080,
									"end": 10100,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 10076,
									"end": 10077,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 10065,
									"end": 10074,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 10061,
									"end": 10078,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 10054,
									"end": 10101,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 10118,
									"end": 10249,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "169"
								},
								{
									"begin": 10244,
									"end": 10248,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 10118,
									"end": 10249,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 10118,
									"end": 10249,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10118,
									"end": 10249,
									"name": "tag",
									"source": 6,
									"value": "169"
								},
								{
									"begin": 10118,
									"end": 10249,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10110,
									"end": 10249,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 10110,
									"end": 10249,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9837,
									"end": 10256,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 9837,
									"end": 10256,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9837,
									"end": 10256,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9837,
									"end": 10256,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10262,
									"end": 10496,
									"name": "tag",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 10262,
									"end": 10496,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10402,
									"end": 10436,
									"name": "PUSH",
									"source": 6,
									"value": "456C206D6178696D6F20646520746F6B656E73206E6F20707565646520736572"
								},
								{
									"begin": 10398,
									"end": 10399,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 10390,
									"end": 10396,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 10386,
									"end": 10400,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 10379,
									"end": 10437,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 10471,
									"end": 10488,
									"name": "PUSH",
									"source": 6,
									"value": "206D656E6F7220717565206365726F0000000000000000000000000000000000"
								},
								{
									"begin": 10466,
									"end": 10468,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 10458,
									"end": 10464,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 10454,
									"end": 10469,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 10447,
									"end": 10489,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 10262,
									"end": 10496,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10262,
									"end": 10496,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10502,
									"end": 10868,
									"name": "tag",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 10502,
									"end": 10868,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10644,
									"end": 10647,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 10665,
									"end": 10732,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "172"
								},
								{
									"begin": 10729,
									"end": 10731,
									"name": "PUSH",
									"source": 6,
									"value": "2F"
								},
								{
									"begin": 10724,
									"end": 10727,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 10665,
									"end": 10732,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 10665,
									"end": 10732,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10665,
									"end": 10732,
									"name": "tag",
									"source": 6,
									"value": "172"
								},
								{
									"begin": 10665,
									"end": 10732,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10658,
									"end": 10732,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 10658,
									"end": 10732,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10741,
									"end": 10834,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "173"
								},
								{
									"begin": 10830,
									"end": 10833,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 10741,
									"end": 10834,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 10741,
									"end": 10834,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10741,
									"end": 10834,
									"name": "tag",
									"source": 6,
									"value": "173"
								},
								{
									"begin": 10741,
									"end": 10834,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10859,
									"end": 10861,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 10854,
									"end": 10857,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 10850,
									"end": 10862,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 10843,
									"end": 10862,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 10843,
									"end": 10862,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10502,
									"end": 10868,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 10502,
									"end": 10868,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 10502,
									"end": 10868,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10502,
									"end": 10868,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10874,
									"end": 11293,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 10874,
									"end": 11293,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 11040,
									"end": 11044,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 11078,
									"end": 11080,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 11067,
									"end": 11076,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 11063,
									"end": 11081,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 11055,
									"end": 11081,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 11055,
									"end": 11081,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 11127,
									"end": 11136,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 11121,
									"end": 11125,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 11117,
									"end": 11137,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 11113,
									"end": 11114,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 11102,
									"end": 11111,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 11098,
									"end": 11115,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 11091,
									"end": 11138,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 11155,
									"end": 11286,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "175"
								},
								{
									"begin": 11281,
									"end": 11285,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 11155,
									"end": 11286,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 11155,
									"end": 11286,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 11155,
									"end": 11286,
									"name": "tag",
									"source": 6,
									"value": "175"
								},
								{
									"begin": 11155,
									"end": 11286,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 11147,
									"end": 11286,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 11147,
									"end": 11286,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10874,
									"end": 11293,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 10874,
									"end": 11293,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 10874,
									"end": 11293,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10874,
									"end": 11293,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 212,
									"end": 2401,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 212,
									"end": 2401,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 212,
									"end": 2401,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 212,
									"end": 2401,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 212,
									"end": 2401,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 212,
									"end": 2401,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 212,
									"end": 2401,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 212,
									"end": 2401,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 212,
									"end": 2401,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 212,
									"end": 2401,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 212,
									"end": 2401,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 212,
									"end": 2401,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 212,
									"end": 2401,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 212,
									"end": 2401,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 212,
									"end": 2401,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 212,
									"end": 2401,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 212,
									"end": 2401,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205ab7ef6e7f051f8d188607657d134dbad202205c2cb5432cf75ae3b44d51ef6264736f6c634300081d0033",
									".code": [
										{
											"begin": 212,
											"end": 2401,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "PUSH",
											"source": 0,
											"value": "9DC29FAC"
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "PUSH",
											"source": 0,
											"value": "9DC29FAC"
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "PUSH",
											"source": 0,
											"value": "B2BDFA7B"
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "PUSH",
											"source": 0,
											"value": "E8315742"
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "PUSH",
											"source": 0,
											"value": "7FF9B596"
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "PUSH",
											"source": 0,
											"value": "8D75FE05"
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "PUSH",
											"source": 0,
											"value": "4B94F50E"
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "PUSH",
											"source": 0,
											"value": "6ABCDED1"
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 212,
											"end": 2401,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1224,
											"end": 1743,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1224,
											"end": 1743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1224,
											"end": 1743,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1224,
											"end": 1743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1743,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1743,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1224,
											"end": 1743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1224,
											"end": 1743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1743,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1224,
											"end": 1743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1224,
											"end": 1743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1743,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1224,
											"end": 1743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1743,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2239,
											"end": 2317,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2239,
											"end": 2317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2239,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2239,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2239,
											"end": 2317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2239,
											"end": 2317,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2239,
											"end": 2317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2239,
											"end": 2317,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2239,
											"end": 2317,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2239,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2239,
											"end": 2317,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2239,
											"end": 2317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2239,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2239,
											"end": 2317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2239,
											"end": 2317,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2239,
											"end": 2317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2239,
											"end": 2317,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2239,
											"end": 2317,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2239,
											"end": 2317,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2239,
											"end": 2317,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2239,
											"end": 2317,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2239,
											"end": 2317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2239,
											"end": 2317,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2323,
											"end": 2398,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2323,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2323,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2323,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2323,
											"end": 2398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2323,
											"end": 2398,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2323,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2323,
											"end": 2398,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2323,
											"end": 2398,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2323,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2323,
											"end": 2398,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2323,
											"end": 2398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2323,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2323,
											"end": 2398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2323,
											"end": 2398,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2323,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2323,
											"end": 2398,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2323,
											"end": 2398,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2323,
											"end": 2398,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2323,
											"end": 2398,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2323,
											"end": 2398,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2323,
											"end": 2398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2323,
											"end": 2398,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 253,
											"end": 288,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 253,
											"end": 288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 253,
											"end": 288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 253,
											"end": 288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 253,
											"end": 288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 253,
											"end": 288,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 253,
											"end": 288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 253,
											"end": 288,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 253,
											"end": 288,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 253,
											"end": 288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 253,
											"end": 288,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 253,
											"end": 288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 253,
											"end": 288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 253,
											"end": 288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 253,
											"end": 288,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 253,
											"end": 288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 253,
											"end": 288,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 253,
											"end": 288,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 253,
											"end": 288,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 253,
											"end": 288,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 253,
											"end": 288,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 253,
											"end": 288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 253,
											"end": 288,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 475,
											"end": 502,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 475,
											"end": 502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 475,
											"end": 502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 475,
											"end": 502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 475,
											"end": 502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 475,
											"end": 502,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 475,
											"end": 502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 475,
											"end": 502,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 475,
											"end": 502,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 475,
											"end": 502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 475,
											"end": 502,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 475,
											"end": 502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 475,
											"end": 502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 475,
											"end": 502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 475,
											"end": 502,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 475,
											"end": 502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 475,
											"end": 502,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 475,
											"end": 502,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 475,
											"end": 502,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 475,
											"end": 502,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 475,
											"end": 502,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 475,
											"end": 502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 475,
											"end": 502,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1751,
											"end": 2231,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1751,
											"end": 2231,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1751,
											"end": 2231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1751,
											"end": 2231,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1751,
											"end": 2231,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1751,
											"end": 2231,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1751,
											"end": 2231,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1751,
											"end": 2231,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1751,
											"end": 2231,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1751,
											"end": 2231,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1751,
											"end": 2231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1751,
											"end": 2231,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1751,
											"end": 2231,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1751,
											"end": 2231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1751,
											"end": 2231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1751,
											"end": 2231,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1751,
											"end": 2231,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1751,
											"end": 2231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1751,
											"end": 2231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1751,
											"end": 2231,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1751,
											"end": 2231,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1751,
											"end": 2231,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 551,
											"end": 572,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 551,
											"end": 572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 551,
											"end": 572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 551,
											"end": 572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 551,
											"end": 572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 551,
											"end": 572,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 551,
											"end": 572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 551,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 551,
											"end": 572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 551,
											"end": 572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 551,
											"end": 572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 551,
											"end": 572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 551,
											"end": 572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 551,
											"end": 572,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 551,
											"end": 572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 551,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 551,
											"end": 572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 551,
											"end": 572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 551,
											"end": 572,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 551,
											"end": 572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 551,
											"end": 572,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 370,
											"end": 404,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 370,
											"end": 404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 370,
											"end": 404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 370,
											"end": 404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 370,
											"end": 404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 370,
											"end": 404,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 370,
											"end": 404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 370,
											"end": 404,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 370,
											"end": 404,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 370,
											"end": 404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 370,
											"end": 404,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 370,
											"end": 404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 370,
											"end": 404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 370,
											"end": 404,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 370,
											"end": 404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 370,
											"end": 404,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 370,
											"end": 404,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 370,
											"end": 404,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 404,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 370,
											"end": 404,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 370,
											"end": 404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 370,
											"end": 404,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4052,
											"end": 4056,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4068,
											"end": 4081,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 4084,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 4084,
											"end": 4096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4068,
											"end": 4096,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4068,
											"end": 4096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 4115,
											"end": 4120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4122,
											"end": 4129,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 4106,
											"end": 4137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4154,
											"end": 4158,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2882,
											"end": 2889,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2920,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2920,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4848,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4860,
											"end": 4875,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 4878,
											"end": 4888,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 4878,
											"end": 4890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4860,
											"end": 4890,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4860,
											"end": 4890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 4916,
											"end": 4920,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4922,
											"end": 4929,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4931,
											"end": 4936,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 4900,
											"end": 4937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 4957,
											"end": 4961,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4963,
											"end": 4965,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4972,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 4947,
											"end": 4973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4990,
											"end": 4994,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2737,
											"end": 2742,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2763,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1224,
											"end": 1743,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1224,
											"end": 1743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1011,
											"end": 1017,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1011,
											"end": 1017,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1011,
											"end": 1017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1011,
											"end": 1017,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1011,
											"end": 1017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1011,
											"end": 1017,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1011,
											"end": 1017,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1011,
											"end": 1017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1011,
											"end": 1017,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1011,
											"end": 1017,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1011,
											"end": 1017,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1008,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 990,
											"end": 1049,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1049,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 990,
											"end": 1049,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1049,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 990,
											"end": 1049,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1049,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1049,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 990,
											"end": 1049,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 990,
											"end": 1049,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 990,
											"end": 1049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1049,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 990,
											"end": 1049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1049,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 990,
											"end": 1049,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1049,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1049,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1049,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1049,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1049,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1049,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 990,
											"end": 1049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1408,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1388,
											"end": 1409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1388,
											"end": 1409,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1395,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1388,
											"end": 1409,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1409,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1380,
											"end": 1447,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1380,
											"end": 1447,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1380,
											"end": 1447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1447,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1380,
											"end": 1447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1380,
											"end": 1447,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1380,
											"end": 1447,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1380,
											"end": 1447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1380,
											"end": 1447,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1380,
											"end": 1447,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1380,
											"end": 1447,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1380,
											"end": 1447,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1380,
											"end": 1447,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1380,
											"end": 1447,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1380,
											"end": 1447,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1380,
											"end": 1447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1447,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1380,
											"end": 1447,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1380,
											"end": 1447,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1380,
											"end": 1447,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1380,
											"end": 1447,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1380,
											"end": 1447,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1380,
											"end": 1447,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1380,
											"end": 1447,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1567,
											"end": 1576,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1551,
											"end": 1565,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1538,
											"end": 1550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1538,
											"end": 1550,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1538,
											"end": 1565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1538,
											"end": 1565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1538,
											"end": 1565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1538,
											"end": 1565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1538,
											"end": 1565,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1538,
											"end": 1565,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1538,
											"end": 1565,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1538,
											"end": 1576,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1538,
											"end": 1576,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1612,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1530,
											"end": 1612,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1530,
											"end": 1612,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1530,
											"end": 1612,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1612,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1530,
											"end": 1612,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1612,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1530,
											"end": 1612,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1612,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1530,
											"end": 1612,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1612,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1530,
											"end": 1612,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1530,
											"end": 1612,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1612,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1612,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1612,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1612,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1612,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1612,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1530,
											"end": 1612,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1640,
											"end": 1654,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1624,
											"end": 1636,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1624,
											"end": 1636,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1624,
											"end": 1654,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1624,
											"end": 1654,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1624,
											"end": 1654,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1624,
											"end": 1654,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1624,
											"end": 1654,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1624,
											"end": 1654,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1624,
											"end": 1654,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1624,
											"end": 1654,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1624,
											"end": 1654,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1624,
											"end": 1654,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1624,
											"end": 1654,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1624,
											"end": 1654,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1624,
											"end": 1654,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1624,
											"end": 1654,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1624,
											"end": 1654,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1624,
											"end": 1654,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1624,
											"end": 1654,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1705,
											"end": 1735,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1711,
											"end": 1718,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1720,
											"end": 1734,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1705,
											"end": 1710,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1705,
											"end": 1735,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1705,
											"end": 1735,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1705,
											"end": 1735,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2239,
											"end": 2317,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2239,
											"end": 2317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2287,
											"end": 2294,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2305,
											"end": 2315,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2298,
											"end": 2315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2298,
											"end": 2315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2239,
											"end": 2317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2239,
											"end": 2317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2323,
											"end": 2398,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2323,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2370,
											"end": 2377,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2386,
											"end": 2395,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2379,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2379,
											"end": 2395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2323,
											"end": 2398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2323,
											"end": 2398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3050,
											"end": 3057,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3085,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3086,
											"end": 3093,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 253,
											"end": 288,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 253,
											"end": 288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 253,
											"end": 288,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 253,
											"end": 288,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 253,
											"end": 288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 475,
											"end": 502,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 475,
											"end": 502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 475,
											"end": 502,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 475,
											"end": 502,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 475,
											"end": 502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 475,
											"end": 502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1751,
											"end": 2231,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1751,
											"end": 2231,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1011,
											"end": 1017,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1011,
											"end": 1017,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1011,
											"end": 1017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1011,
											"end": 1017,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1011,
											"end": 1017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1011,
											"end": 1017,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1011,
											"end": 1017,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1011,
											"end": 1017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1011,
											"end": 1017,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1011,
											"end": 1017,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1011,
											"end": 1017,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1008,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 990,
											"end": 1049,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1049,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 990,
											"end": 1049,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1049,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 990,
											"end": 1049,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1049,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1049,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 990,
											"end": 1049,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 990,
											"end": 1049,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 990,
											"end": 1049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1049,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 990,
											"end": 1049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1049,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 990,
											"end": 1049,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1049,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1049,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1049,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1049,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1049,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1049,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 990,
											"end": 1049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 1935,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1915,
											"end": 1936,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1915,
											"end": 1936,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1915,
											"end": 1922,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1915,
											"end": 1936,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1915,
											"end": 1936,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1915,
											"end": 1936,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1907,
											"end": 1974,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1907,
											"end": 1974,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1907,
											"end": 1974,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1907,
											"end": 1974,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1907,
											"end": 1974,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1907,
											"end": 1974,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1907,
											"end": 1974,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1907,
											"end": 1974,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1907,
											"end": 1974,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1907,
											"end": 1974,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1907,
											"end": 1974,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1907,
											"end": 1974,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1907,
											"end": 1974,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1907,
											"end": 1974,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1907,
											"end": 1974,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1907,
											"end": 1974,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1907,
											"end": 1974,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1907,
											"end": 1974,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1907,
											"end": 1974,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1907,
											"end": 1974,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1907,
											"end": 1974,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1907,
											"end": 1974,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1907,
											"end": 1974,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1907,
											"end": 1974,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2064,
											"end": 2080,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2064,
											"end": 2082,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2142,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2056,
											"end": 2142,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2142,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2056,
											"end": 2142,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2142,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2056,
											"end": 2142,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2142,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2142,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2056,
											"end": 2142,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2142,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2056,
											"end": 2142,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2142,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 2056,
											"end": 2142,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2142,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2056,
											"end": 2142,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2142,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2056,
											"end": 2142,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2142,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2142,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2142,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2142,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2142,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2142,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2056,
											"end": 2142,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2191,
											"end": 2223,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2197,
											"end": 2204,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2206,
											"end": 2222,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2191,
											"end": 2196,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2191,
											"end": 2223,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2191,
											"end": 2223,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2191,
											"end": 2223,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1751,
											"end": 2231,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1751,
											"end": 2231,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1751,
											"end": 2231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3365,
											"end": 3369,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3394,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 3397,
											"end": 3407,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3397,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3381,
											"end": 3409,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3381,
											"end": 3409,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 3429,
											"end": 3434,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3436,
											"end": 3438,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3440,
											"end": 3445,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 3419,
											"end": 3446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3463,
											"end": 3467,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 551,
											"end": 572,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 551,
											"end": 572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 551,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 551,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 551,
											"end": 572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 551,
											"end": 572,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 551,
											"end": 572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 551,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 551,
											"end": 572,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 551,
											"end": 572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 551,
											"end": 572,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 551,
											"end": 572,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 551,
											"end": 572,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 551,
											"end": 572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 551,
											"end": 572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3650,
											"end": 3655,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3664,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3665,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 370,
											"end": 404,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 370,
											"end": 404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 370,
											"end": 404,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 370,
											"end": 404,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 370,
											"end": 404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 8800,
											"end": 8805,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8807,
											"end": 8814,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8816,
											"end": 8821,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8823,
											"end": 8827,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8791,
											"end": 8799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 8791,
											"end": 8828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10495,
											"end": 10519,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 10532,
											"end": 10537,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10539,
											"end": 10546,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10522,
											"end": 10531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 10522,
											"end": 10547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10495,
											"end": 10547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10495,
											"end": 10547,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10580,
											"end": 10597,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10561,
											"end": 10577,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10561,
											"end": 10597,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10641,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10617,
											"end": 10633,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10617,
											"end": 10641,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10695,
											"end": 10702,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10704,
											"end": 10720,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10722,
											"end": 10727,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 10668,
											"end": 10728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 10793,
											"end": 10798,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10800,
											"end": 10807,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10833,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10809,
											"end": 10825,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10809,
											"end": 10833,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10835,
											"end": 10840,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 10784,
											"end": 10841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10485,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5473,
											"end": 5474,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5457,
											"end": 5461,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5525,
											"end": 5526,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 5498,
											"end": 5528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5566,
											"end": 5567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5554,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5621,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 5591,
											"end": 5623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 5651,
											"end": 5655,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5657,
											"end": 5659,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5661,
											"end": 5666,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5650,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 5643,
											"end": 5667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7529,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7509,
											"end": 7516,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7582,
											"end": 7583,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 7553,
											"end": 7585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 7621,
											"end": 7622,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7625,
											"end": 7632,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7634,
											"end": 7639,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7605,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 7605,
											"end": 7640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7439,
											"end": 7647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8054,
											"end": 8055,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8035,
											"end": 8042,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8106,
											"end": 8107,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 8079,
											"end": 8109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 8164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 8137,
											"end": 8144,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8154,
											"end": 8155,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8158,
											"end": 8163,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 8136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 8129,
											"end": 8164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 8164,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 8129,
											"end": 8164,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7965,
											"end": 8171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9811,
											"end": 9812,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9794,
											"end": 9799,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9865,
											"end": 9866,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 9836,
											"end": 9868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9912,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9892,
											"end": 9899,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9964,
											"end": 9965,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 9936,
											"end": 9967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10017,
											"end": 10022,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 9998,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9999,
											"end": 10004,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10013,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10036,
											"end": 10045,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10082,
											"end": 10089,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10075,
											"end": 10080,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10091,
											"end": 10096,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 10066,
											"end": 10097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6094,
											"end": 6095,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6082,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6230,
											"end": 6235,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 6214,
											"end": 6235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6285,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6298,
											"end": 6302,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6303,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6335,
											"end": 6340,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6332,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6392,
											"end": 6396,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6398,
											"end": 6409,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6411,
											"end": 6416,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 6367,
											"end": 6417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6584,
											"end": 6589,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6581,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6561,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6562,
											"end": 6566,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6252,
											"end": 6614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6642,
											"end": 6643,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6630,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6807,
											"end": 6812,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7019,
											"end": 7024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7011,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7012,
											"end": 7014,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7079,
											"end": 7081,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7077,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7083,
											"end": 7088,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 7064,
											"end": 7089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 6
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4395,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4384,
											"end": 4389,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4380,
											"end": 4396,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 4491,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "tag",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4486,
											"end": 4489,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4479,
											"end": 4514,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4615,
											"end": 4619,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4655,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4728,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4715,
											"end": 4732,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4706,
											"end": 4712,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 4666,
											"end": 4733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "tag",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4805,
											"end": 4811,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4856,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 4851,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4833,
											"end": 4840,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4829,
											"end": 4852,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4825,
											"end": 4857,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 4860,
											"end": 4939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "tag",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "tag",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 4981,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 5050,
											"end": 5057,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5030,
											"end": 5039,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5026,
											"end": 5048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 5005,
											"end": 5058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "tag",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4951,
											"end": 5068,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 5186,
											"end": 5191,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 5168,
											"end": 5192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "tag",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5163,
											"end": 5166,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5156,
											"end": 5193,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5298,
											"end": 5302,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5336,
											"end": 5338,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5325,
											"end": 5334,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5321,
											"end": 5339,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5313,
											"end": 5339,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5313,
											"end": 5339,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 5417,
											"end": 5418,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5406,
											"end": 5415,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5402,
											"end": 5419,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5393,
											"end": 5399,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 5349,
											"end": 5420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "tag",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5501,
											"end": 5507,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5509,
											"end": 5515,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5558,
											"end": 5560,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5546,
											"end": 5555,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5537,
											"end": 5544,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5533,
											"end": 5556,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5529,
											"end": 5561,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 5564,
											"end": 5643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "tag",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "tag",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5685,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 5754,
											"end": 5761,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5745,
											"end": 5751,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5734,
											"end": 5743,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5730,
											"end": 5752,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 5709,
											"end": 5762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "tag",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5699,
											"end": 5762,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5699,
											"end": 5762,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5655,
											"end": 5772,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5811,
											"end": 5813,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 5882,
											"end": 5889,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5873,
											"end": 5879,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5862,
											"end": 5871,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5858,
											"end": 5880,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 5837,
											"end": 5890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "tag",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5827,
											"end": 5890,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5827,
											"end": 5890,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5782,
											"end": 5900,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5433,
											"end": 5907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5913,
											"end": 6093,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 5913,
											"end": 6093,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5961,
											"end": 6038,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5958,
											"end": 5959,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5951,
											"end": 6039,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6058,
											"end": 6062,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 6055,
											"end": 6056,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6048,
											"end": 6063,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6082,
											"end": 6086,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6079,
											"end": 6080,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6072,
											"end": 6087,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6143,
											"end": 6149,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6180,
											"end": 6181,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 6174,
											"end": 6178,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6170,
											"end": 6182,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6160,
											"end": 6182,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6160,
											"end": 6182,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6227,
											"end": 6228,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6221,
											"end": 6225,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6217,
											"end": 6229,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6248,
											"end": 6266,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6238,
											"end": 6319,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 6238,
											"end": 6319,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6308,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 6296,
											"end": 6302,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6292,
											"end": 6309,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6282,
											"end": 6309,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6282,
											"end": 6309,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6238,
											"end": 6319,
											"name": "tag",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 6238,
											"end": 6319,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6366,
											"end": 6368,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6358,
											"end": 6364,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6355,
											"end": 6369,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6335,
											"end": 6353,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6332,
											"end": 6370,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6329,
											"end": 6413,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 6329,
											"end": 6413,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6385,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 6385,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 6385,
											"end": 6403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6385,
											"end": 6403,
											"name": "tag",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 6385,
											"end": 6403,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6329,
											"end": 6413,
											"name": "tag",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 6329,
											"end": 6413,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6150,
											"end": 6419,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6099,
											"end": 6419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6425,
											"end": 6601,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 6425,
											"end": 6601,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6565,
											"end": 6593,
											"name": "PUSH",
											"source": 6,
											"value": "536F6C6F207075656465206C6C616D617220656C206F776E6572000000000000"
										},
										{
											"begin": 6561,
											"end": 6562,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6553,
											"end": 6559,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6549,
											"end": 6563,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6542,
											"end": 6594,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6425,
											"end": 6601,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6425,
											"end": 6601,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6607,
											"end": 6973,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 6607,
											"end": 6973,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6749,
											"end": 6752,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6770,
											"end": 6837,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 6834,
											"end": 6836,
											"name": "PUSH",
											"source": 6,
											"value": "1A"
										},
										{
											"begin": 6829,
											"end": 6832,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6770,
											"end": 6837,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 6770,
											"end": 6837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6770,
											"end": 6837,
											"name": "tag",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 6770,
											"end": 6837,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6763,
											"end": 6837,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6763,
											"end": 6837,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6846,
											"end": 6939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 6935,
											"end": 6938,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6846,
											"end": 6939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 6846,
											"end": 6939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6846,
											"end": 6939,
											"name": "tag",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 6846,
											"end": 6939,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6964,
											"end": 6966,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6959,
											"end": 6962,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6955,
											"end": 6967,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6948,
											"end": 6967,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6948,
											"end": 6967,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6607,
											"end": 6973,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6607,
											"end": 6973,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6607,
											"end": 6973,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6607,
											"end": 6973,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6979,
											"end": 7398,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 6979,
											"end": 7398,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7145,
											"end": 7149,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7183,
											"end": 7185,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7172,
											"end": 7181,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7168,
											"end": 7186,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7160,
											"end": 7186,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7160,
											"end": 7186,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7232,
											"end": 7241,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7226,
											"end": 7230,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7222,
											"end": 7242,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7218,
											"end": 7219,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7207,
											"end": 7216,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7203,
											"end": 7220,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7196,
											"end": 7243,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7260,
											"end": 7391,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 7386,
											"end": 7390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7260,
											"end": 7391,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 7260,
											"end": 7391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7260,
											"end": 7391,
											"name": "tag",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 7260,
											"end": 7391,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7252,
											"end": 7391,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7252,
											"end": 7391,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6979,
											"end": 7398,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6979,
											"end": 7398,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6979,
											"end": 7398,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6979,
											"end": 7398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7404,
											"end": 7624,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 7404,
											"end": 7624,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7544,
											"end": 7578,
											"name": "PUSH",
											"source": 6,
											"value": "4C6120646972656363696F6E2064657374696E6F206E6F2065732076616C6964"
										},
										{
											"begin": 7540,
											"end": 7541,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7532,
											"end": 7538,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7528,
											"end": 7542,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7521,
											"end": 7579,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7613,
											"end": 7616,
											"name": "PUSH",
											"source": 6,
											"value": "6100000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7608,
											"end": 7610,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7600,
											"end": 7606,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7596,
											"end": 7611,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7589,
											"end": 7617,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7404,
											"end": 7624,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7404,
											"end": 7624,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7630,
											"end": 7996,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 7630,
											"end": 7996,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7772,
											"end": 7775,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7793,
											"end": 7860,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 7857,
											"end": 7859,
											"name": "PUSH",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 7852,
											"end": 7855,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7793,
											"end": 7860,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 7793,
											"end": 7860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7793,
											"end": 7860,
											"name": "tag",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 7793,
											"end": 7860,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7786,
											"end": 7860,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7786,
											"end": 7860,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7869,
											"end": 7962,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 7958,
											"end": 7961,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7869,
											"end": 7962,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 7869,
											"end": 7962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7869,
											"end": 7962,
											"name": "tag",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 7869,
											"end": 7962,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7987,
											"end": 7989,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7982,
											"end": 7985,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7978,
											"end": 7990,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7971,
											"end": 7990,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7971,
											"end": 7990,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7630,
											"end": 7996,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7630,
											"end": 7996,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7630,
											"end": 7996,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7630,
											"end": 7996,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8002,
											"end": 8421,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 8002,
											"end": 8421,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8168,
											"end": 8172,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8206,
											"end": 8208,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8195,
											"end": 8204,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8191,
											"end": 8209,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8183,
											"end": 8209,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8183,
											"end": 8209,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8255,
											"end": 8264,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8249,
											"end": 8253,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8245,
											"end": 8265,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8241,
											"end": 8242,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8230,
											"end": 8239,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8226,
											"end": 8243,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8219,
											"end": 8266,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8283,
											"end": 8414,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 8409,
											"end": 8413,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8283,
											"end": 8414,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 8283,
											"end": 8414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8283,
											"end": 8414,
											"name": "tag",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 8283,
											"end": 8414,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8275,
											"end": 8414,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8275,
											"end": 8414,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8002,
											"end": 8421,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8002,
											"end": 8421,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8002,
											"end": 8421,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8002,
											"end": 8421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8427,
											"end": 8607,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 8427,
											"end": 8607,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8475,
											"end": 8552,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8472,
											"end": 8473,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8465,
											"end": 8553,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8572,
											"end": 8576,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 8569,
											"end": 8570,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8562,
											"end": 8577,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8596,
											"end": 8600,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 8593,
											"end": 8594,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8586,
											"end": 8601,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8613,
											"end": 8804,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 8613,
											"end": 8804,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8653,
											"end": 8656,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8672,
											"end": 8692,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 8690,
											"end": 8691,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8672,
											"end": 8692,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 8672,
											"end": 8692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8672,
											"end": 8692,
											"name": "tag",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 8672,
											"end": 8692,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8667,
											"end": 8692,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8667,
											"end": 8692,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8706,
											"end": 8726,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 8724,
											"end": 8725,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8706,
											"end": 8726,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 8706,
											"end": 8726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8706,
											"end": 8726,
											"name": "tag",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 8706,
											"end": 8726,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8701,
											"end": 8726,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8701,
											"end": 8726,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8749,
											"end": 8750,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8746,
											"end": 8747,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8742,
											"end": 8751,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8735,
											"end": 8751,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8735,
											"end": 8751,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8770,
											"end": 8773,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8767,
											"end": 8768,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8764,
											"end": 8774,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 8761,
											"end": 8797,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8761,
											"end": 8797,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 8761,
											"end": 8797,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8777,
											"end": 8795,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 8777,
											"end": 8795,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 8777,
											"end": 8795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8777,
											"end": 8795,
											"name": "tag",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 8777,
											"end": 8795,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8761,
											"end": 8797,
											"name": "tag",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 8761,
											"end": 8797,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8613,
											"end": 8804,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8613,
											"end": 8804,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8613,
											"end": 8804,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8613,
											"end": 8804,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8613,
											"end": 8804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8810,
											"end": 8991,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 8810,
											"end": 8991,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8950,
											"end": 8983,
											"name": "PUSH",
											"source": 6,
											"value": "4E6F2073652070756564656E20656D69746972206D617320746F6B656E732100"
										},
										{
											"begin": 8946,
											"end": 8947,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8938,
											"end": 8944,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8934,
											"end": 8948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8927,
											"end": 8984,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8810,
											"end": 8991,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8810,
											"end": 8991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8997,
											"end": 9363,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 8997,
											"end": 9363,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9139,
											"end": 9142,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9160,
											"end": 9227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 9224,
											"end": 9226,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 9219,
											"end": 9222,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9160,
											"end": 9227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 9160,
											"end": 9227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9160,
											"end": 9227,
											"name": "tag",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 9160,
											"end": 9227,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9153,
											"end": 9227,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9153,
											"end": 9227,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9236,
											"end": 9329,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 9325,
											"end": 9328,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9236,
											"end": 9329,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 9236,
											"end": 9329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9236,
											"end": 9329,
											"name": "tag",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 9236,
											"end": 9329,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9354,
											"end": 9356,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9349,
											"end": 9352,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9345,
											"end": 9357,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9338,
											"end": 9357,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9338,
											"end": 9357,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8997,
											"end": 9363,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8997,
											"end": 9363,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8997,
											"end": 9363,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8997,
											"end": 9363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9369,
											"end": 9788,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 9369,
											"end": 9788,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9535,
											"end": 9539,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9573,
											"end": 9575,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9562,
											"end": 9571,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9558,
											"end": 9576,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9550,
											"end": 9576,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9550,
											"end": 9576,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9622,
											"end": 9631,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9616,
											"end": 9620,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9612,
											"end": 9632,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9608,
											"end": 9609,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9597,
											"end": 9606,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9593,
											"end": 9610,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9586,
											"end": 9633,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9781,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 9776,
											"end": 9780,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9781,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 9650,
											"end": 9781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9781,
											"name": "tag",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 9650,
											"end": 9781,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9642,
											"end": 9781,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9642,
											"end": 9781,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9369,
											"end": 9788,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9369,
											"end": 9788,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9369,
											"end": 9788,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9369,
											"end": 9788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9794,
											"end": 10036,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 9794,
											"end": 10036,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9934,
											"end": 9968,
											"name": "PUSH",
											"source": 6,
											"value": "4E6F20736520707565646520656C696D696E61722030206E6920756E206E756D"
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9922,
											"end": 9928,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9918,
											"end": 9932,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9911,
											"end": 9969,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10003,
											"end": 10028,
											"name": "PUSH",
											"source": 6,
											"value": "65726F206E6567617469766F20646520746F6B656E732E000000000000000000"
										},
										{
											"begin": 9998,
											"end": 10000,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9990,
											"end": 9996,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9986,
											"end": 10001,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9979,
											"end": 10029,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9794,
											"end": 10036,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9794,
											"end": 10036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10042,
											"end": 10408,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 10042,
											"end": 10408,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10184,
											"end": 10187,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10205,
											"end": 10272,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 10269,
											"end": 10271,
											"name": "PUSH",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 10264,
											"end": 10267,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10205,
											"end": 10272,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 10205,
											"end": 10272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10205,
											"end": 10272,
											"name": "tag",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 10205,
											"end": 10272,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10198,
											"end": 10272,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10198,
											"end": 10272,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10281,
											"end": 10374,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 10370,
											"end": 10373,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10281,
											"end": 10374,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 10281,
											"end": 10374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10281,
											"end": 10374,
											"name": "tag",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 10281,
											"end": 10374,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10399,
											"end": 10401,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10394,
											"end": 10397,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10390,
											"end": 10402,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10383,
											"end": 10402,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10383,
											"end": 10402,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10042,
											"end": 10408,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10042,
											"end": 10408,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10042,
											"end": 10408,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10042,
											"end": 10408,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10414,
											"end": 10833,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 10414,
											"end": 10833,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10580,
											"end": 10584,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10618,
											"end": 10620,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10607,
											"end": 10616,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10603,
											"end": 10621,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10595,
											"end": 10621,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10595,
											"end": 10621,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10667,
											"end": 10676,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10661,
											"end": 10665,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10657,
											"end": 10677,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10653,
											"end": 10654,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10642,
											"end": 10651,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10638,
											"end": 10655,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10631,
											"end": 10678,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10695,
											"end": 10826,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 10821,
											"end": 10825,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10695,
											"end": 10826,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 10695,
											"end": 10826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10695,
											"end": 10826,
											"name": "tag",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 10695,
											"end": 10826,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10687,
											"end": 10826,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10687,
											"end": 10826,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10414,
											"end": 10833,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10414,
											"end": 10833,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10414,
											"end": 10833,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10414,
											"end": 10833,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10839,
											"end": 11281,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 10839,
											"end": 11281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10988,
											"end": 10992,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11026,
											"end": 11028,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 11015,
											"end": 11024,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11011,
											"end": 11029,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11003,
											"end": 11029,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11003,
											"end": 11029,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11039,
											"end": 11110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 11107,
											"end": 11108,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11096,
											"end": 11105,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11092,
											"end": 11109,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11083,
											"end": 11089,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 11039,
											"end": 11110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 11039,
											"end": 11110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11039,
											"end": 11110,
											"name": "tag",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 11039,
											"end": 11110,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11120,
											"end": 11192,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 11188,
											"end": 11190,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11177,
											"end": 11186,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11173,
											"end": 11191,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11164,
											"end": 11170,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 11120,
											"end": 11192,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 11120,
											"end": 11192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11120,
											"end": 11192,
											"name": "tag",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 11120,
											"end": 11192,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11202,
											"end": 11274,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 11270,
											"end": 11272,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11259,
											"end": 11268,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11255,
											"end": 11273,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11246,
											"end": 11252,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11202,
											"end": 11274,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 11202,
											"end": 11274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11202,
											"end": 11274,
											"name": "tag",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 11202,
											"end": 11274,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10839,
											"end": 11281,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 10839,
											"end": 11281,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 10839,
											"end": 11281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10839,
											"end": 11281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10839,
											"end": 11281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10839,
											"end": 11281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10839,
											"end": 11281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"PRACTICA FINAL/VotingContract.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"_owner()": "b2bdfa7b",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address,uint256)": "9dc29fac",
							"decimals()": "313ce567",
							"getMaxTokens()": "6abcded1",
							"getTokenPrice()": "4b94f50e",
							"maxTokens()": "e8315742",
							"mint(address,uint256)": "40c10f19",
							"mintedTokens()": "8d75fe05",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"tokenPrice()": "7ff9b596",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_tokenPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxTokens\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destDir\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokensEliminados\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaxTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destDir\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokensEmitidos\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintedTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"PRACTICA FINAL/VotingContract.sol\":\"VotingContract\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"PRACTICA FINAL/VotingContract.sol\":{\"keccak256\":\"0xcc0a74b190cde1394d5b9cb9857f5c32bf9055ba3244d9102eb6eeb86181c192\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://4e722090e0f8413a9729f72923e30a4c2a81effedb06018da6e702ca26718f97\",\"dweb:/ipfs/QmRt6PvPe53CbJyYa1gZXSTrRdhFsMdrt2TXK4WSQ7euj7\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 313,
								"contract": "PRACTICA FINAL/VotingContract.sol:VotingContract",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 319,
								"contract": "PRACTICA FINAL/VotingContract.sol:VotingContract",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 321,
								"contract": "PRACTICA FINAL/VotingContract.sol:VotingContract",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 323,
								"contract": "PRACTICA FINAL/VotingContract.sol:VotingContract",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 325,
								"contract": "PRACTICA FINAL/VotingContract.sol:VotingContract",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 10,
								"contract": "PRACTICA FINAL/VotingContract.sol:VotingContract",
								"label": "mintedTokens",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 12,
								"contract": "PRACTICA FINAL/VotingContract.sol:VotingContract",
								"label": "_owner",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 313,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 319,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 321,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 323,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 325,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"PRACTICA FINAL/VotingContract.sol": {
				"ast": {
					"absolutePath": "PRACTICA FINAL/VotingContract.sol",
					"exportedSymbols": {
						"Context": [
							939
						],
						"ERC20": [
							805
						],
						"IERC20": [
							883
						],
						"IERC20Errors": [
							195
						],
						"IERC20Metadata": [
							909
						],
						"VotingContract": [
							153
						]
					},
					"id": 154,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 154,
							"sourceUnit": 806,
							"src": "100:108:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3,
										"name": "ERC20",
										"nameLocations": [
											"239:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 805,
										"src": "239:5:0"
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "239:5:0"
								}
							],
							"canonicalName": "VotingContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 153,
							"linearizedBaseContracts": [
								153,
								805,
								195,
								909,
								883,
								939
							],
							"name": "VotingContract",
							"nameLocation": "221:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "7ff9b596",
									"id": 6,
									"mutability": "immutable",
									"name": "tokenPrice",
									"nameLocation": "278:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 153,
									"src": "253:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 5,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "253:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e8315742",
									"id": 8,
									"mutability": "immutable",
									"name": "maxTokens",
									"nameLocation": "395:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 153,
									"src": "370:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 7,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "370:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8d75fe05",
									"id": 10,
									"mutability": "mutable",
									"name": "mintedTokens",
									"nameLocation": "490:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 153,
									"src": "475:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 9,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "475:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b2bdfa7b",
									"id": 12,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "566:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 153,
									"src": "551:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 11,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "551:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "693:257:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 30,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 28,
																"name": "_tokenPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "712:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 29,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "725:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "712:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "456c2070726563696f206e6f20707565646520736572206d656e6f7220717565206365726f",
															"id": 31,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "728:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6a6c01ec836a8333db641469830370640c16d66a01d78c4ea94d5b2ce3cbdeff",
																"typeString": "literal_string \"El precio no puede ser menor que cero\""
															},
															"value": "El precio no puede ser menor que cero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6a6c01ec836a8333db641469830370640c16d66a01d78c4ea94d5b2ce3cbdeff",
																"typeString": "literal_string \"El precio no puede ser menor que cero\""
															}
														],
														"id": 27,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "704:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "704:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 33,
												"nodeType": "ExpressionStatement",
												"src": "704:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 37,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 35,
																"name": "_maxTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "787:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 36,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "799:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "787:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "456c206d6178696d6f20646520746f6b656e73206e6f20707565646520736572206d656e6f7220717565206365726f",
															"id": 38,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "802:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e3deb8891861fc33e56f6ca4e0f0b1ebf88cbcc690d2390f61fcb463e2c54c75",
																"typeString": "literal_string \"El maximo de tokens no puede ser menor que cero\""
															},
															"value": "El maximo de tokens no puede ser menor que cero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e3deb8891861fc33e56f6ca4e0f0b1ebf88cbcc690d2390f61fcb463e2c54c75",
																"typeString": "literal_string \"El maximo de tokens no puede ser menor que cero\""
															}
														],
														"id": 34,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "779:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "779:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 40,
												"nodeType": "ExpressionStatement",
												"src": "779:73:0"
											},
											{
												"expression": {
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 41,
														"name": "tokenPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "863:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 42,
														"name": "_tokenPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "874:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "863:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 44,
												"nodeType": "ExpressionStatement",
												"src": "863:22:0"
											},
											{
												"expression": {
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 45,
														"name": "maxTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "896:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 46,
														"name": "_maxTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "906:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "896:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "896:20:0"
											},
											{
												"expression": {
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 49,
														"name": "mintedTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "928:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 50,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "941:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "928:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "928:14:0"
											}
										]
									},
									"id": 54,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 23,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 14,
													"src": "681:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 24,
													"name": "symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 16,
													"src": "686:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 25,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 22,
												"name": "ERC20",
												"nameLocations": [
													"675:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 805,
												"src": "675:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "675:18:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "607:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "593:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 13,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "593:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "627:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "613:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 15,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "613:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "_tokenPrice",
												"nameLocation": "643:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "635:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "_maxTokens",
												"nameLocation": "664:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "656:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 19,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "592:83:0"
									},
									"returnParameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "693:0:0"
									},
									"scope": 153,
									"src": "581:369:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 65,
										"nodeType": "Block",
										"src": "979:90:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 60,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 57,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "998:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 58,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1002:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "998:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 59,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 12,
																"src": "1011:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "998:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536f6c6f207075656465206c6c616d617220656c206f776e6572",
															"id": 61,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1020:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4ec76783f3894e67036af6919e25ed127fdc6f729f79865424eb8381f82d8d50",
																"typeString": "literal_string \"Solo puede llamar el owner\""
															},
															"value": "Solo puede llamar el owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4ec76783f3894e67036af6919e25ed127fdc6f729f79865424eb8381f82d8d50",
																"typeString": "literal_string \"Solo puede llamar el owner\""
															}
														],
														"id": 56,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "990:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "990:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 63,
												"nodeType": "ExpressionStatement",
												"src": "990:59:0"
											},
											{
												"id": 64,
												"nodeType": "PlaceholderStatement",
												"src": "1060:1:0"
											}
										]
									},
									"id": 66,
									"name": "onlyOwner",
									"nameLocation": "967:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "976:2:0"
									},
									"src": "958:111:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1299:444:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 81,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 76,
																"name": "destDir",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 68,
																"src": "1388:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 79,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1407:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 78,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1399:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 77,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1399:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 80,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1399:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1388:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c6120646972656363696f6e2064657374696e6f206e6f2065732076616c696461",
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1411:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a741e67d6dc9c74b39a03cacfe829cad0f05f603ef935636f3247bb18530cc63",
																"typeString": "literal_string \"La direccion destino no es valida\""
															},
															"value": "La direccion destino no es valida"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a741e67d6dc9c74b39a03cacfe829cad0f05f603ef935636f3247bb18530cc63",
																"typeString": "literal_string \"La direccion destino no es valida\""
															}
														],
														"id": 75,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1380:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1380:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 84,
												"nodeType": "ExpressionStatement",
												"src": "1380:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 90,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 88,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 86,
																	"name": "mintedTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 10,
																	"src": "1538:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 87,
																	"name": "tokensEmitidos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 70,
																	"src": "1551:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1538:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 89,
																"name": "maxTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 8,
																"src": "1567:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1538:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2073652070756564656e20656d69746972206d617320746f6b656e7321",
															"id": 91,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1578:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_336f12110b5c92494efba6968210650067826eac23d477ab2241ce7b6a14d97b",
																"typeString": "literal_string \"No se pueden emitir mas tokens!\""
															},
															"value": "No se pueden emitir mas tokens!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_336f12110b5c92494efba6968210650067826eac23d477ab2241ce7b6a14d97b",
																"typeString": "literal_string \"No se pueden emitir mas tokens!\""
															}
														],
														"id": 85,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1530:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1530:82:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 93,
												"nodeType": "ExpressionStatement",
												"src": "1530:82:0"
											},
											{
												"expression": {
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 94,
														"name": "mintedTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "1624:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 95,
														"name": "tokensEmitidos",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 70,
														"src": "1640:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1624:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 97,
												"nodeType": "ExpressionStatement",
												"src": "1624:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 99,
															"name": "destDir",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 68,
															"src": "1711:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 100,
															"name": "tokensEmitidos",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 70,
															"src": "1720:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 98,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 645,
														"src": "1705:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1705:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 102,
												"nodeType": "ExpressionStatement",
												"src": "1705:30:0"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 73,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 72,
												"name": "onlyOwner",
												"nameLocations": [
													"1289:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 66,
												"src": "1289:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1289:9:0"
										}
									],
									"name": "mint",
									"nameLocation": "1233:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "destDir",
												"nameLocation": "1246:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1238:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 67,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1238:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "tokensEmitidos",
												"nameLocation": "1263:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1255:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 69,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1237:41:0"
									},
									"returnParameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1299:0:0"
									},
									"scope": 153,
									"src": "1224:519:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 135,
										"nodeType": "Block",
										"src": "1826:405:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 114,
																"name": "destDir",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 106,
																"src": "1915:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 117,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1934:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 116,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1926:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 115,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1926:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 118,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1926:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1915:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c6120646972656363696f6e2064657374696e6f206e6f2065732076616c696461",
															"id": 120,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1938:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a741e67d6dc9c74b39a03cacfe829cad0f05f603ef935636f3247bb18530cc63",
																"typeString": "literal_string \"La direccion destino no es valida\""
															},
															"value": "La direccion destino no es valida"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a741e67d6dc9c74b39a03cacfe829cad0f05f603ef935636f3247bb18530cc63",
																"typeString": "literal_string \"La direccion destino no es valida\""
															}
														],
														"id": 113,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1907:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1907:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 122,
												"nodeType": "ExpressionStatement",
												"src": "1907:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 124,
																"name": "tokensEliminados",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 108,
																"src": "2064:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 125,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2081:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2064:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20736520707565646520656c696d696e61722030206e6920756e206e756d65726f206e6567617469766f20646520746f6b656e732e",
															"id": 127,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2084:57:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51de52eeb4deb82ff460c459daa1179bd1766e5f1ee051b554fcaf62cf6e33ea",
																"typeString": "literal_string \"No se puede eliminar 0 ni un numero negativo de tokens.\""
															},
															"value": "No se puede eliminar 0 ni un numero negativo de tokens."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51de52eeb4deb82ff460c459daa1179bd1766e5f1ee051b554fcaf62cf6e33ea",
																"typeString": "literal_string \"No se puede eliminar 0 ni un numero negativo de tokens.\""
															}
														],
														"id": 123,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2056:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2056:86:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 129,
												"nodeType": "ExpressionStatement",
												"src": "2056:86:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 131,
															"name": "destDir",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 106,
															"src": "2197:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 132,
															"name": "tokensEliminados",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "2206:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 130,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "2191:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2191:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "2191:32:0"
											}
										]
									},
									"functionSelector": "9dc29fac",
									"id": 136,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 111,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 110,
												"name": "onlyOwner",
												"nameLocations": [
													"1817:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 66,
												"src": "1817:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1817:9:0"
										}
									],
									"name": "burn",
									"nameLocation": "1760:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "destDir",
												"nameLocation": "1773:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "1765:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "tokensEliminados",
												"nameLocation": "1790:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "1782:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1782:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1764:43:0"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1826:0:0"
									},
									"scope": 153,
									"src": "1751:480:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 143,
										"nodeType": "Block",
										"src": "2296:21:0",
										"statements": [
											{
												"expression": {
													"id": 141,
													"name": "tokenPrice",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 6,
													"src": "2305:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 140,
												"id": 142,
												"nodeType": "Return",
												"src": "2298:17:0"
											}
										]
									},
									"functionSelector": "4b94f50e",
									"id": 144,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenPrice",
									"nameLocation": "2248:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2261:2:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "2287:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2287:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2286:9:0"
									},
									"scope": 153,
									"src": "2239:78:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 151,
										"nodeType": "Block",
										"src": "2378:20:0",
										"statements": [
											{
												"expression": {
													"id": 149,
													"name": "maxTokens",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "2386:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 148,
												"id": 150,
												"nodeType": "Return",
												"src": "2379:16:0"
											}
										]
									},
									"functionSelector": "6abcded1",
									"id": 152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMaxTokens",
									"nameLocation": "2332:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2344:2:0"
									},
									"returnParameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "2370:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2370:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2369:9:0"
									},
									"scope": 153,
									"src": "2323:75:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 154,
							"src": "212:2189:0",
							"usedErrors": [
								165,
								170,
								175,
								184,
								189,
								194
							],
							"usedEvents": [
								817,
								826
							]
						}
					],
					"src": "37:2364:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							290
						],
						"IERC20Errors": [
							195
						],
						"IERC721Errors": [
							243
						]
					},
					"id": 291,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 155,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 156,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 195,
							"linearizedBaseContracts": [
								195
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 157,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 165,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 166,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 170,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 171,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 175,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 184,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 185,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 189,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 194,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 291,
							"src": "280:1764:1",
							"usedErrors": [
								165,
								170,
								175,
								184,
								189,
								194
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 196,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 243,
							"linearizedBaseContracts": [
								243
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 201,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 206,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 215,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 220,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 225,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 226,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 232,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 237,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 242,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 242,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 291,
							"src": "2190:2092:1",
							"usedErrors": [
								201,
								206,
								215,
								220,
								225,
								232,
								237,
								242
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 244,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 290,
							"linearizedBaseContracts": [
								290
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 245,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 255,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 246,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 256,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 260,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 265,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 266,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 272,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 273,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 277,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 278,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 282,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 283,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 289,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 291,
							"src": "4430:2107:1",
							"usedErrors": [
								255,
								260,
								265,
								272,
								277,
								282,
								289
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							939
						],
						"ERC20": [
							805
						],
						"IERC20": [
							883
						],
						"IERC20Errors": [
							195
						],
						"IERC20Metadata": [
							909
						]
					},
					"id": 806,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 292,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 806,
							"sourceUnit": 884,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 883,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 296,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 806,
							"sourceUnit": 910,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 295,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 909,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 298,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 806,
							"sourceUnit": 940,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 297,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 939,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 300,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 806,
							"sourceUnit": 291,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 299,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 195,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 302,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 939,
										"src": "1133:7:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 304,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 883,
										"src": "1142:6:2"
									},
									"id": 305,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 306,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 909,
										"src": "1150:14:2"
									},
									"id": 307,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 308,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 195,
										"src": "1166:12:2"
									},
									"id": 309,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 301,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 805,
							"linearizedBaseContracts": [
								805,
								195,
								909,
								883,
								939
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 805,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 310,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 805,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 318,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 314,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 317,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 315,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 316,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 321,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 805,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 320,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 323,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 805,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 322,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 325,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 805,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 324,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 341,
										"nodeType": "Block",
										"src": "1638:57:2",
										"statements": [
											{
												"expression": {
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 333,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 323,
														"src": "1648:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 334,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 328,
														"src": "1656:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:2"
											},
											{
												"expression": {
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 337,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 325,
														"src": "1671:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 338,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "1681:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 340,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:2"
											}
										]
									},
									"documentation": {
										"id": 326,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 342,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "1594:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 327,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "1615:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 329,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:2"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:2"
									},
									"scope": 805,
									"src": "1582:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 350,
										"nodeType": "Block",
										"src": "1820:29:2",
										"statements": [
											{
												"expression": {
													"id": 348,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 323,
													"src": "1837:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 347,
												"id": 349,
												"nodeType": "Return",
												"src": "1830:12:2"
											}
										]
									},
									"documentation": {
										"id": 343,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:2"
									},
									"returnParameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "1805:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 345,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:2"
									},
									"scope": 805,
									"src": "1760:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 359,
										"nodeType": "Block",
										"src": "2024:31:2",
										"statements": [
											{
												"expression": {
													"id": 357,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 325,
													"src": "2041:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 356,
												"id": 358,
												"nodeType": "Return",
												"src": "2034:14:2"
											}
										]
									},
									"documentation": {
										"id": 352,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:2"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "2009:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 354,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:2"
									},
									"scope": 805,
									"src": "1962:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										908
									],
									"body": {
										"id": 368,
										"nodeType": "Block",
										"src": "2744:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 365,
												"id": 367,
												"nodeType": "Return",
												"src": "2754:9:2"
											}
										]
									},
									"documentation": {
										"id": 361,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:2"
									},
									"returnParameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2737:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 363,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:2"
									},
									"scope": 805,
									"src": "2688:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										832
									],
									"body": {
										"id": 377,
										"nodeType": "Block",
										"src": "2891:36:2",
										"statements": [
											{
												"expression": {
													"id": 375,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 321,
													"src": "2908:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 374,
												"id": 376,
												"nodeType": "Return",
												"src": "2901:19:2"
											}
										]
									},
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2776:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 378,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2839:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2850:2:2"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "2882:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2881:9:2"
									},
									"scope": 805,
									"src": "2830:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										840
									],
									"body": {
										"id": 390,
										"nodeType": "Block",
										"src": "3059:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 386,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 313,
														"src": "3076:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 388,
													"indexExpression": {
														"id": 387,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3086:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3076:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 385,
												"id": 389,
												"nodeType": "Return",
												"src": "3069:25:2"
											}
										]
									},
									"documentation": {
										"id": 379,
										"nodeType": "StructuredDocumentation",
										"src": "2933:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 391,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2994:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3012:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "3004:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3004:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3003:17:2"
									},
									"returnParameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "3050:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3050:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3049:9:2"
									},
									"scope": 805,
									"src": "2985:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										850
									],
									"body": {
										"id": 414,
										"nodeType": "Block",
										"src": "3371:103:2",
										"statements": [
											{
												"assignments": [
													402
												],
												"declarations": [
													{
														"constant": false,
														"id": 402,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3389:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 414,
														"src": "3381:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 401,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3381:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 405,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 403,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 921,
														"src": "3397:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3397:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3381:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 407,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "3429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 408,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "3436:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 409,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 406,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 535,
														"src": "3419:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3419:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 411,
												"nodeType": "ExpressionStatement",
												"src": "3419:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 412,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3463:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 400,
												"id": 413,
												"nodeType": "Return",
												"src": "3456:11:2"
											}
										]
									},
									"documentation": {
										"id": 392,
										"nodeType": "StructuredDocumentation",
										"src": "3107:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 415,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3305:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3322:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "3314:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3314:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3334:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "3326:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3326:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3313:27:2"
									},
									"returnParameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "3365:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 398,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3365:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3364:6:2"
									},
									"scope": 805,
									"src": "3296:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										860
									],
									"body": {
										"id": 431,
										"nodeType": "Block",
										"src": "3621:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 425,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 319,
															"src": "3638:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 427,
														"indexExpression": {
															"id": 426,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 418,
															"src": "3650:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3638:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 429,
													"indexExpression": {
														"id": 428,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "3657:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3638:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 424,
												"id": 430,
												"nodeType": "Return",
												"src": "3631:34:2"
											}
										]
									},
									"documentation": {
										"id": 416,
										"nodeType": "StructuredDocumentation",
										"src": "3480:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 432,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3541:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3559:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "3551:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3574:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "3566:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:32:2"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "3612:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3611:9:2"
									},
									"scope": 805,
									"src": "3532:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										870
									],
									"body": {
										"id": 455,
										"nodeType": "Block",
										"src": "4058:107:2",
										"statements": [
											{
												"assignments": [
													443
												],
												"declarations": [
													{
														"constant": false,
														"id": 443,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4076:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 455,
														"src": "4068:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 442,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4068:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 446,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 444,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 921,
														"src": "4084:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4084:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4068:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 448,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 443,
															"src": "4115:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 449,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "4122:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 450,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4131:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 447,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															696,
															756
														],
														"referencedDeclaration": 696,
														"src": "4106:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4106:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 452,
												"nodeType": "ExpressionStatement",
												"src": "4106:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4154:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 441,
												"id": 454,
												"nodeType": "Return",
												"src": "4147:11:2"
											}
										]
									},
									"documentation": {
										"id": 433,
										"nodeType": "StructuredDocumentation",
										"src": "3678:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3988:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4004:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "3996:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 434,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3996:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4021:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "4013:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3995:32:2"
									},
									"returnParameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "4052:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 439,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4052:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4051:6:2"
									},
									"scope": 805,
									"src": "3979:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										882
									],
									"body": {
										"id": 487,
										"nodeType": "Block",
										"src": "4850:151:2",
										"statements": [
											{
												"assignments": [
													469
												],
												"declarations": [
													{
														"constant": false,
														"id": 469,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4868:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 487,
														"src": "4860:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 468,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4860:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 472,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 470,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 921,
														"src": "4878:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4878:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4860:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "4916:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "4922:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4931:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 804,
														"src": "4900:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4900:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "4900:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 480,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "4957:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 481,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "4963:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 482,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4967:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 479,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 535,
														"src": "4947:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4947:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 484,
												"nodeType": "ExpressionStatement",
												"src": "4947:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4990:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 467,
												"id": 486,
												"nodeType": "Return",
												"src": "4983:11:2"
											}
										]
									},
									"documentation": {
										"id": 457,
										"nodeType": "StructuredDocumentation",
										"src": "4171:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 488,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4766:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4787:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "4779:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4779:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4801:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "4793:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4793:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4813:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "4805:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4805:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4778:41:2"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "4844:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 465,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4844:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4843:6:2"
									},
									"scope": 805,
									"src": "4757:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 534,
										"nodeType": "Block",
										"src": "5443:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 498,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "5457:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5473:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5465:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 499,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5465:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 502,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5465:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5457:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 512,
												"nodeType": "IfStatement",
												"src": "5453:86:2",
												"trueBody": {
													"id": 511,
													"nodeType": "Block",
													"src": "5477:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 507,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5525:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 506,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5517:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 505,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5517:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 508,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5517:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 504,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 170,
																	"src": "5498:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 509,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5498:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 510,
															"nodeType": "RevertStatement",
															"src": "5491:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 513,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 493,
														"src": "5552:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 516,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5566:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 515,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5558:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 514,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5558:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 517,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5558:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5552:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 527,
												"nodeType": "IfStatement",
												"src": "5548:86:2",
												"trueBody": {
													"id": 526,
													"nodeType": "Block",
													"src": "5570:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 522,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5620:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 521,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5612:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 520,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5612:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5612:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 519,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 175,
																	"src": "5591:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 524,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5591:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 525,
															"nodeType": "RevertStatement",
															"src": "5584:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 529,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 491,
															"src": "5651:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 530,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "5657:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 531,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 495,
															"src": "5661:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 528,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 612,
														"src": "5643:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5643:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 533,
												"nodeType": "ExpressionStatement",
												"src": "5643:24:2"
											}
										]
									},
									"documentation": {
										"id": 489,
										"nodeType": "StructuredDocumentation",
										"src": "5007:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 535,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5383:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5401:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "5393:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5393:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5415:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "5407:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5407:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5427:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "5419:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 494,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5419:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5392:41:2"
									},
									"returnParameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5443:0:2"
									},
									"scope": 805,
									"src": "5374:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 611,
										"nodeType": "Block",
										"src": "6064:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 545,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 538,
														"src": "6078:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 548,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6094:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6086:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 546,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6086:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 549,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6086:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6078:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "6252:362:2",
													"statements": [
														{
															"assignments": [
																557
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 557,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6274:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 582,
																	"src": "6266:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 556,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6266:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 561,
															"initialValue": {
																"baseExpression": {
																	"id": 558,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 313,
																	"src": "6288:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 560,
																"indexExpression": {
																	"id": 559,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 538,
																	"src": "6298:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6288:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6266:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 564,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 562,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 557,
																	"src": "6321:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 563,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 542,
																	"src": "6335:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6321:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 572,
															"nodeType": "IfStatement",
															"src": "6317:115:2",
															"trueBody": {
																"id": 571,
																"nodeType": "Block",
																"src": "6342:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 566,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 538,
																					"src": "6392:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 567,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 557,
																					"src": "6398:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 568,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 542,
																					"src": "6411:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 565,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 165,
																				"src": "6367:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 569,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6367:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 570,
																		"nodeType": "RevertStatement",
																		"src": "6360:57:2"
																	}
																]
															}
														},
														{
															"id": 581,
															"nodeType": "UncheckedBlock",
															"src": "6445:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 573,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 313,
																				"src": "6552:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 575,
																			"indexExpression": {
																				"id": 574,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 538,
																				"src": "6562:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6552:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 578,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 576,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 557,
																				"src": "6570:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 577,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 542,
																				"src": "6584:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6570:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6552:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 580,
																	"nodeType": "ExpressionStatement",
																	"src": "6552:37:2"
																}
															]
														}
													]
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "6074:540:2",
												"trueBody": {
													"id": 555,
													"nodeType": "Block",
													"src": "6098:148:2",
													"statements": [
														{
															"expression": {
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 551,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 321,
																	"src": "6214:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 552,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 542,
																	"src": "6230:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6214:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 554,
															"nodeType": "ExpressionStatement",
															"src": "6214:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 584,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 540,
														"src": "6628:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 587,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6642:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6634:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 585,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6634:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 588,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6634:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6628:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 603,
													"nodeType": "Block",
													"src": "6843:206:2",
													"statements": [
														{
															"id": 602,
															"nodeType": "UncheckedBlock",
															"src": "6857:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 600,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 596,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 313,
																				"src": "7002:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 598,
																			"indexExpression": {
																				"id": 597,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 540,
																				"src": "7012:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7002:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 599,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 542,
																			"src": "7019:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7002:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 601,
																	"nodeType": "ExpressionStatement",
																	"src": "7002:22:2"
																}
															]
														}
													]
												},
												"id": 604,
												"nodeType": "IfStatement",
												"src": "6624:425:2",
												"trueBody": {
													"id": 595,
													"nodeType": "Block",
													"src": "6646:191:2",
													"statements": [
														{
															"id": 594,
															"nodeType": "UncheckedBlock",
															"src": "6660:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 592,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 590,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 321,
																			"src": "6791:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 591,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 542,
																			"src": "6807:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6791:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 593,
																	"nodeType": "ExpressionStatement",
																	"src": "6791:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 606,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 538,
															"src": "7073:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 607,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "7079:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 608,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 542,
															"src": "7083:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 605,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 817,
														"src": "7064:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7064:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 610,
												"nodeType": "EmitStatement",
												"src": "7059:30:2"
											}
										]
									},
									"documentation": {
										"id": 536,
										"nodeType": "StructuredDocumentation",
										"src": "5680:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 612,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5998:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6014:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "6006:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6006:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6028:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "6020:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 539,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6020:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6040:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "6032:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 541,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6032:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6005:41:2"
									},
									"returnParameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6064:0:2"
									},
									"scope": 805,
									"src": "5989:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 644,
										"nodeType": "Block",
										"src": "7495:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 620,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "7509:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7528:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7520:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 621,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7520:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7520:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7509:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 634,
												"nodeType": "IfStatement",
												"src": "7505:91:2",
												"trueBody": {
													"id": 633,
													"nodeType": "Block",
													"src": "7532:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 629,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7582:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 628,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7574:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 627,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7574:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 630,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7574:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 626,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 175,
																	"src": "7553:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7553:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 632,
															"nodeType": "RevertStatement",
															"src": "7546:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7621:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7613:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 636,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7613:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7613:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 640,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "7625:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 641,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "7634:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 635,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 612,
														"src": "7605:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7605:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 643,
												"nodeType": "ExpressionStatement",
												"src": "7605:35:2"
											}
										]
									},
									"documentation": {
										"id": 613,
										"nodeType": "StructuredDocumentation",
										"src": "7102:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 645,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7448:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7462:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "7454:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7454:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7479:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "7471:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7471:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7453:32:2"
									},
									"returnParameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7495:0:2"
									},
									"scope": 805,
									"src": "7439:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 677,
										"nodeType": "Block",
										"src": "8021:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 653,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 648,
														"src": "8035:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 656,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8054:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 655,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8046:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 654,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8046:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 657,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8046:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8035:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 667,
												"nodeType": "IfStatement",
												"src": "8031:89:2",
												"trueBody": {
													"id": 666,
													"nodeType": "Block",
													"src": "8058:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 662,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8106:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 661,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8098:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 660,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8098:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 663,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8098:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 659,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 170,
																	"src": "8079:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 664,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8079:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 665,
															"nodeType": "RevertStatement",
															"src": "8072:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 669,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 648,
															"src": "8137:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 672,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8154:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 671,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8146:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 670,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8146:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 673,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8146:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 674,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "8158:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 668,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 612,
														"src": "8129:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8129:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 676,
												"nodeType": "ExpressionStatement",
												"src": "8129:35:2"
											}
										]
									},
									"documentation": {
										"id": 646,
										"nodeType": "StructuredDocumentation",
										"src": "7653:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 678,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7974:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7988:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "7980:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7980:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8005:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "7997:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7997:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7979:32:2"
									},
									"returnParameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8021:0:2"
									},
									"scope": 805,
									"src": "7965:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 695,
										"nodeType": "Block",
										"src": "8781:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 689,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 681,
															"src": "8800:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 690,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 683,
															"src": "8807:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 691,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "8816:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 692,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8823:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 688,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															696,
															756
														],
														"referencedDeclaration": 756,
														"src": "8791:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8791:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 694,
												"nodeType": "ExpressionStatement",
												"src": "8791:37:2"
											}
										]
									},
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "8177:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 696,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8733:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "8725:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8748:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "8740:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8740:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8765:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "8757:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8757:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8724:47:2"
									},
									"returnParameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8781:0:2"
									},
									"scope": 805,
									"src": "8707:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 755,
										"nodeType": "Block",
										"src": "9780:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 708,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 699,
														"src": "9794:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 711,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9811:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 710,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9803:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 709,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9803:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 712,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9803:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9794:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 722,
												"nodeType": "IfStatement",
												"src": "9790:89:2",
												"trueBody": {
													"id": 721,
													"nodeType": "Block",
													"src": "9815:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 717,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9865:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 716,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9857:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 715,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9857:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 718,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9857:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 714,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 189,
																	"src": "9836:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 719,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9836:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 720,
															"nodeType": "RevertStatement",
															"src": "9829:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 723,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 701,
														"src": "9892:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 726,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9911:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9903:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 724,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9903:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 727,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9903:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9892:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 737,
												"nodeType": "IfStatement",
												"src": "9888:90:2",
												"trueBody": {
													"id": 736,
													"nodeType": "Block",
													"src": "9915:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 732,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9964:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 731,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9956:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 730,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9956:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 733,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9956:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 729,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 194,
																	"src": "9936:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 734,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9936:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 735,
															"nodeType": "RevertStatement",
															"src": "9929:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 738,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 319,
																"src": "9987:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 741,
															"indexExpression": {
																"id": 739,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 699,
																"src": "9999:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9987:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 742,
														"indexExpression": {
															"id": 740,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 701,
															"src": "10006:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9987:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 743,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 703,
														"src": "10017:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9987:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 745,
												"nodeType": "ExpressionStatement",
												"src": "9987:35:2"
											},
											{
												"condition": {
													"id": 746,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 705,
													"src": "10036:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 754,
												"nodeType": "IfStatement",
												"src": "10032:76:2",
												"trueBody": {
													"id": 753,
													"nodeType": "Block",
													"src": "10047:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 748,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 699,
																		"src": "10075:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 749,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 701,
																		"src": "10082:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 750,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 703,
																		"src": "10091:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 747,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 826,
																	"src": "10066:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 751,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10066:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 752,
															"nodeType": "EmitStatement",
															"src": "10061:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "8841:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 756,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9691:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9708:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "9700:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9700:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9723:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "9715:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9715:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9740:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "9732:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 702,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9732:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9752:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "9747:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 704,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9747:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9699:63:2"
									},
									"returnParameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9780:0:2"
									},
									"scope": 805,
									"src": "9682:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 803,
										"nodeType": "Block",
										"src": "10485:387:2",
										"statements": [
											{
												"assignments": [
													767
												],
												"declarations": [
													{
														"constant": false,
														"id": 767,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10503:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 803,
														"src": "10495:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 766,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10495:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 772,
												"initialValue": {
													"arguments": [
														{
															"id": 769,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "10532:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 770,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 761,
															"src": "10539:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 768,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 432,
														"src": "10522:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10522:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10495:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 773,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "10561:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 776,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10585:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 775,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10585:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 774,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10580:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10580:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 778,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10594:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10580:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10561:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 802,
												"nodeType": "IfStatement",
												"src": "10557:309:2",
												"trueBody": {
													"id": 801,
													"nodeType": "Block",
													"src": "10599:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 782,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 780,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "10617:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 781,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 763,
																	"src": "10636:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10617:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 790,
															"nodeType": "IfStatement",
															"src": "10613:130:2",
															"trueBody": {
																"id": 789,
																"nodeType": "Block",
																"src": "10643:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 784,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10695:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 785,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 767,
																					"src": "10704:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 786,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 763,
																					"src": "10722:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 783,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 184,
																				"src": "10668:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 787,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10668:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 788,
																		"nodeType": "RevertStatement",
																		"src": "10661:67:2"
																	}
																]
															}
														},
														{
															"id": 800,
															"nodeType": "UncheckedBlock",
															"src": "10756:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 792,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 759,
																				"src": "10793:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 793,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 761,
																				"src": "10800:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 796,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 794,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 767,
																					"src": "10809:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 795,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 763,
																					"src": "10828:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10809:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 797,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10835:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 791,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				696,
																				756
																			],
																			"referencedDeclaration": 756,
																			"src": "10784:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 798,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10784:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 799,
																	"nodeType": "ExpressionStatement",
																	"src": "10784:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 757,
										"nodeType": "StructuredDocumentation",
										"src": "10120:271:2",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 804,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10405:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10429:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "10421:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10421:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10444:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "10436:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10436:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10461:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "10453:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10453:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10420:47:2"
									},
									"returnParameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10485:0:2"
									},
									"scope": 805,
									"src": "10396:476:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 806,
							"src": "1106:9768:2",
							"usedErrors": [
								165,
								170,
								175,
								184,
								189,
								194
							],
							"usedEvents": [
								817,
								826
							]
						}
					],
					"src": "105:10770:2"
				},
				"id": 2
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							883
						]
					},
					"id": 884,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 807,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 808,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 883,
							"linearizedBaseContracts": [
								883
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 809,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 817,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 810,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 813,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 812,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 815,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 814,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 818,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 826,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 820,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 819,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 822,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 824,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 832,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 883,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 833,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 840,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 834,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 883,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 841,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 850,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 842,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 845,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 844,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 847,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 883,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 851,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 860,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 852,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 883,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 861,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 870,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 862,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 867,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 883,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 871,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 882,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 874,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 876,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 879,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 883,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 884,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								817,
								826
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							883
						],
						"IERC20Metadata": [
							909
						]
					},
					"id": 910,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 885,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 887,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 910,
							"sourceUnit": 884,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 886,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 883,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 889,
										"name": "IERC20",
										"nameLocations": [
											"306:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 883,
										"src": "306:6:4"
									},
									"id": 890,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 888,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:4",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 909,
							"linearizedBaseContracts": [
								909,
								883
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "417:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:4"
									},
									"scope": 909,
									"src": "378:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "540:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 899,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:4"
									},
									"scope": 909,
									"src": "499:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 903,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 908,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:4"
									},
									"returnParameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "674:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 905,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:4"
									},
									"scope": 909,
									"src": "631:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 910,
							"src": "278:405:4",
							"usedErrors": [],
							"usedEvents": [
								817,
								826
							]
						}
					],
					"src": "125:559:4"
				},
				"id": 4
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							939
						]
					},
					"id": 940,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 911,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 912,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 939,
							"linearizedBaseContracts": [
								939
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 920,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 917,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 916,
												"id": 919,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 921,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 914,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 939,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 929,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 926,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 925,
												"id": 928,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 930,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 923,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 939,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 937,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 935,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 934,
												"id": 936,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 938,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 932,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 939,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 940,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			}
		}
	}
}